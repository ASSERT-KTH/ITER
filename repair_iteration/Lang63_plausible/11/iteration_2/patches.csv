bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
2	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
4	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
6	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
8	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
9	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
10	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	120	1	replace
12	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	120	1	replace
13	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  	120	None	replace
14	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	143	1	replace
15	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	143	1	replace
16	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	143	1	replace
17	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	143	1	replace
18	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    	compilable	  [FE]  ComparisonFailure  	199	1	replace
19	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    	compilable	  [FE]  ComparisonFailure  	199	1	replace
20	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    	compilable	  [FE]  ComparisonFailure  	199	1	replace
21	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    	compilable	  [FE]  ComparisonFailure  	199	1	replace
22	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    	compilable	  [FE]  ComparisonFailure  	199	1	replace
23	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    	compilable	  [FE]  ComparisonFailure  	199	1	replace
24	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	178	1	replace
25	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	178	1	replace
26	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	138	1	add
27	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	138	1	add
28	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	138	1	add
29	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	138	1	add
30	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	138	1	add
31	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	138	1	add
32	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	138	1	add
33	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	138	1	add
34	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    days  =  1;  years  =  1;  days  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        =        1;        days    =    1;    years  =  1;  days  =  1;	  	compilable	  [FE]  ComparisonFailure  	93	1	add
35	[BUG]  [BUGGY]  years    =    1;    days  =  1;  years  =  1;  days  =  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    days  =  1;  years  =  1;  days  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        =        1;        days    =    1;    years  =  1;  days  =  1;	  	compilable	  [FE]  ComparisonFailure  	93	1	add
36	[BUG]  [BUGGY]  years    =    1;    days  =  1;  Years  =  1;  days  =  1;  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    days  =  1;  Years  =  1;  days  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        =        1;        days    =    1;    Years  =  1;  days  =  1;	  	non-compiled	[CE]  cannot  find  symbol  Years	93	None	add
37	[BUG]  [BUGGY]  years    =    1;    days  =  1;  Days  =  1;  days  =  1;  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    days  =  1;  Days  =  1;  days  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        =        1;        days    =    1;    Days  =  1;  days  =  1;	  	non-compiled	[CE]  cannot  find  symbol  Days	93	None	add
38	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    days  =  1;  months  =  1;  days  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        =        1;        days    =    1;    months  =  1;  days  =  1;	  	compilable	  [FE]  ComparisonFailure  	93	2	add
39	[BUG]  [BUGGY]  years    =    1;    days  =  1;  months  =  1;  days  =  1;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    days  =  1;  months  =  1;  days  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        =        1;        days    =    1;    months  =  1;  days  =  1;	  	compilable	  [FE]  ComparisonFailure  	93	2	add
40	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    days  =  1;  days  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        =        1;        days    =    1;    days  =  1;	  	compilable	  [FE]  ComparisonFailure  	93	1	add
41	[BUG]  [BUGGY]  years    =    1;    days  =  1;  days  =  1;  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    days  =  1;  days  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        =        1;        days    =    1;    days  =  1;	  	compilable	  [FE]  ComparisonFailure  	93	1	add
42	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.DAY_OF_MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.DAY_OF_MONTH,  months);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	125	None	replace
43	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  years  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  years  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  years  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  	125	None	replace
44	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	198	1	add
45	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	198	1	add
46	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);	  	compilable	  [FE]  ComparisonFailure  	198	1	add
47	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);	  	compilable	  [FE]  ComparisonFailure  	198	1	add
48	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	198	1	add
49	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	198	1	add
50	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	198	1	add
51	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	198	1	add
52	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  Years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [CE]  cannot  find  symbol  Years  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  Years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    Years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	198	None	add
53	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	105	1	replace
54	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	105	1	replace
55	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	105	2	replace
56	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	105	2	replace
57	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	174	1	add
58	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	174	1	add
59	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	174	1	add
60	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	174	1	add
61	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	174	1	add
62	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	174	1	add
63	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	174	1	add
64	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	174	1	add
65	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	174	1	add
66	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	174	1	add
67	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	81	1	replace
68	[BUG]  [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	81	1	replace
69	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	81	1	replace
70	[BUG]  [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	81	1	replace
71	[BUG]  [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	81	None	replace
72	[BUG]  [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	81	None	replace
73	[BUG]  [BUGGY]  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]          ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    Days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  cannot  find  symbol  Days	33	None	replace
74	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  [FE]            ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    Days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  	33	None	replace
75	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_O  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_O  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_O	  	non-compiled	[CE]  ')'  expected	31	None	add
76	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
77	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
78	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	31	None	add
79	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT	  	non-compiled	[CE]  ')'  expected	31	None	add
80	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_	  	non-compiled	[CE]  ')'  expected	31	None	add
81	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	59	1	add
82	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	59	1	add
83	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	59	None	add
84	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,	  	non-compiled	[CE]  ')'  expected	59	None	add
85	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT	  	non-compiled	[CE]  ')'  expected	59	None	add
86	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH	  	non-compiled	[CE]  ')'  expected	59	None	add
87	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months)+    1;    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;	  	compilable	  [FE]  ComparisonFailure  	12	1	add
88	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months)+    1;    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;	  	compilable	  [FE]  ComparisonFailure  	12	1	add
89	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months)+    1;    Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;	  	non-compiled	[CE]  cannot  find  symbol  Years	12	None	add
90	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months)+    1;    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;	  	compilable	  [FE]  ComparisonFailure  	12	2	add
91	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months)+    1;    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;	  	compilable	  [FE]  ComparisonFailure  	12	2	add
92	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months)+    1;    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;	  	compilable	  [FE]  ComparisonFailure  	12	1	add
93	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months)+    1;    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;	  	compilable	  [FE]  ComparisonFailure  	12	1	add
94	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	76	1	add
95	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	76	1	add
96	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	76	1	add
97	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	76	1	add
98	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	76	1	add
99	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	76	1	add
100	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	76	1	add
101	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	76	1	add
102	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days  +  1);	  	compilable	  [FE]  ComparisonFailure  	76	1	add
103	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days  +  1);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days  +  1);	  	compilable	  [FE]  ComparisonFailure  	76	1	add
104	[BUG]  [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	180	None	replace
105	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	180	1	replace
106	[BUG]  [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	180	1	replace
107	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	180	None	replace
108	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);	  days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	69	1	replace
109	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);	  days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	69	1	replace
110	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	69	1	replace
111	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	69	1	replace
112	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	69	1	replace
113	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	69	1	replace
114	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	78	1	add
115	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	78	1	add
116	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	78	1	add
117	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	78	1	add
118	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	78	1	add
119	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	78	1	add
120	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	78	1	add
121	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	78	1	add
122	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	111	1	add
123	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	111	1	add
124	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	111	1	add
125	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	111	1	add
126	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	111	1	add
127	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	111	1	add
128	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	111	1	add
129	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	111	1	add
130	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months)+    1;    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;	  	compilable	  [FE]  ComparisonFailure  	113	1	add
131	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months)+    1;    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;	  	compilable	  [FE]  ComparisonFailure  	113	1	add
132	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months)+    1;    Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;	  	non-compiled	[CE]  cannot  find  symbol  Years	113	None	add
133	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months)+    1;    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;	  	compilable	  [FE]  ComparisonFailure  	113	2	add
134	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months)+    1;    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;	  	compilable	  [FE]  ComparisonFailure  	113	2	add
135	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months)+    1;    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;	  	compilable	  [FE]  ComparisonFailure  	113	1	add
136	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months)+    1;    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;	  	compilable	  [FE]  ComparisonFailure  	113	1	add
137	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
138	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);	  months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	96	2	replace
139	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);	  months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	96	2	replace
140	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
141	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
142	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
143	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
144	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
145	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
146	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
147	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
148	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
149	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
150	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
151	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
152	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
153	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
154	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
155	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
156	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
157	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	129	1	add
158	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	129	1	add
159	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	129	None	add
160	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  days);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  days);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	129	None	add
161	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	129	1	add
162	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	129	1	add
163	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  years);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  years);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	129	None	add
164	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	20	2	add
165	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	20	2	add
166	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	20	2	add
167	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	20	2	add
168	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	20	2	add
169	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	20	2	add
170	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  If(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  If(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    If(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	  	non-compiled	[CE]  ';'  expected	20	None	add
171	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	175	1	replace
172	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	175	1	replace
173	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	175	1	replace
174	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	175	1	replace
175	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    months  =  1;  years  =  1;  months  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        =        1;        months    =    1;    years  =  1;  months  =  1;	  	compilable	  [FE]  ComparisonFailure  	91	2	add
176	[BUG]  [BUGGY]  years    =    1;    months  =  1;  years  =  1;  months  =  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    months  =  1;  years  =  1;  months  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        =        1;        months    =    1;    years  =  1;  months  =  1;	  	compilable	  [FE]  ComparisonFailure  	91	2	add
177	[BUG]  [BUGGY]  years    =    1;    months  =  1;  Years  =  1;  months  =  1;  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    months  =  1;  Years  =  1;  months  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        =        1;        months    =    1;    Years  =  1;  months  =  1;	  	non-compiled	[CE]  cannot  find  symbol  Years	91	None	add
178	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    months  =  1;  months  =  1;  months  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        =        1;        months    =    1;    months  =  1;  months  =  1;	  	compilable	  [FE]  ComparisonFailure  	91	2	add
179	[BUG]  [BUGGY]  years    =    1;    months  =  1;  months  =  1;  months  =  1;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    months  =  1;  months  =  1;  months  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        =        1;        months    =    1;    months  =  1;  months  =  1;	  	compilable	  [FE]  ComparisonFailure  	91	2	add
180	[BUG]  [BUGGY]  years    =    1;    months  =  1;  Years  =  1;  years  =  1;  [CE]  cannot  find  symbol  Years  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    months  =  1;  Years  =  1;  years  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        =        1;        months    =    1;    Years  =  1;  years  =  1;	  	non-compiled	[CE]  cannot  find  symbol  Years	91	None	add
181	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	121	1	add
182	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	121	1	add
183	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	121	None	add
184	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,	  	non-compiled	[CE]  ')'  expected	121	None	add
185	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT	  	non-compiled	[CE]  ')'  expected	121	None	add
186	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_	  	non-compiled	[CE]  ')'  expected	121	None	add
187	[BUG]  [BUGGY]  Years  =  1;  [CE]  cannot  find  symbol  Years  [FE]          ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Years  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Years  =  1;	  years    =    1;    Years    =    1;    	non-compiled	[CE]  cannot  find  symbol  Years	90	None	replace
188	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	150	1	add
189	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	150	1	add
190	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	150	1	add
191	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	150	1	add
192	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	150	1	add
193	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	150	1	add
194	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	150	1	add
195	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	150	1	add
196	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(months,  end,  Calendar.MONTH,  days);  [CE]  method  reduceAndCorrect  in  class  DurationFormatUtils  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(months,  end,  Calendar.MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(months,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  method  reduceAndCorrect  in  class  DurationFormatUtils  cannot  be  applied  to  given  types;	150	None	add
197	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  Y))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  Y))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  Y))  {  months  +=  12  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    M))    {    if(Token.containsTokenWithValue(tokens,    y))    {    months    +=    12    *    years;    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
198	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months    +    1);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
199	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months    +    1);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
200	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months    +    1);    Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);	  	non-compiled	[CE]  cannot  find  symbol  Years	65	None	add
201	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months    +    1);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	65	2	add
202	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months    +    1);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	65	2	add
203	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months    +    1);    years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
204	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months    +    1);    years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
205	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	131	1	replace
206	[BUG]  [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	131	1	replace
207	[BUG]  [BUGGY]  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]              ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Days	131	None	replace
208	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	55	1	replace
209	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	55	1	replace
210	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	55	1	replace
211	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	55	1	replace
212	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);	  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	55	1	replace
213	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);	  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	55	1	replace
214	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	57	1	add
215	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	57	1	add
216	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	57	None	add
217	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,	  	non-compiled	[CE]  ')'  expected	57	None	add
218	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT	  	non-compiled	[CE]  ')'  expected	57	None	add
219	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH	  	non-compiled	[CE]  ')'  expected	57	None	add
220	[BUG]  [BUGGY]  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [CE]  cannot  find  symbol  Years  [FE]                  ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);	  Years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	non-compiled	[CE]  cannot  find  symbol  Years	189	None	replace
221	[BUG]  [BUGGY]  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Years  [FE]                    ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  Years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	non-compiled	[CE]  cannot  find  symbol  Years	189	None	replace
222	[BUG]  [BUGGY]  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [CE]  cannot  find  symbol  Years  [FE]                      ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  Years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	non-compiled	[CE]  cannot  find  symbol  Years	189	None	replace
223	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
224	[BUG]  [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
225	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    centuries);    	compilable	  [FE]  ComparisonFailure  	87	1	replace
226	[BUG]  [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    centuries);    	compilable	  [FE]  ComparisonFailure  	87	1	replace
227	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	61	1	replace
228	[BUG]  [BUGGY]  days  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	61	1	replace
229	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	61	1	replace
230	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	61	1	replace
231	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	74	2	add
232	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	74	2	add
233	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	74	1	add
234	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	74	1	add
235	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	74	2	add
236	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	74	2	add
237	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	74	2	add
238	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	74	2	add
239	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	139	1	replace
240	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	139	1	replace
241	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	51	1	replace
242	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	51	1	replace
243	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  months;  years  -=  12  *  months;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    12    *    months;    years  -=  12  *  months;	  	compilable	  [FE]  ComparisonFailure  	117	1	add
244	[BUG]  [BUGGY]  years  -=  12  *  months;  years  -=  12  *  months;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  months;  years  -=  12  *  months;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    12    *    months;    years  -=  12  *  months;	  	compilable	  [FE]  ComparisonFailure  	117	1	add
245	[BUG]  [BUGGY]  years  -=  12  *  months;  Years  -=  12  *  months;  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  months;  Years  -=  12  *  months;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    12    *    months;    Years  -=  12  *  months;	  	non-compiled	[CE]  cannot  find  symbol  Years	117	None	add
246	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  months;  months  -=  12  *  months;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    12    *    months;    months  -=  12  *  months;	  	compilable	  [FE]  ComparisonFailure  	117	2	add
247	[BUG]  [BUGGY]  years  -=  12  *  months;  months  -=  12  *  months;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  months;  months  -=  12  *  months;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    12    *    months;    months  -=  12  *  months;	  	compilable	  [FE]  ComparisonFailure  	117	2	add
248	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  months;  days  -=  12  *  months;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    12    *    months;    days  -=  12  *  months;	  	compilable	  [FE]  ComparisonFailure  	117	1	add
249	[BUG]  [BUGGY]  years  -=  12  *  months;  days  -=  12  *  months;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  months;  days  -=  12  *  months;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    12    *    months;    days  -=  12  *  months;	  	compilable	  [FE]  ComparisonFailure  	117	1	add
250	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months    +    1);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	10	1	add
251	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months    +    1);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	10	1	add
252	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months    +    1);    Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);	  	non-compiled	[CE]  cannot  find  symbol  Years	10	None	add
253	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months    +    1);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	10	1	add
254	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months    +    1);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	10	1	add
255	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months    +    1);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	10	1	add
256	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months    +    1);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	10	1	add
257	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	130	None	replace
258	[BUG]  [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	130	None	replace
259	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  months  +  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  12  *  months  +  1;	  years    -=    12    *    months;    	compilable	  [FE]  ComparisonFailure  	118	1	replace
260	[BUG]  [BUGGY]  years  -=  12  *  months  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  months  +  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  12  *  months  +  1;	  years    -=    12    *    months;    	compilable	  [FE]  ComparisonFailure  	118	1	replace
261	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  days;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  12  *  days;	  years    -=    12    *    months;    	compilable	  [FE]  ComparisonFailure  	118	1	replace
262	[BUG]  [BUGGY]  years  -=  12  *  days;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  days;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  12  *  days;	  years    -=    12    *    months;    	compilable	  [FE]  ComparisonFailure  	118	1	replace
263	[BUG]  [BUGGY]  years  -=  12  *  YEARS;  [CE]  cannot  find  symbol  YEARS  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  YEARS;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  12  *  YEARS;	  years    -=    12    *    months;    	non-compiled	[CE]  cannot  find  symbol  YEARS	118	None	replace
264	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	84	1	replace
265	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	84	1	replace
266	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	62	1	add
267	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	62	1	add
268	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	62	None	add
269	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT	  	non-compiled	[CE]  ')'  expected	62	None	add
270	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,	  	non-compiled	[CE]  ')'  expected	62	None	add
271	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH	  	non-compiled	[CE]  ')'  expected	62	None	add
272	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	155	1	replace
273	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	155	1	replace
274	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	155	1	replace
275	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	155	1	replace
276	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	non-compiled	[CE]  	155	None	replace
277	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  months;  }	  if(!Token.containsTokenWithValue(tokens,    J))    {    if(Token.containsTokenWithValue(tokens,    J))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
278	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  S))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  months;  }	  if(!Token.containsTokenWithValue(tokens,    J))    {    if(Token.containsTokenWithValue(tokens,    J))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
279	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    J))    {    if(Token.containsTokenWithValue(tokens,    J))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
280	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	148	1	add
281	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	148	1	add
282	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	148	None	add
283	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	148	1	add
284	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	148	1	add
285	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  days);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  days);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	148	None	add
286	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	148	None	add
287	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	200	1	add
288	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	200	1	add
289	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	200	None	add
290	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT	  	non-compiled	[CE]  ')'  expected	200	None	add
291	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,	  	non-compiled	[CE]  ')'  expected	200	None	add
292	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH	  	non-compiled	[CE]  ')'  expected	200	None	add
293	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  H))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	  if(!Token.containsTokenWithValue(tokens,    M))    {    if(Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
294	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  J))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	  if(!Token.containsTokenWithValue(tokens,    M))    {    if(Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
295	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  /  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  /  1);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    	compilable	  [FE]  ComparisonFailure  	98	1	replace
296	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  /  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  /  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  /  1);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    	compilable	  [FE]  ComparisonFailure  	98	1	replace
297	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  2);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  2);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    	compilable	  [FE]  ComparisonFailure  	98	1	replace
298	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  2);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  2);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  2);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    	compilable	  [FE]  ComparisonFailure  	98	1	replace
299	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  12);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  12);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	98	2	replace
300	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  12);  [FE]  ArrayIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  12);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  12);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	98	2	replace
301	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    +=    start.get(Calendar.DAY_OF_MONTH)-    end.get(Calendar.DAY_OF_MONTH);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	181	1	add
302	[BUG]  [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    start.get(Calendar.DAY_OF_MONTH)-    end.get(Calendar.DAY_OF_MONTH);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	181	1	add
303	[BUG]  [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  Days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  Days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    start.get(Calendar.DAY_OF_MONTH)-    end.get(Calendar.DAY_OF_MONTH);    Days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	181	None	add
304	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  years  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    +=    start.get(Calendar.DAY_OF_MONTH)-    end.get(Calendar.DAY_OF_MONTH);    years  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	181	1	add
305	[BUG]  [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  years  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  years  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    start.get(Calendar.DAY_OF_MONTH)-    end.get(Calendar.DAY_OF_MONTH);    years  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	181	1	add
306	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  months  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    +=    start.get(Calendar.DAY_OF_MONTH)-    end.get(Calendar.DAY_OF_MONTH);    months  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	181	1	add
307	[BUG]  [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  months  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  months  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    start.get(Calendar.DAY_OF_MONTH)-    end.get(Calendar.DAY_OF_MONTH);    months  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	181	1	add
308	[BUG]  [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  weeks  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  weeks  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  weeks  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    start.get(Calendar.DAY_OF_MONTH)-    end.get(Calendar.DAY_OF_MONTH);    weeks  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  weeks	181	None	add
309	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	80	1	add
310	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	80	1	add
311	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	80	1	add
312	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	80	1	add
313	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	80	None	add
314	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	80	1	add
315	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	80	1	add
316	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	80	None	add
317	[BUG]  [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months,  y);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months,  y);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months,  y);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH,    months);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	137	None	replace
318	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	23	1	add
319	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	23	1	add
320	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	23	1	add
321	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	23	1	add
322	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
323	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
324	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	23	2	add
325	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	23	2	add
326	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	16	1	add
327	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	16	1	add
328	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	16	1	add
329	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	16	1	add
330	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	16	1	add
331	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	16	1	add
332	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	16	1	add
333	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	16	1	add
334	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  ';'  expected	16	None	add
335	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(months,  end,  Calendar.MONTH,  days);  [CE]  method  reduceAndCorrect  in  class  DurationFormatUtils  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(months,  end,  Calendar.MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(months,  end,  Calendar.MONTH,  days);	  days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  method  reduceAndCorrect  in  class  DurationFormatUtils  cannot  be  applied  to  given  types;	151	None	replace
336	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
337	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
338	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
339	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
340	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.	  	non-compiled	[CE]  ')'  expected	25	None	add
341	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
342	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!To  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!To  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!To	  	non-compiled	[CE]  ')'  expected	25	None	add
343	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    	compilable	  [FE]  ComparisonFailure  	188	2	replace
344	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    	compilable	  [FE]  ComparisonFailure  	188	2	replace
345	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	172	1	add
346	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	172	1	add
347	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	172	1	add
348	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	172	1	add
349	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	172	None	add
350	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	172	1	add
351	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	172	1	add
352	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	172	1	add
353	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	172	1	add
354	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	123	1	replace
355	[BUG]  [BUGGY]  days  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	123	1	replace
356	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	187	2	add
357	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	187	2	add
358	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	187	2	add
359	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	187	2	add
360	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	187	2	add
361	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	187	2	add
362	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  If(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  If(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    If(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }	  	non-compiled	[CE]  ';'  expected	187	None	add
363	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	194	1	replace
364	[BUG]  [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	194	1	replace
365	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	194	1	replace
366	[BUG]  [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	194	1	replace
367	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	119	1	add
368	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	119	1	add
369	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	119	None	add
370	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,	  	non-compiled	[CE]  ')'  expected	119	None	add
371	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT	  	non-compiled	[CE]  ')'  expected	119	None	add
372	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_	  	non-compiled	[CE]  ')'  expected	119	None	add
373	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
374	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
375	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	102	2	add
376	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	102	2	add
377	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
378	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
379	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
380	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
381	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	107	1	add
382	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	107	1	add
383	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	107	1	add
384	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	107	1	add
385	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	107	1	add
386	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	107	1	add
387	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	107	2	add
388	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	107	2	add
389	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	107	1	add
390	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	107	1	add
391	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
392	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
393	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
394	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
395	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
396	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
397	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
398	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
399	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    	compilable	  [FE]  ComparisonFailure  	184	2	replace
400	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    	compilable	  [FE]  ComparisonFailure  	184	2	replace
401	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  years;  }  [CE]  cannot  find  symbol  J  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    	non-compiled	[CE]  cannot  find  symbol  J	184	None	replace
402	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	133	1	add
403	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	133	1	add
404	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	133	None	add
405	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  days);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  days);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	133	None	add
406	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	133	1	add
407	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	133	1	add
408	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	133	None	add
409	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	4	2	replace
410	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	4	2	replace
411	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	4	1	replace
412	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	4	1	replace
413	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
414	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
415	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
416	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
417	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
418	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
419	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
420	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
421	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
422	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
423	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_O  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_O  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_O	  	non-compiled	[CE]  ')'  expected	34	None	add
424	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	34	1	add
425	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	34	1	add
426	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	34	None	add
427	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT	  	non-compiled	[CE]  ')'  expected	34	None	add
428	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_	  	non-compiled	[CE]  ')'  expected	34	None	add
429	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	127	1	add
430	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	127	1	add
431	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	127	None	add
432	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  days);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  days);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	127	None	add
433	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	127	1	add
434	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	127	1	add
435	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	127	2	add
436	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	127	2	add
437	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	173	1	replace
438	[BUG]  [BUGGY]  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	173	1	replace
439	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY  [CE]  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  	173	None	replace
440	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	173	1	replace
441	[BUG]  [BUGGY]  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	173	1	replace
442	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
443	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
444	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
445	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
446	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
447	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
448	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
449	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
450	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)/  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)/  1;	  years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months)+    1;    	compilable	  [FE]  ComparisonFailure  	114	1	replace
451	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)/  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)/  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)/  1;	  years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months)+    1;    	compilable	  [FE]  ComparisonFailure  	114	1	replace
452	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	165	1	replace
453	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	165	1	replace
454	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	95	2	add
455	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	95	2	add
456	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	95	2	add
457	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	95	2	add
458	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	95	2	add
459	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	95	2	add
460	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	95	2	add
461	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	95	2	add
462	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	95	2	add
463	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	95	2	add
464	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  *  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  *  1);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    +    1);    	compilable	  [FE]  ComparisonFailure  	100	1	replace
465	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  *  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  *  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  *  1);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    +    1);    	compilable	  [FE]  ComparisonFailure  	100	1	replace
466	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	86	1	replace
467	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	86	1	replace
468	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	86	None	replace
469	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	35	1	replace
470	[BUG]  [BUGGY]  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	35	1	replace
471	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  	35	None	replace
472	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_O  [CE]  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_O  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_O	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  	35	None	replace
473	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	52	2	add
474	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	52	2	add
475	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	52	2	add
476	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	52	2	add
477	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	52	2	add
478	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	52	2	add
479	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	52	2	add
480	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	52	2	add
481	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	52	2	add
482	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	52	2	add
483	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	45	1	replace
484	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	45	1	replace
485	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	54	1	add
486	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	54	1	add
487	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	54	1	add
488	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	54	1	add
489	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	54	1	add
490	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	54	1	add
491	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	54	2	add
492	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	54	2	add
493	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	54	1	add
494	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	54	1	add
495	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  =  0;  months  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  =  0;  months  =  0;	  years    =    1;    months    =    1;    	compilable	  [FE]  ComparisonFailure  	92	2	replace
496	[BUG]  [BUGGY]  years  =  0;  months  =  0;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  =  0;  months  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  =  0;  months  =  0;	  years    =    1;    months    =    1;    	compilable	  [FE]  ComparisonFailure  	92	2	replace
497	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months  =  0;	  years    =    1;    months    =    1;    	compilable	  [FE]  ComparisonFailure  	92	2	replace
498	[BUG]  [BUGGY]  months  =  0;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months  =  0;	  years    =    1;    months    =    1;    	compilable	  [FE]  ComparisonFailure  	92	2	replace
499	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  =  1;  months  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  =  1;  months  =  0;	  years    =    1;    months    =    1;    	compilable	  [FE]  ComparisonFailure  	92	2	replace
500	[BUG]  [BUGGY]  years  =  1;  months  =  0;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  =  1;  months  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  =  1;  months  =  0;	  years    =    1;    months    =    1;    	compilable	  [FE]  ComparisonFailure  	92	2	replace
501	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	124	1	add
502	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	124	1	add
503	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	124	1	add
504	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	124	1	add
505	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	124	None	add
506	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	124	None	add
507	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	124	None	add
508	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	146	1	add
509	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	146	1	add
510	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	146	None	add
511	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  days);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  days);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	146	None	add
512	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	146	1	add
513	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	146	1	add
514	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	146	None	add
515	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	104	2	add
516	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	104	2	add
517	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	104	2	add
518	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	104	2	add
519	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	104	2	add
520	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	104	2	add
521	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	104	2	add
522	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	104	2	add
523	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	104	2	add
524	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	104	2	add
525	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	164	1	add
526	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	164	1	add
527	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	164	1	add
528	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	164	1	add
529	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Days	164	None	add
530	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);	  	compilable	  [FE]  ComparisonFailure  	164	1	add
531	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);	  	compilable	  [FE]  ComparisonFailure  	164	1	add
532	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	164	1	add
533	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	164	1	add
534	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  2);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  2);	  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months    +    1);    	compilable	  [FE]  ComparisonFailure  	11	1	replace
535	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  2);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  2);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  2);	  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months    +    1);    	compilable	  [FE]  ComparisonFailure  	11	1	replace
536	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  if(Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  if(Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  S))  {  if(Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }	  if(!Token.containsTokenWithValue(tokens,    H))    {    if(Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
537	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }	  if(!Token.containsTokenWithValue(tokens,    H))    {    if(Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
538	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	160	2	add
539	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	160	2	add
540	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	160	2	add
541	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	160	2	add
542	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	160	2	add
543	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	160	2	add
544	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
545	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	160	2	add
546	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	160	2	add
547	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	166	1	add
548	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	166	1	add
549	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	166	1	add
550	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	166	1	add
551	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Days	166	None	add
552	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  centuries);  [CE]  cannot  find  symbol  centuries  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  centuries);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  centuries);	  	non-compiled	[CE]  cannot  find  symbol  centuries	166	None	add
553	[BUG]  [BUGGY]  years  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    -=    ReduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
554	[BUG]  [BUGGY]  months  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    -=    ReduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
555	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  years;  years  -=  12  *  years;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    12    *    years;    years  -=  12  *  years;	  	compilable	  [FE]  ComparisonFailure  	115	1	add
556	[BUG]  [BUGGY]  years  -=  12  *  years;  years  -=  12  *  years;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  years;  years  -=  12  *  years;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    12    *    years;    years  -=  12  *  years;	  	compilable	  [FE]  ComparisonFailure  	115	1	add
557	[BUG]  [BUGGY]  years  -=  12  *  years;  Years  -=  12  *  years;  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  years;  Years  -=  12  *  years;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    12    *    years;    Years  -=  12  *  years;	  	non-compiled	[CE]  cannot  find  symbol  Years	115	None	add
558	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  years;  months  -=  12  *  years;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    12    *    years;    months  -=  12  *  years;	  	compilable	  [FE]  ComparisonFailure  	115	2	add
559	[BUG]  [BUGGY]  years  -=  12  *  years;  months  -=  12  *  years;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  years;  months  -=  12  *  years;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    12    *    years;    months  -=  12  *  years;	  	compilable	  [FE]  ComparisonFailure  	115	2	add
560	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  years;  days  -=  12  *  years;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    12    *    years;    days  -=  12  *  years;	  	compilable	  [FE]  ComparisonFailure  	115	1	add
561	[BUG]  [BUGGY]  years  -=  12  *  years;  days  -=  12  *  years;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  years;  days  -=  12  *  years;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    12    *    years;    days  -=  12  *  years;	  	compilable	  [FE]  ComparisonFailure  	115	1	add
562	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	185	2	add
563	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	185	2	add
564	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	185	2	add
565	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	185	2	add
566	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  If(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  If(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    years;    }    If(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }	  	non-compiled	[CE]  ';'  expected	185	None	add
567	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	185	2	add
568	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	185	2	add
569	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	32	1	replace
570	[BUG]  [BUGGY]  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	32	1	replace
571	[BUG]  [BUGGY]  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  	32	None	replace
572	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	32	1	replace
573	[BUG]  [BUGGY]  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	32	1	replace
574	[BUG]  [BUGGY]  Years.years  =  1;  [CE]  cannot  find  symbol  Years  [FE]        ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Years.years  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Years.years  =  1;	  years    =    1;    Jahre    =    1;    	non-compiled	[CE]  cannot  find  symbol  Years	190	None	replace
575	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	140	1	add
576	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	140	1	add
577	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	140	1	add
578	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	140	1	add
579	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	140	2	add
580	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	140	2	add
581	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	140	1	add
582	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	140	1	add
583	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  weeks  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  weeks  [FE]          ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  weeks  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  weeks  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    weeks    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  weeks	202	None	replace
584	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months,  y);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months,  y);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months,  y);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	101	None	replace
585	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  -  1);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  -  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  -  1);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	101	None	replace
586	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  +  1);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  +  1);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	101	None	replace
587	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_O  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_O  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_O	  	non-compiled	[CE]  ')'  expected	36	None	add
588	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	36	1	add
589	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	36	1	add
590	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	36	None	add
591	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT	  	non-compiled	[CE]  ')'  expected	36	None	add
592	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_	  	non-compiled	[CE]  ')'  expected	36	None	add
593	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months,  y);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months,  y);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months,  y);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	67	None	replace
594	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months),  months);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months),  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months),  months);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  ';'  expected	67	None	replace
595	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	191	1	add
596	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	191	1	add
597	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	191	None	add
598	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT	  	non-compiled	[CE]  ')'  expected	191	None	add
599	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,	  	non-compiled	[CE]  ')'  expected	191	None	add
600	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_	  	non-compiled	[CE]  ')'  expected	191	None	add
601	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	108	1	replace
602	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	108	1	replace
603	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	108	1	replace
604	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	108	1	replace
605	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	142	1	add
606	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	142	1	add
607	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	142	1	add
608	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	142	1	add
609	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	142	1	add
610	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	142	1	add
611	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	142	1	add
612	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	142	1	add
613	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	142	1	add
614	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	142	1	add
615	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
616	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
617	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	3	2	add
618	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	3	2	add
619	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
620	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
621	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
622	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
623	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  	39	None	replace
624	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	39	1	replace
625	[BUG]  [BUGGY]  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	39	1	replace
626	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_O  [CE]  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_O  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_O	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  	39	None	replace
627	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  H))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    M))    {    if(Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    years;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
628	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  J))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    M))    {    if(Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    years;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
629	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	193	1	add
630	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	193	1	add
631	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	193	None	add
632	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT	  	non-compiled	[CE]  ')'  expected	193	None	add
633	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_	  	non-compiled	[CE]  ')'  expected	193	None	add
634	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,	  	non-compiled	[CE]  ')'  expected	193	None	add
635	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	177	1	add
636	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	177	1	add
637	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	177	1	add
638	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	177	1	add
639	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	177	1	add
640	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	177	1	add
641	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	177	1	add
642	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	177	1	add
643	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	177	1	add
644	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	177	1	add
645	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  S))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    J))    {    if(Token.containsTokenWithValue(tokens,    J))    {    months    +=    12    *    years;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
646	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	68	1	add
647	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	68	1	add
648	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	68	1	add
649	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	68	1	add
650	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	68	1	add
651	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	68	1	add
652	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Days	68	None	add
653	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	75	2	replace
654	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	75	2	replace
655	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  2);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  2);	  years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    	compilable	  [FE]  ComparisonFailure  	110	1	replace
656	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  2);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  2);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  2);	  years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    	compilable	  [FE]  ComparisonFailure  	110	1	replace
657	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	179	1	add
658	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	179	1	add
659	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  days);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  days);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	179	None	add
660	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	179	None	add
661	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	179	1	add
662	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	179	1	add
663	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	179	None	add
664	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    years  =  1;  years  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        =        1;        years    =    1;    years  =  1;	  	compilable	  [FE]  ComparisonFailure  	88	1	add
665	[BUG]  [BUGGY]  years    =    1;    years  =  1;  years  =  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    years  =  1;  years  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        =        1;        years    =    1;    years  =  1;	  	compilable	  [FE]  ComparisonFailure  	88	1	add
666	[BUG]  [BUGGY]  years    =    1;    years  =  1;  Years  =  1;  years  =  1;  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    years  =  1;  Years  =  1;  years  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        =        1;        years    =    1;    Years  =  1;  years  =  1;	  	non-compiled	[CE]  cannot  find  symbol  Years	88	None	add
667	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    years  =  1;  months  =  1;  years  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        =        1;        years    =    1;    months  =  1;  years  =  1;	  	compilable	  [FE]  ComparisonFailure  	88	2	add
668	[BUG]  [BUGGY]  years    =    1;    years  =  1;  months  =  1;  years  =  1;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    years  =  1;  months  =  1;  years  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        =        1;        years    =    1;    months  =  1;  years  =  1;	  	compilable	  [FE]  ComparisonFailure  	88	2	add
669	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    years  =  1;  years  =  1;  years  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        =        1;        years    =    1;    years  =  1;  years  =  1;	  	compilable	  [FE]  ComparisonFailure  	88	1	add
670	[BUG]  [BUGGY]  years    =    1;    years  =  1;  years  =  1;  years  =  1;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    years  =  1;  years  =  1;  years  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        =        1;        years    =    1;    years  =  1;  years  =  1;	  	compilable	  [FE]  ComparisonFailure  	88	1	add
671	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    If(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
672	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  S))  {  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    If(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
673	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  J))  {  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    If(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
674	[BUG]  [BUGGY]  Years  =  0L;  [CE]  cannot  find  symbol  Years  [FE]              ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Years  =  0L;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Years  =  0L;	  Years    =    0;    	non-compiled	[CE]  cannot  find  symbol  Years	30	None	replace
675	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
676	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
677	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
678	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
679	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
680	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
681	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
682	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
683	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
684	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
685	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	109	1	add
686	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	109	1	add
687	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	109	1	add
688	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	109	1	add
689	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [CE]  cannot  find  symbol  Years  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	non-compiled	[CE]  cannot  find  symbol  Years	109	None	add
690	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	109	1	add
691	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	109	1	add
692	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	169	1	add
693	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	169	1	add
694	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	169	None	add
695	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT	  	non-compiled	[CE]  ')'  expected	169	None	add
696	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,	  	non-compiled	[CE]  ')'  expected	169	None	add
697	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_	  	non-compiled	[CE]  ')'  expected	169	None	add
698	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months)+  1;	  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months    +    1);    	compilable	  [FE]  ComparisonFailure  	66	1	replace
699	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months)+  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months)+  1;	  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months    +    1);    	compilable	  [FE]  ComparisonFailure  	66	1	replace
700	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  2);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  2);	  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months    +    1);    	compilable	  [FE]  ComparisonFailure  	66	1	replace
701	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  2);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  2);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  2);	  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months    +    1);    	compilable	  [FE]  ComparisonFailure  	66	1	replace
702	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	37	1	replace
703	[BUG]  [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	37	1	replace
704	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	37	1	replace
705	[BUG]  [BUGGY]  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	37	1	replace
706	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	37	1	replace
707	[BUG]  [BUGGY]  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	37	1	replace
708	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)/  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)/  1;	  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months)+    1;    	compilable	  [FE]  ComparisonFailure  	13	1	replace
709	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)/  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)/  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)/  1;	  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months)+    1;    	compilable	  [FE]  ComparisonFailure  	13	1	replace
710	[BUG]  [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	147	None	replace
711	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  days    +=    start.get(Calendar.DAY_OF_MONTH)-    end.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	182	1	replace
712	[BUG]  [BUGGY]  days  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  days    +=    start.get(Calendar.DAY_OF_MONTH)-    end.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	182	1	replace
713	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  begin.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  begin  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  begin.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  begin.get(Calendar.DAY_OF_MONTH);	  days    +=    start.get(Calendar.DAY_OF_MONTH)-    end.get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  cannot  find  symbol  begin	182	None	replace
714	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_O  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_O  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_O	  	non-compiled	[CE]  ')'  expected	38	None	add
715	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	38	1	add
716	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	38	1	add
717	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	38	None	add
718	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT	  	non-compiled	[CE]  ')'  expected	38	None	add
719	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_	  	non-compiled	[CE]  ')'  expected	38	None	add
720	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
721	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
722	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
723	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
724	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	50	2	add
725	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	50	2	add
726	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
727	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
728	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
729	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
730	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	42	2	add
731	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	42	2	add
732	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
733	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
734	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	42	2	add
735	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	42	2	add
736	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
737	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
738	[BUG]  [BUGGY]  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]          ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Days	171	None	replace
739	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
740	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
741	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	85	None	add
742	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	85	None	add
743	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
744	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
745	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  years);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  years);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	85	None	add
746	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	83	1	add
747	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	83	1	add
748	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	83	1	add
749	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	83	1	add
750	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  years);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  years);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	83	None	add
751	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	83	None	add
752	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	83	1	add
753	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	83	1	add
754	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	167	1	replace
755	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	167	1	replace
756	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  J))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  if(!Token.containsTokenWithValue(tokens,    M))    {    if(Token.containsTokenWithValue(tokens,    y))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
757	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  Y))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  Y))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  Y))  {  months  +=  12  *  months;  }	  if(!Token.containsTokenWithValue(tokens,    M))    {    if(Token.containsTokenWithValue(tokens,    y))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
758	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	183	1	add
759	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	183	1	add
760	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	183	1	add
761	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	183	1	add
762	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  If(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  If(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    If(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }	  	non-compiled	[CE]  ';'  expected	183	None	add
763	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  years  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  years  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	183	1	add
764	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  years  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  years  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  years  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	183	1	add
765	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
766	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
767	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
768	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
769	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
770	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
771	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
772	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
773	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
774	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
775	[BUG]  [BUGGY]  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [CE]  cannot  find  symbol  Years  [FE]          ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    Years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Years	176	None	replace
776	[BUG]  [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months,  y);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months,  y);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months,  y);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	70	None	replace
777	[BUG]  [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	70	None	replace
778	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	197	1	replace
779	[BUG]  [BUGGY]  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	197	1	replace
780	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    +    1);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);	  	compilable	  [FE]  ComparisonFailure  	99	1	add
781	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    +    1);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);	  	compilable	  [FE]  ComparisonFailure  	99	1	add
782	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    +    1);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);	  	non-compiled	[CE]  cannot  find  symbol  Days	99	None	add
783	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    +    1);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);	  	compilable	  [FE]  ComparisonFailure  	99	1	add
784	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    +    1);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);	  	compilable	  [FE]  ComparisonFailure  	99	1	add
785	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    +    1);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);	  	compilable	  [FE]  ComparisonFailure  	99	1	add
786	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    +    1);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);	  	compilable	  [FE]  ComparisonFailure  	99	1	add
787	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    +    1);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);	  	compilable	  [FE]  ComparisonFailure  	99	1	add
788	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    +    1);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);	  	compilable	  [FE]  ComparisonFailure  	99	1	add
789	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	72	1	add
790	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	72	1	add
791	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	72	1	add
792	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	72	1	add
793	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	72	1	add
794	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	72	1	add
795	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	72	1	add
796	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	72	1	add
797	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months,  y);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months,  y);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months,  y);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH,    months);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	71	None	replace
798	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH,    months);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	71	None	replace
799	[BUG]  [BUGGY]  Days  =  1;  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Days  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Days  =  1;	  years    =    1;    Days    =    1;    	non-compiled	[CE]  cannot  find  symbol  Days	152	None	replace
800	[BUG]  [BUGGY]  years  =  0;  Days  =  0;  [CE]  cannot  find  symbol  Days  [FE]          ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  =  0;  Days  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  =  0;  Days  =  0;	  years    =    1;    Days    =    1;    	non-compiled	[CE]  cannot  find  symbol  Days	152	None	replace
801	[BUG]  [BUGGY]  Days  =  0;  [CE]  cannot  find  symbol  Days  [FE]            ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Days  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Days  =  0;	  years    =    1;    Days    =    1;    	non-compiled	[CE]  cannot  find  symbol  Days	152	None	replace
802	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  =  1;	  years    =    1;    Days    =    1;    	compilable	  [FE]  ComparisonFailure  	152	1	replace
803	[BUG]  [BUGGY]  days  =  1;  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  =  1;	  years    =    1;    Days    =    1;    	compilable	  [FE]  ComparisonFailure  	152	1	replace
804	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);	  months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	17	1	replace
805	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);	  months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	17	1	replace
806	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;	  months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	17	2	replace
807	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;	  months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	17	2	replace
808	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  if(Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  if(Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  S))  {  if(Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    H))    {    if(Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
809	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    H))    {    if(Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
810	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	154	1	add
811	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	154	1	add
812	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	154	None	add
813	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT	  	non-compiled	[CE]  ')'  expected	154	None	add
814	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,	  	non-compiled	[CE]  ')'  expected	154	None	add
815	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH	  	non-compiled	[CE]  ')'  expected	154	None	add
816	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  24  *  years;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  24  *  years;	  years    -=    12    *    years;    	compilable	  [FE]  ComparisonFailure  	116	1	replace
817	[BUG]  [BUGGY]  years  -=  24  *  years;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  24  *  years;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  24  *  years;	  years    -=    12    *    years;    	compilable	  [FE]  ComparisonFailure  	116	1	replace
818	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  10  *  years;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  10  *  years;	  years    -=    12    *    years;    	compilable	  [FE]  ComparisonFailure  	116	1	replace
819	[BUG]  [BUGGY]  years  -=  10  *  years;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  10  *  years;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  10  *  years;	  years    -=    12    *    years;    	compilable	  [FE]  ComparisonFailure  	116	1	replace
820	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);	  	compilable	  [FE]  ComparisonFailure  	97	1	add
821	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);	  	compilable	  [FE]  ComparisonFailure  	97	1	add
822	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);	  	non-compiled	[CE]  cannot  find  symbol  Days	97	None	add
823	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);	  	compilable	  [FE]  ComparisonFailure  	97	1	add
824	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);	  	compilable	  [FE]  ComparisonFailure  	97	1	add
825	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);	  	compilable	  [FE]  ComparisonFailure  	97	1	add
826	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);	  	compilable	  [FE]  ComparisonFailure  	97	1	add
827	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);	  	compilable	  [FE]  ComparisonFailure  	97	1	add
828	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);	  	compilable	  [FE]  ComparisonFailure  	97	1	add
829	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,    y))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	18	2	add
830	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    y))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	18	2	add
831	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  y))  {  days  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,    y))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  y))  {  days  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	18	2	add
832	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  y))  {  days  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  y))  {  days  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    y))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  y))  {  days  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	18	2	add
833	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,    y))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	18	2	add
834	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    y))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	18	2	add
835	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  If(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  If(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    y))    {    months    +=    12    *    months;    }    If(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }	  	non-compiled	[CE]  ';'  expected	18	None	add
836	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  =  0;  days  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  =  0;  days  =  0;	  years    =    1;    days    =    1;    	compilable	  [FE]  ComparisonFailure  	94	1	replace
837	[BUG]  [BUGGY]  years  =  0;  days  =  0;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  =  0;  days  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  =  0;  days  =  0;	  years    =    1;    days    =    1;    	compilable	  [FE]  ComparisonFailure  	94	1	replace
838	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  =  0;	  years    =    1;    days    =    1;    	compilable	  [FE]  ComparisonFailure  	94	1	replace
839	[BUG]  [BUGGY]  days  =  0;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  =  0;	  years    =    1;    days    =    1;    	compilable	  [FE]  ComparisonFailure  	94	1	replace
840	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  =  0;  days  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months  =  0;  days  =  0;	  years    =    1;    days    =    1;    	compilable	  [FE]  ComparisonFailure  	94	2	replace
841	[BUG]  [BUGGY]  months  =  0;  days  =  0;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  =  0;  days  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months  =  0;  days  =  0;	  years    =    1;    days    =    1;    	compilable	  [FE]  ComparisonFailure  	94	2	replace
842	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	134	1	replace
843	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	134	1	replace
844	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Month  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  ';'  expected	95	None	add
845	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Months  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  cannot  find  symbol  Months	95	None	add
846	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	86	1	replace
847	[BUG]  [BUGGY]  days  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	86	1	replace
848	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Months  [FE]                  ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  Years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	189	None	replace
849	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Days  [FE]                    ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  Years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	non-compiled	[CE]  cannot  find  symbol  Days	189	None	replace
850	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	151	1	replace
851	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	151	1	replace
852	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	179	2	add
853	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	179	2	add
854	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	179	1	add
855	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	179	1	add
856	[BUG]  [BUGGY]  if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    If(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
857	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    J))    {    if(Token.containsTokenWithValue(tokens,    J))    {    months    +=    12    *    years;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
858	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
859	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
860	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  days;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  days;  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
861	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  days;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  days;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  days;  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
862	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  method  reduceAndCorrect  in  class  DurationFormatUtils  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  reduceAndCorrect  in  class  DurationFormatUtils  cannot  be  applied  to  given  types;	170	None	replace
863	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
864	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
865	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
866	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
867	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Years  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	3	None	add
868	[BUG]  [BUGGY]  Years  =  0;  years  =  0;  [CE]  cannot  find  symbol  Years  [FE]        ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Years  =  0;  years  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Years  =  0;  years  =  0;	  years    =    1;    Jahre    =    1;    	non-compiled	[CE]  cannot  find  symbol  Years	190	None	replace
869	[BUG]  [BUGGY]  Years  =  0;  Jahre  =  0;  [CE]  cannot  find  symbol  Years  [FE]          ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Years  =  0;  Jahre  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Years  =  0;  Jahre  =  0;	  years    =    1;    Jahre    =    1;    	non-compiled	[CE]  cannot  find  symbol  Years	190	None	replace
870	[BUG]  [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH,  months);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	101	None	replace
871	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    -=    ReduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
872	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years)+  1;	  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months)+    1;    	compilable	  [FE]  ComparisonFailure  	13	1	replace
873	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years)+  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years)+  1;	  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months)+    1;    	compilable	  [FE]  ComparisonFailure  	13	1	replace
874	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  12);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  12);	  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months    +    1);    	compilable	  [FE]  ComparisonFailure  	11	1	replace
875	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  12);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  12);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  12);	  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months    +    1);    	compilable	  [FE]  ComparisonFailure  	11	1	replace
876	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
877	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
878	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
879	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
880	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Years  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	40	None	add
881	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	62	None	add
882	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	62	None	add
883	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [CE]  [FE]          ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    Days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  	33	None	replace
884	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  Monate  +=  12  *  months;  }  [CE]  cannot  find  symbol  Monate  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  Monate  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  Monate  +=  12  *  months;  }	  	non-compiled	[CE]  cannot  find  symbol  Monate	187	None	add
885	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  Monate  +=  12  *  years;  }  [CE]  cannot  find  symbol  Monate  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  Monate  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  Monate  +=  12  *  years;  }	  	non-compiled	[CE]  cannot  find  symbol  Monate	185	None	add
886	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	119	None	add
887	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	119	None	add
888	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	146	2	add
889	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	146	2	add
890	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	146	1	add
891	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	146	1	add
892	[BUG]  [BUGGY]  if(months!=  null)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(months!=  null)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(months!=  null)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  if(!Token.containsTokenWithValue(tokens,    M))    {    if(Token.containsTokenWithValue(tokens,    y))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
893	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
894	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
895	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
896	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
897	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    H))    {    if(Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
898	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	57	None	add
899	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	57	None	add
900	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	133	1	add
901	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	133	1	add
902	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	133	None	add
903	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months    +    1);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	10	1	add
904	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months    +    1);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	10	1	add
905	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	107	1	add
906	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	107	1	add
907	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	107	None	add
908	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	200	None	add
909	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	200	None	add
910	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months    +    1);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
911	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months    +    1);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
912	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	191	None	add
913	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	191	None	add
914	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    Month  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	non-compiled	[CE]  ';'  expected	177	None	add
915	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	177	1	add
916	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	177	1	add
917	[BUG]  [BUGGY]  years    =    1;    months  =  1;  Days  =  1;  months  =  1;  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    months  =  1;  Days  =  1;  months  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        =        1;        months    =    1;    Days  =  1;  months  =  1;	  	non-compiled	[CE]  cannot  find  symbol  Days	91	None	add
918	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    months  =  1;  days  =  1;  months  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        =        1;        months    =    1;    days  =  1;  months  =  1;	  	compilable	  [FE]  ComparisonFailure  	91	2	add
919	[BUG]  [BUGGY]  years    =    1;    months  =  1;  days  =  1;  months  =  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    months  =  1;  days  =  1;  months  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        =        1;        months    =    1;    days  =  1;  months  =  1;	  	compilable	  [FE]  ComparisonFailure  	91	2	add
920	[BUG]  [BUGGY]  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Days	67	None	replace
921	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	67	None	replace
922	[BUG]  [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH,    months);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	137	None	replace
923	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	53	2	replace
924	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	53	2	replace
925	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
926	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	75	1	replace
927	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	75	1	replace
928	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	44	None	add
929	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
930	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
931	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	108	1	replace
932	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	108	1	replace
933	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	160	2	add
934	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	160	2	add
935	[BUG]  [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAnd  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAnd  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAnd	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  ';'  expected	149	None	replace
936	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [CE]  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  	35	None	replace
937	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [CE]  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  	35	None	replace
938	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
939	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
940	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
941	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
942	[BUG]  [BUGGY]  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [CE]  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  	37	None	replace
943	[BUG]  [BUGGY]  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [CE]  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  	37	None	replace
944	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	154	None	add
945	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_	  	non-compiled	[CE]  ')'  expected	154	None	add
946	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  d))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,  d))  {  months  +=  12  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    	compilable	  [FE]  ComparisonFailure  	184	2	replace
947	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  d))  {  months  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  d))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  d))  {  months  +=  12  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    	compilable	  [FE]  ComparisonFailure  	184	2	replace
948	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    Days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Days	150	None	add
949	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH  -  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH  -  1);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    	compilable	  [FE]  ComparisonFailure  	98	1	replace
950	[BUG]  [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH  -  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH  -  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH  -  1);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    	compilable	  [FE]  ComparisonFailure  	98	1	replace
951	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	102	None	add
952	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
953	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
954	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    	compilable	  [FE]  ComparisonFailure  	77	1	replace
955	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    	compilable	  [FE]  ComparisonFailure  	77	1	replace
956	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	172	1	add
957	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	172	1	add
958	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	174	1	add
959	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	174	1	add
960	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	174	1	add
961	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	174	1	add
962	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [CE]  cannot  find  symbol  Years  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	174	None	add
963	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	174	1	add
964	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	174	1	add
965	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	174	1	add
966	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	174	1	add
967	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	198	1	add
968	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	198	1	add
969	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	124	None	add
970	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT	  	non-compiled	[CE]  ')'  expected	124	None	add
971	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	74	1	add
972	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	74	1	add
973	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	74	1	add
974	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	74	1	add
975	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	74	1	add
976	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	74	1	add
977	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	72	1	add
978	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	72	1	add
979	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	72	1	add
980	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	72	1	add
981	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Years  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	72	None	add
982	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	109	1	add
983	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	109	1	add
984	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end  [CE]  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  	192	None	replace
985	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  12);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  12);	  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months    +    1);    	compilable	  [FE]  ComparisonFailure  	66	1	replace
986	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  12);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  12);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  12);	  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months    +    1);    	compilable	  [FE]  ComparisonFailure  	66	1	replace
987	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	46	None	add
988	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
989	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
990	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    M))    {    if(Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    years;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
991	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	34	1	add
992	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	34	1	add
993	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	34	None	add
994	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT	  	non-compiled	[CE]  ')'  expected	34	None	add
995	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	175	1	replace
996	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	175	1	replace
997	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	197	1	replace
998	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	197	1	replace
999	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	197	1	replace
1000	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	197	1	replace
1001	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	127	1	add
1002	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	127	1	add
1003	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end  [CE]  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	non-compiled	[CE]  	155	None	replace
1004	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);	  	compilable	  [FE]  ComparisonFailure  	166	1	add
1005	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);	  	compilable	  [FE]  ComparisonFailure  	166	1	add
1006	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  days  +=  end.get(Calendar.DAY_OF_MONTH  -  1);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  days  +=  end.get(Calendar.DAY_OF_MONTH  -  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  days  +=  end.get(Calendar.DAY_OF_MONTH  -  1);	  	non-compiled	[CE]  cannot  find  symbol  Days	166	None	add
1007	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Days	166	None	add
1008	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	59	None	add
1009	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	59	None	add
1010	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	80	2	add
1011	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	80	2	add
1012	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	80	None	add
1013	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	156	None	add
1014	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	111	1	add
1015	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	111	1	add
1016	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	111	None	add
1017	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  7  *  years;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  7  *  years;	  years    -=    12    *    years;    	compilable	  [FE]  ComparisonFailure  	116	1	replace
1018	[BUG]  [BUGGY]  years  -=  7  *  years;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  7  *  years;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  7  *  years;	  years    -=    12    *    years;    	compilable	  [FE]  ComparisonFailure  	116	1	replace
1019	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  months  +  2;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  12  *  months  +  2;	  years    -=    12    *    months;    	compilable	  [FE]  ComparisonFailure  	118	1	replace
1020	[BUG]  [BUGGY]  years  -=  12  *  months  +  2;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  12  *  months  +  2;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  12  *  months  +  2;	  years    -=    12    *    months;    	compilable	  [FE]  ComparisonFailure  	118	1	replace
1021	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	73	1	replace
1022	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	73	1	replace
1023	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	73	1	replace
1024	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	73	1	replace
1025	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	142	1	add
1026	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	142	1	add
1027	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	142	None	add
1028	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	142	1	add
1029	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	142	1	add
1030	[BUG]  [BUGGY]  if(months!=  null)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(months!=  null)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(months!=  null)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    y))    {    if(Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1031	[BUG]  [BUGGY]  years  =  0;  Years  =  0;  [CE]  cannot  find  symbol  Years  [FE]          ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  =  0;  Years  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  =  0;  Years  =  0;	  years    =    1;    Years    =    1;    	non-compiled	[CE]  cannot  find  symbol  Years	90	None	replace
1032	[BUG]  [BUGGY]  years  =  0;  Years  =  1;  [CE]  cannot  find  symbol  Years  [FE]            ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  =  0;  Years  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  =  0;  Years  =  1;	  years    =    1;    Years    =    1;    	non-compiled	[CE]  cannot  find  symbol  Years	90	None	replace
1033	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	54	None	add
1034	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	54	1	add
1035	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	54	1	add
1036	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	69	1	replace
1037	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	69	1	replace
1038	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  Y))  {  months  +=  12  *  months;  }  [CE]  cannot  find  symbol  Y  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  Y))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    y))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  Y))  {  months  +=  12  *  months;  }	  	non-compiled	[CE]  cannot  find  symbol  Y	18	None	add
1039	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
1040	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    days  =  1;  days  =  1;  days  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        =        1;        days    =    1;    days  =  1;  days  =  1;	  	compilable	  [FE]  ComparisonFailure  	93	1	add
1041	[BUG]  [BUGGY]  years    =    1;    days  =  1;  days  =  1;  days  =  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    days  =  1;  days  =  1;  days  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        =        1;        days    =    1;    days  =  1;  days  =  1;	  	compilable	  [FE]  ComparisonFailure  	93	1	add
1042	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	83	2	add
1043	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	83	2	add
1044	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	83	None	add
1045	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	76	1	add
1046	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	76	1	add
1047	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	76	1	add
1048	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	76	1	add
1049	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	55	1	replace
1050	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	55	1	replace
1051	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	138	1	add
1052	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	138	1	add
1053	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	138	None	add
1054	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	138	1	add
1055	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	138	1	add
1056	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	23	2	add
1057	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	23	2	add
1058	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	64	1	replace
1059	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	64	1	replace
1060	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	129	2	add
1061	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	129	2	add
1062	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	129	1	add
1063	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	129	1	add
1064	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	164	1	add
1065	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	164	1	add
1066	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Days	164	None	add
1067	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
1068	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
1069	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
1070	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
1071	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	52	2	add
1072	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	52	2	add
1073	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	52	None	add
1074	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	52	2	add
1075	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	52	2	add
1076	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	147	1	replace
1077	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	147	1	replace
1078	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	183	2	add
1079	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	183	2	add
1080	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	183	2	add
1081	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	183	2	add
1082	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	104	None	add
1083	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY  [CE]  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  	173	None	replace
1084	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_O  [CE]  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_O  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_O	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  	173	None	replace
1085	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	20	2	add
1086	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	20	2	add
1087	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	78	1	add
1088	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	78	1	add
1089	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	78	None	add
1090	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	16	1	add
1091	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	16	1	add
1092	[BUG]  [BUGGY]  years    =    1;    years  =  1;  Days  =  1;  years  =  1;  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    years  =  1;  Days  =  1;  years  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        =        1;        years    =    1;    Days  =  1;  years  =  1;	  	non-compiled	[CE]  cannot  find  symbol  Days	88	None	add
1093	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	121	None	add
1094	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  months;  }	  if(!Token.containsTokenWithValue(tokens,    J))    {    if(Token.containsTokenWithValue(tokens,    J))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
1095	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
1096	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
1097	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	50	None	add
1098	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
1099	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
1100	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  12);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  12);	  years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    	compilable	  [FE]  ComparisonFailure  	110	1	replace
1101	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  12);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  12);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  12);	  years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    	compilable	  [FE]  ComparisonFailure  	110	1	replace
1102	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	47	1	replace
1103	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	47	1	replace
1104	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	47	1	replace
1105	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	47	1	replace
1106	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	  if(!Token.containsTokenWithValue(tokens,    M))    {    if(Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1107	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	79	1	replace
1108	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	79	1	replace
1109	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	148	2	add
1110	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	148	2	add
1111	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF	  	non-compiled	[CE]  ')'  expected	148	None	add
1112	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
1113	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
1114	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	85	None	add
1115	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar	  	non-compiled	[CE]  ')'  expected	85	None	add
1116	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,	  	non-compiled	[CE]  ')'  expected	85	None	add
1117	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	169	None	add
1118	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
1119	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
1120	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
1121	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
1122	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Years  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	1	None	add
1123	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
1124	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  method  reduceAndCorrect  in  class  DurationFormatUtils  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  reduceAndCorrect  in  class  DurationFormatUtils  cannot  be  applied  to  given  types;	125	None	replace
1125	[BUG]  [BUGGY]  Years  =  0;  months  =  0;  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Years  =  0;  months  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Years  =  0;  months  =  0;	  years    =    1;    months    =    1;    	non-compiled	[CE]  cannot  find  symbol  Years	92	None	replace
1126	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  weeks);  [CE]  cannot  find  symbol  weeks  [FE]          ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  weeks);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  weeks);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    weeks    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  weeks	202	None	replace
1127	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [CE]  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  	39	None	replace
1128	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [CE]  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  	39	None	replace
1129	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	140	1	add
1130	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	140	1	add
1131	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	140	None	add
1132	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	140	1	add
1133	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	140	1	add
1134	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol	140	None	add
1135	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	194	1	replace
1136	[BUG]  [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	194	1	replace
1137	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	194	1	replace
1138	[BUG]  [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	194	1	replace
1139	[BUG]  [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  	194	None	replace
1140	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	193	None	add
1141	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	193	1	add
1142	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	193	1	add
1143	[BUG]  [BUGGY]  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [CE]  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  	32	None	replace
1144	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH  +  1);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    +    1);    	compilable	  [FE]  ComparisonFailure  	100	1	replace
1145	[BUG]  [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH  +  1);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    +    1);    	compilable	  [FE]  ComparisonFailure  	100	1	replace
1146	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	38	None	add
1147	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
1148	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
1149	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
1150	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
1151	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol	42	None	add
1152	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	191	1	add
1153	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	191	1	add
1154	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	191	None	add
1155	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	191	None	add
1156	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  L))  {  months  +=  12  *  months;  }  [CE]  cannot  find  symbol  L  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  L))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  L))  {  months  +=  12  *  months;  }	  if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  cannot  find  symbol  L	188	None	replace
1157	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Days	151	None	replace
1158	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	166	1	add
1159	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	166	1	add
1160	[BUG]  [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months),  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months),  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months),  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  ';'  expected	70	None	replace
1161	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	59	None	add
1162	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	59	1	add
1163	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	59	1	add
1164	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	59	None	add
1165	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	59	None	add
1166	[BUG]  [BUGGY]  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]          ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Days	171	None	replace
1167	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	62	None	add
1168	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	62	1	add
1169	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	62	1	add
1170	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	62	None	add
1171	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	62	None	add
1172	[BUG]  [BUGGY]  Years  =  0l;  [CE]  cannot  find  symbol  Years  [FE]              ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Years  =  0l;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Years  =  0l;	  Years    =    0;    	non-compiled	[CE]  cannot  find  symbol  Years	30	None	replace
1173	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	133	2	add
1174	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	133	2	add
1175	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	133	None	add
1176	[BUG]  [BUGGY]  years    =    1;    years  =  1;  Jahre  =  1;  years  =  1;  [CE]  cannot  find  symbol  Jahre  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    years  =  1;  Jahre  =  1;  years  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        =        1;        years    =    1;    Jahre  =  1;  years  =  1;	  	non-compiled	[CE]  cannot  find  symbol  Jahre	88	None	add
1177	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	52	2	add
1178	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	52	2	add
1179	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	52	2	add
1180	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	52	2	add
1181	[BUG]  [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);	  days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH,    months);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	137	None	replace
1182	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	119	1	add
1183	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	119	1	add
1184	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	119	None	add
1185	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	119	None	add
1186	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Months  [FE]            ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	5	None	replace
1187	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	57	None	add
1188	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	57	1	add
1189	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	57	1	add
1190	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	57	None	add
1191	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	57	None	add
1192	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	200	None	add
1193	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	200	1	add
1194	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	200	1	add
1195	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	200	1	add
1196	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	200	1	add
1197	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	200	None	add
1198	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	180	1	replace
1199	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	180	1	replace
1200	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  Jahre  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [CE]  cannot  find  symbol  Jahre  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  Jahre  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months)+    1;    Jahre  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;	  	non-compiled	[CE]  cannot  find  symbol  Jahre	12	None	add
1201	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  -  12);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  -  12);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months  -  12);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	101	None	replace
1202	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
1203	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
1204	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	124	None	add
1205	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	124	1	add
1206	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	124	1	add
1207	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	124	None	add
1208	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol	142	None	add
1209	[BUG]  [BUGGY]  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]            ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Days	131	None	replace
1210	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	160	2	add
1211	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	160	2	add
1212	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.JANUARY,  years);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.JANUARY,  years);	  years    =    1;    years    =    1;    	compilable	  [FE]  ComparisonFailure  	89	1	replace
1213	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.JANUARY,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.JANUARY,  years);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.JANUARY,  years);	  years    =    1;    years    =    1;    	compilable	  [FE]  ComparisonFailure  	89	1	replace
1214	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  365  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  365  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    years;    }    	compilable	  [FE]  ComparisonFailure  	186	2	replace
1215	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  365  *  years;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  365  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  365  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    years;    }    	compilable	  [FE]  ComparisonFailure  	186	2	replace
1216	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  H))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    J))    {    if(Token.containsTokenWithValue(tokens,    J))    {    months    +=    12    *    years;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
1217	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  H))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  months;  }	  if(!Token.containsTokenWithValue(tokens,    J))    {    if(Token.containsTokenWithValue(tokens,    J))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
1218	[BUG]  [BUGGY]  years    =    1;    months  =  1;  Jahre  =  1;  months  =  1;  [CE]  cannot  find  symbol  Jahre  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    =    1;    months  =  1;  Jahre  =  1;  months  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        =        1;        months    =    1;    Jahre  =  1;  months  =  1;	  	non-compiled	[CE]  cannot  find  symbol  Jahre	91	None	add
1219	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
1220	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    H))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
1221	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	36	None	add
1222	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH	  	non-compiled	[CE]  ')'  expected	31	None	add
1223	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  365  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  365  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    	compilable	  [FE]  ComparisonFailure  	184	1	replace
1224	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  365  *  years;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  365  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  365  *  years;  }	  if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    	compilable	  [FE]  ComparisonFailure  	184	1	replace
1225	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  10  *  months;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  10  *  months;	  years    -=    12    *    months;    	compilable	  [FE]  ComparisonFailure  	118	1	replace
1226	[BUG]  [BUGGY]  years  -=  10  *  months;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  10  *  months;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  10  *  months;	  years    -=    12    *    months;    	compilable	  [FE]  ComparisonFailure  	118	1	replace
1227	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
1228	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
1229	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
1230	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	83	None	add
1231	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
1232	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
1233	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
1234	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
1235	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	50	2	add
1236	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	50	2	add
1237	[BUG]  [BUGGY]  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Month  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	non-compiled	[CE]  ';'  expected	53	None	replace
1238	[BUG]  [BUGGY]  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  ';'  expected	141	None	replace
1239	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	194	1	replace
1240	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	194	1	replace
1241	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	173	1	replace
1242	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    +=    end.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	173	1	replace
1243	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	143	1	replace
1244	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	143	1	replace
1245	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	121	1	add
1246	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	121	1	add
1247	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	121	None	add
1248	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	121	None	add
1249	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Months  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Months	16	None	add
1250	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH)+  1;	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    +    1);    	compilable	  [FE]  ComparisonFailure  	100	1	replace
1251	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH)+  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH)+  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH)+  1;	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    +    1);    	compilable	  [FE]  ComparisonFailure  	100	1	replace
1252	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	125	1	replace
1253	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	125	1	replace
1254	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	78	1	add
1255	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	78	1	add
1256	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	78	1	add
1257	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	78	1	add
1258	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [CE]  cannot  find  symbol  Months  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Months	177	None	add
1259	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	54	1	add
1260	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	54	1	add
1261	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [CE]  [FE]            ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  	123	None	replace
1262	[BUG]  [BUGGY]  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Month  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	non-compiled	[CE]  ';'  expected	75	None	replace
1263	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	23	2	add
1264	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	23	2	add
1265	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(years!=  0)  {  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(years!=  0)  {  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  }	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	79	1	replace
1266	[BUG]  [BUGGY]  if(years!=  0)  {  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(years!=  0)  {  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(years!=  0)  {  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  }	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	79	1	replace
1267	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  =  0;  years  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  =  0;  years  =  0;	  years    =    1;    Jahre    =    1;    	compilable	  [FE]  ComparisonFailure  	190	1	replace
1268	[BUG]  [BUGGY]  years  =  0;  years  =  0;  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  =  0;  years  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  =  0;  years  =  0;	  years    =    1;    Jahre    =    1;    	compilable	  [FE]  ComparisonFailure  	190	1	replace
1269	[BUG]  [BUGGY]  years  =  0;  Jahre  =  0;  [CE]  cannot  find  symbol  Jahre  [FE]          ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  =  0;  Jahre  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  =  0;  Jahre  =  0;	  years    =    1;    Jahre    =    1;    	non-compiled	[CE]  cannot  find  symbol  Jahre	190	None	replace
1270	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  =  0;  years  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  =  0;  years  =  1;	  years    =    1;    Jahre    =    1;    	compilable	  [FE]  ComparisonFailure  	190	1	replace
1271	[BUG]  [BUGGY]  years  =  0;  years  =  1;  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  =  0;  years  =  1;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  =  0;  years  =  1;	  years    =    1;    Jahre    =    1;    	compilable	  [FE]  ComparisonFailure  	190	1	replace
1272	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	140	1	add
1273	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	140	1	add
1274	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
1275	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONT  [CE]  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONT	          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  	149	None	replace
1276	[BUG]  [BUGGY]  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]            ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Days	61	None	replace
1277	[BUG]  [BUGGY]  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH,    months);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Days	71	None	replace
1278	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
1279	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    +=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
1280	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  1;  days  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  1;  days  =  0;	  years    =    1;    days    =    1;    	compilable	  [FE]  ComparisonFailure  	94	1	replace
1281	[BUG]  [BUGGY]  years  -=  1;  days  =  0;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years  -=  1;  days  =  0;  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  1;  days  =  0;	  years    =    1;    days    =    1;    	compilable	  [FE]  ComparisonFailure  	94	1	replace
1282	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
1283	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  days  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
1284	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
1285	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    days    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  days  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
1286	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	25	2	add
1287	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	25	2	add
1288	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	25	2	add
1289	[BUG]  [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                if(!Token.containsTokenWithValue(tokens,        M))        {        months        +=        12        *        months;        }        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	25	2	add
1290	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
1291	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
1292	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
1293	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
1294	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	74	1	add
1295	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	74	1	add
1296	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	74	2	add
1297	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	74	2	add
1298	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	74	2	add
1299	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	74	2	add
1300	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	174	1	add
1301	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	174	1	add
1302	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	174	None	add
1303	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	129	None	add
1304	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months    +    1);    Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	non-compiled	[CE]  cannot  find  symbol  Years	76	None	add
1305	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	72	1	add
1306	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	72	1	add
1307	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	72	1	add
1308	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	72	1	add
1309	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [CE]  cannot  find  symbol  Months  [FE]          ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	          years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    Years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	176	None	replace
1310	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	179	None	add
1311	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	104	2	add
1312	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	104	2	add
1313	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	104	2	add
1314	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	104	2	add
1315	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	193	None	add
1316	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	193	1	add
1317	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	193	1	add
1318	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.YEAR,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.YEAR,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	193	None	add
1319	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	193	1	add
1320	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    start.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	193	1	add
1321	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  *  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  *  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	165	1	replace
1322	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  *  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  *  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  *  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH    -    1);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	165	1	replace
1323	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [CE]  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONT	          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  	170	None	replace
1324	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
1325	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
1326	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
1327	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
1328	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  Monate  +=  12  *  months;  }  [CE]  cannot  find  symbol  Monate  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  Monate  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    S))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  Monate  +=  12  *  months;  }	  	non-compiled	[CE]  cannot  find  symbol  Monate	20	None	add
1329	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	169	1	add
1330	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	169	1	add
1331	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	169	None	add
1332	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	169	None	add
1333	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  Monate  +=  12  *  years;  }  [CE]  cannot  find  symbol  Monate  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  Monate  +=  12  *  years;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  Monate  +=  12  *  years;  }	  	non-compiled	[CE]  cannot  find  symbol  Monate	183	None	add
1334	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
1335	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        days);        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
1336	[BUG]  [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	127	None	add
1337	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH	  	non-compiled	[CE]  ')'  expected	38	None	add
1338	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,    y))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	18	2	add
1339	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    y))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	18	2	add
1340	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  y))  {  Monate  +=  12  *  months;  }  [CE]  cannot  find  symbol  Monate  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  y))  {  Monate  +=  12  *  months;  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,    y))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  y))  {  Monate  +=  12  *  months;  }	  	non-compiled	[CE]  cannot  find  symbol  Monate	18	None	add
1341	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
1342	[BUG]  [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
1343	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months),  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months),  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months),  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  ';'  expected	67	None	replace
1344	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	154	None	add
1345	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	154	1	add
1346	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	154	1	add
1347	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.YEAR,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	154	None	add
1348	[BUG]  [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]          days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH,  months);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	                days        +=        end.get(Calendar.DAY_OF_MONTH)-        start.get(Calendar.DAY_OF_MONTH);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.MONTH,  months);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	154	None	add
1349	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	138	1	add
1350	[BUG]  [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;      [BUGGY]  years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	138	1	add
