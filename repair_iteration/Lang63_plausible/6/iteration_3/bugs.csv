bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(field,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(field,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(field,  difference);	  int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	74	None	replace
2	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(endValue,  startValue  -  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(endValue,  startValue  -  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(endValue,  startValue  -  1);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	94	None	replace
3	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(newdiff,  endValue  -  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(newdiff,  endValue  -  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(newdiff,  endValue  -  1);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	94	None	replace
4	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  newdiff  -  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  newdiff  -  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(startValue,  newdiff  -  1);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	94	None	replace
5	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  newdiff  -  1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  newdiff  -  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(startValue,  newdiff  -  1);	  int    milliseconds    =    getMilliseconds(startValue,    newdiff);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
6	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  newdiff,  difference);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  newdiff,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(startValue,  newdiff,  difference);	  int    milliseconds    =    getMilliseconds(startValue,    newdiff);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
7	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  field  -  startValue);  end.add(newdiff,  field  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(newdiff,    field    -    startValue);    end.add(newdiff,  field  -  startValue);	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
8	[BUG]  [BUGGY]  end.add(newdiff,  field  -  startValue);  end.add(newdiff,  field  -  startValue);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  field  -  startValue);  end.add(newdiff,  field  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,    field    -    startValue);    end.add(newdiff,  field  -  startValue);	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
9	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  field  -  startValue);  start.add(newdiff,  field  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(newdiff,    field    -    startValue);    start.add(newdiff,  field  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	49	1	add
10	[BUG]  [BUGGY]  end.add(newdiff,  field  -  startValue);  start.add(newdiff,  field  -  startValue);  [FE]  ComparisonFailure  [FE]      IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  field  -  startValue);  start.add(newdiff,  field  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,    field    -    startValue);    start.add(newdiff,  field  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	49	1	add
11	[BUG]  [BUGGY]  end.add(newdiff,  field  -  startValue);  int  newdiff  =  startValue  -  startValue;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  field  -  startValue);  int  newdiff  =  startValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,    field    -    startValue);    int  newdiff  =  startValue  -  startValue;	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	49	None	add
12	[BUG]  [BUGGY]  end.add(newdiff,  field  -  startValue);  int  newdiff  =  startValue.get(field);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  field  -  startValue);  int  newdiff  =  startValue.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,    field    -    startValue);    int  newdiff  =  startValue.get(field);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	49	None	add
13	[BUG]  [BUGGY]  end.add(newdiff,  field  -  startValue);  int  newdiff  =  startValue  -  endValue;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  field  -  startValue);  int  newdiff  =  startValue  -  endValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,    field    -    startValue);    int  newdiff  =  startValue  -  endValue;	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	49	None	add
14	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  +  1  *  difference  -  1);  end.add(field,  newdiff  +  1  *  difference  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,    newdiff    +    1    *    difference    -    1);    end.add(field,  newdiff  +  1  *  difference  -  1);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
15	[BUG]  [BUGGY]  end.add(field,  newdiff  +  1  *  difference  -  1);  end.add(field,  newdiff  +  1  *  difference  -  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  +  1  *  difference  -  1);  end.add(field,  newdiff  +  1  *  difference  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    +    1    *    difference    -    1);    end.add(field,  newdiff  +  1  *  difference  -  1);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
16	[BUG]  [BUGGY]  end.add(field,  newdiff  +  1  *  difference  -  1);  int  end.add(field,  newdiff  +  1  *  difference  -  1);  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  +  1  *  difference  -  1);  int  end.add(field,  newdiff  +  1  *  difference  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    +    1    *    difference    -    1);    int  end.add(field,  newdiff  +  1  *  difference  -  1);	  	non-compiled	[CE]  ';'  expected	1	None	add
17	[BUG]  [BUGGY]  end.add(field,  newdiff  +  1  *  difference  -  1);  End.add(field,  newdiff  +  1  *  difference  -  1);  [CE]  cannot  find  symbol  End  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  +  1  *  difference  -  1);  End.add(field,  newdiff  +  1  *  difference  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    +    1    *    difference    -    1);    End.add(field,  newdiff  +  1  *  difference  -  1);	  	non-compiled	[CE]  cannot  find  symbol  End	1	None	add
18	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  newdiff  -  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  newdiff  -  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(startValue,  newdiff  -  difference);	  int    days    =    DateTimeUtils.getDaysInYear(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	62	None	replace
19	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(endValue,  startValue  -  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(endValue,  startValue  -  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(endValue,  startValue  -  difference);	  int    days    =    DateTimeUtils.getDaysInYear(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	62	None	replace
20	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue  -  newdiff);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue  -  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue  -  newdiff);	  int    days    =    DateTimeUtils.getDaysInYear(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	62	None	replace
21	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(field,  endValue  -  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(field,  endValue  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(field,  endValue  -  startValue);	  int    days    =    DateTimeUtils.getDaysInYear(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	62	None	replace
22	[BUG]  [BUGGY]  End.add(field,  newdiff  +  1  *  difference  );  [CE]  cannot  find  symbol  End  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  End.add(field,  newdiff  +  1  *  difference  );  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	End.add(field,  newdiff  +  1  *  difference  );	  end.add(field,    newdiff    +    1    *    difference    );    End.add(field,    newdiff    +    1    *    difference    );    	non-compiled	[CE]  cannot  find  symbol  End	79	None	replace
23	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  difference  -  startValue);  [CE]  variable  milliseconds  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  difference  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(milliseconds,  difference  -  startValue);	          int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    	non-compiled	[CE]  variable  milliseconds  might  not  have  been  initialized	58	None	replace
24	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  endValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  endValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  endValue);	  int    days    =    DateTimeUtils.getDaysInYearMonth(newdiff,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	8	None	replace
25	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  startValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  startValue,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  startValue,  difference);	  int    days    =    DateTimeUtils.getDaysInYearMonth(newdiff,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	8	None	replace
26	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  newdiff,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  newdiff,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  newdiff,  difference);	  int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	16	None	replace
27	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue,  newdiff);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue,  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue,  newdiff);	  int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	16	None	replace
28	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  startValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  startValue,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  startValue,  difference);	  int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	16	None	replace
29	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  endValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  endValue,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  endValue,  difference);	  int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	16	None	replace
30	[BUG]  [BUGGY]  Int  days  =  endValue  -  startValue;  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  Int  days  =  endValue  -  startValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	Int  days  =  endValue  -  startValue;	          int    days    =    startValue    -    startValue;    Int    days    =    startValue    -    startValue;    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
31	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  startValue  -  newdiff);  [CE]  variable  milliseconds  might  not  have  been  initialized  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  startValue  -  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(milliseconds,  startValue  -  newdiff);	  int    milliseconds    =    Math.min(milliseconds,    startValue    -    endValue);    	non-compiled	[CE]  variable  milliseconds  might  not  have  been  initialized	64	None	replace
32	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  newdiff  -  difference);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  newdiff  -  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(startValue,  newdiff  -  difference);	  int    milliseconds    =    getMilliseconds(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
33	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(diff,  endValue  -  startValue);  [CE]  cannot  find  symbol  diff  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(diff,  endValue  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(diff,  endValue  -  startValue);	  int    milliseconds    =    getMilliseconds(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  diff	66	None	replace
34	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  endValue  -  newdiff);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  endValue  -  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(startValue,  endValue  -  newdiff);	  int    milliseconds    =    getMilliseconds(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
35	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  endValue  -  startValue);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  endValue  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(newdiff,  endValue  -  startValue);	  int    milliseconds    =    getMilliseconds(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
36	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  end);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  end);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(startValue,  end);	  int    days    =    DateTimeUtils.getDays(end,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	93	None	replace
37	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(endValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(endValue,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(endValue,  difference);	  int    days    =    DateTimeUtils.getDays(end,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	93	None	replace
38	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(startValue,  newdiff  +  1);  end.add(startValue,  newdiff  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(startValue,    newdiff    +    1);    end.add(startValue,  newdiff  +  1);	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
39	[BUG]  [BUGGY]  end.add(startValue,  newdiff  +  1);  end.add(startValue,  newdiff  +  1);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(startValue,  newdiff  +  1);  end.add(startValue,  newdiff  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(startValue,    newdiff    +    1);    end.add(startValue,  newdiff  +  1);	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
40	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(startValue,  newdiff  +  1);  start.add(startValue,  newdiff  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(startValue,    newdiff    +    1);    start.add(startValue,  newdiff  +  1);	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
41	[BUG]  [BUGGY]  end.add(startValue,  newdiff  +  1);  start.add(startValue,  newdiff  +  1);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(startValue,  newdiff  +  1);  start.add(startValue,  newdiff  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(startValue,    newdiff    +    1);    start.add(startValue,  newdiff  +  1);	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
42	[BUG]  [BUGGY]  end.add(startValue,  newdiff  +  1);  int  startValue  =  getChronology().years().remove(startValue);  end.add(startValue,  newdiff  +  1);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(startValue,  newdiff  +  1);  int  startValue  =  getChronology().years().remove(startValue);  end.add(startValue,  newdiff  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(startValue,    newdiff    +    1);    int  startValue  =  getChronology().years().remove(startValue);  end.add(startValue,  newdiff  +  1);	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	9	None	add
43	[BUG]  [BUGGY]  end.add(startValue,  newdiff  +  1);  int  end.add(startValue,  newdiff  +  1);  [CE]  ';'  expected  [FE]          IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(startValue,  newdiff  +  1);  int  end.add(startValue,  newdiff  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(startValue,    newdiff    +    1);    int  end.add(startValue,  newdiff  +  1);	  	non-compiled	[CE]  ';'  expected	9	None	add
44	[BUG]  [BUGGY]  end.add(startValue,  newdiff  +  1);  int  startValue  =  getChronology().months().remove(startValue);  end.add(startValue,  newdiff  +  1);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(startValue,  newdiff  +  1);  int  startValue  =  getChronology().months().remove(startValue);  end.add(startValue,  newdiff  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(startValue,    newdiff    +    1);    int  startValue  =  getChronology().months().remove(startValue);  end.add(startValue,  newdiff  +  1);	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	9	None	add
45	[BUG]  [BUGGY]  int  seconds  =  endValue  -  beginValue;  [CE]  cannot  find  symbol  beginValue  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  seconds  =  endValue  -  beginValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =  endValue  -  beginValue;	          int    seconds    =    startValue    -    startValue;    int    seconds    =    endValue    -    startValue;    	non-compiled	[CE]  cannot  find  symbol  beginValue	40	None	replace
46	[BUG]  [BUGGY]  int  days  =  endValue.get(startValue);  [CE]  int  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  endValue.get(startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  endValue.get(startValue);	          int    days    =    startValue    -    startValue;    int    days    =    startValue    -    endValue;    	non-compiled	[CE]  int  cannot  be  dereferenced	25	None	replace
47	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(diff,  endValue  -  startValue);  Int  milliseconds  =  Math.min(milliseconds,  endValue  -  startValue);  [CE]  cannot  find  symbol  diff  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.min(diff,  endValue  -  startValue);  Int  milliseconds  =  Math.min(milliseconds,  endValue  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(diff,  endValue  -  startValue);  Int  milliseconds  =  Math.min(milliseconds,  endValue  -  startValue);	          int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    Int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    	non-compiled	[CE]  cannot  find  symbol  diff	61	None	replace
48	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  /  1;  [CE]  cannot  find  symbol  DateTimeUtils  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  /  1;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.currentTimeMillis()  /  1;	  int    days    =    DateTimeUtils.currentTimeMillis()    -    1;    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	36	None	replace
49	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(endValue,  newdiff);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(endValue,  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(endValue,  newdiff);	  int    days    =    DateTimeUtils.getDaysInYear(newdiff,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	5	None	replace
50	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(newdiff,  endValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(newdiff,  endValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(newdiff,  endValue);	  int    days    =    DateTimeUtils.getDaysInYear(newdiff,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	5	None	replace
51	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(newdiff,  startValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(newdiff,  startValue,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(newdiff,  startValue,  difference);	  int    days    =    DateTimeUtils.getDaysInYear(newdiff,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	5	None	replace
52	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  /  startValue;  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  /  startValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.currentTimeMillis()  /  startValue;	  int    days    =    DateTimeUtils.currentTimeMillis()    -    startValue;    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	37	None	replace
53	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  -  newdiff;  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  -  newdiff;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.currentTimeMillis()  -  newdiff;	  int    days    =    DateTimeUtils.currentTimeMillis()    -    startValue;    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	37	None	replace
54	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  -  difference;  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  -  difference;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.currentTimeMillis()  -  difference;	  int    days    =    DateTimeUtils.currentTimeMillis()    -    startValue;    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	37	None	replace
55	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  -  startValue  +  1;  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  -  startValue  +  1;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.currentTimeMillis()  -  startValue  +  1;	  int    days    =    DateTimeUtils.currentTimeMillis()    -    startValue;    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	37	None	replace
56	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  newdiff  -  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  newdiff  -  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  newdiff  -  difference);	  int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	77	None	replace
57	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  startValue  -  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  startValue  -  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  startValue  -  difference);	  int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	77	None	replace
58	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue  -  newdiff);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue  -  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue  -  newdiff);	  int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	77	None	replace
59	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  endValue  -  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  endValue  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  endValue  -  startValue);	  int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	77	None	replace
60	[BUG]  [BUGGY]  if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  end.add(field,    newdiff    -    startValue);    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
61	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  end.add(field,    newdiff    -    startValue);    end.add(field,    newdiff    -    startValue);    	compilable	  [FE]  ComparisonFailure  	32	1	replace
62	[BUG]  [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  end.add(field,    newdiff    -    startValue);    end.add(field,    newdiff    -    startValue);    	compilable	  [FE]  ComparisonFailure  	32	1	replace
63	[BUG]  [BUGGY]  if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  end.add(field,  newdiff  -  startValue);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  end.add(field,  newdiff  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  end.add(field,  newdiff  -  startValue);  }	  end.add(field,    newdiff    -    startValue);    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
64	[BUG]  [BUGGY]  int  end.add(field,  newdiff  -  startValue);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  end.add(field,  newdiff  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  end.add(field,  newdiff  -  startValue);	  end.add(field,    newdiff    -    startValue);    int    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  ';'  expected	33	None	replace
65	[BUG]  [BUGGY]  int  end  =  startValue.add(newdiff);  [CE]  variable  end  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  end  =  startValue.add(newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  end  =  startValue.add(newdiff);	  end.add(field,    newdiff    -    startValue);    int    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  variable  end  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	33	None	replace
66	[BUG]  [BUGGY]  int  endValue  =  start.get(field);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  endValue  =  start.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  endValue  =  start.get(field);	  end.add(field,    newdiff    -    startValue);    int    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	33	None	replace
67	[BUG]  [BUGGY]  int  end  =  startValue.get(field);  [CE]  variable  end  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  end  =  startValue.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  end  =  startValue.get(field);	  end.add(field,    newdiff    -    startValue);    int    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  variable  end  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	33	None	replace
68	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(startValue,  newdiff  /  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(startValue,  newdiff  /  1);	  end.add(field,    newdiff    /    1);    	compilable	  [FE]  IllegalArgumentException  	90	1	replace
69	[BUG]  [BUGGY]  end.add(startValue,  newdiff  /  1);  [FE]  IllegalArgumentException  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(startValue,  newdiff  /  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(startValue,  newdiff  /  1);	  end.add(field,    newdiff    /    1);    	compilable	  [FE]  IllegalArgumentException  	90	1	replace
70	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(startValue,  newdiff  *  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(startValue,  newdiff  *  1);	  end.add(field,    newdiff    *    1);    	compilable	  [FE]  IllegalArgumentException  	92	1	replace
71	[BUG]  [BUGGY]  end.add(startValue,  newdiff  *  1);  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(startValue,  newdiff  *  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(startValue,  newdiff  *  1);	  end.add(field,    newdiff    *    1);    	compilable	  [FE]  IllegalArgumentException  	92	1	replace
72	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  +  2);  end.add(field,  newdiff  +  2);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,    newdiff    +    2);    end.add(field,  newdiff  +  2);	  	compilable	  [FE]  ComparisonFailure  	75	1	add
73	[BUG]  [BUGGY]  end.add(field,  newdiff  +  2);  end.add(field,  newdiff  +  2);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  +  2);  end.add(field,  newdiff  +  2);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    +    2);    end.add(field,  newdiff  +  2);	  	compilable	  [FE]  ComparisonFailure  	75	1	add
74	[BUG]  [BUGGY]  end.add(field,  newdiff  +  2);  int  end.add(field,  newdiff  +  2);  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  +  2);  int  end.add(field,  newdiff  +  2);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    +    2);    int  end.add(field,  newdiff  +  2);	  	non-compiled	[CE]  ';'  expected	75	None	add
75	[BUG]  [BUGGY]  end.add(field,  newdiff  +  2);  End.add(field,  newdiff  +  2);  [CE]  cannot  find  symbol  End  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  +  2);  End.add(field,  newdiff  +  2);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    +    2);    End.add(field,  newdiff  +  2);	  	non-compiled	[CE]  cannot  find  symbol  End	75	None	add
76	[BUG]  [BUGGY]  int  days  =  this.days  -  startValue;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  this.days  -  startValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  this.days  -  startValue;	  int    days    =    this.days    -    this.endValue;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	86	None	replace
77	[BUG]  [BUGGY]  int  days  =  startValue  -  this.days;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  startValue  -  this.days;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  startValue  -  this.days;	  int    days    =    this.days    -    this.endValue;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	86	None	replace
78	[BUG]  [BUGGY]  int  days  =  endValue  -  this.days;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  endValue  -  this.days;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  endValue  -  this.days;	  int    days    =    this.days    -    this.endValue;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	86	None	replace
79	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(diff,  difference  -  startValue);  [CE]  cannot  find  symbol  diff  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.min(diff,  difference  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(diff,  difference  -  startValue);	          int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.min(endValue,    différence    -    startValue);    	non-compiled	[CE]  cannot  find  symbol  diff	60	None	replace
80	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(endValue,  newdiffrence  -  startValue);  [CE]  cannot  find  symbol  newdiffrence  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.min(endValue,  newdiffrence  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(endValue,  newdiffrence  -  startValue);	          int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.min(endValue,    différence    -    startValue);    	non-compiled	[CE]  cannot  find  symbol  newdiffrence	60	None	replace
81	[BUG]  [BUGGY]  if(newdiff  <  =  0)  {  end.add(field,  newdiff  +  1);  }  else  {  end.add(field,  newdiff  +  1);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  <  =  0)  {  end.add(field,  newdiff  +  1);  }  else  {  end.add(field,  newdiff  +  1);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  <  =  0)  {  end.add(field,  newdiff  +  1);  }  else  {  end.add(field,  newdiff  +  1);  }	  end.add(field,    newdiff    +    1);    end.add(field,    newdiff    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
82	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(startValue  ==  endValue)  {  end.add(field,  newdiff  +  1);  }  else  {  end.add(field,  newdiff  +  1);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	if(startValue  ==  endValue)  {  end.add(field,  newdiff  +  1);  }  else  {  end.add(field,  newdiff  +  1);  }	  end.add(field,    newdiff    +    1);    end.add(field,    newdiff    +    1);    	compilable	  [FE]  ComparisonFailure  	18	1	replace
83	[BUG]  [BUGGY]  if(startValue  ==  endValue)  {  end.add(field,  newdiff  +  1);  }  else  {  end.add(field,  newdiff  +  1);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(startValue  ==  endValue)  {  end.add(field,  newdiff  +  1);  }  else  {  end.add(field,  newdiff  +  1);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(startValue  ==  endValue)  {  end.add(field,  newdiff  +  1);  }  else  {  end.add(field,  newdiff  +  1);  }	  end.add(field,    newdiff    +    1);    end.add(field,    newdiff    +    1);    	compilable	  [FE]  ComparisonFailure  	18	1	replace
84	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  newdiff  -  endValue);  [CE]  variable  milliseconds  might  not  have  been  initialized  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  newdiff  -  endValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(milliseconds,  newdiff  -  endValue);	  int    milliseconds    =    Math.min(milliseconds,    newdiff    -    startValue);    	non-compiled	[CE]  variable  milliseconds  might  not  have  been  initialized	22	None	replace
85	[BUG]  [BUGGY]  int  end.add(field,  newdiff  +  1);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  end.add(field,  newdiff  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  end.add(field,  newdiff  +  1);	  end.add(field,    newdiff    +    1);    int    end.add(field,    newdiff    +    1);    	non-compiled	[CE]  ';'  expected	19	None	replace
86	[BUG]  [BUGGY]  int  end.add(field,  newdiff);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  end.add(field,  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  end.add(field,  newdiff);	  end.add(field,    newdiff    +    1);    int    end.add(field,    newdiff    +    1);    	non-compiled	[CE]  ';'  expected	19	None	replace
87	[BUG]  [BUGGY]  int  end  =  startValue  -  startValue;  [CE]  variable  end  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  end  =  startValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  end  =  startValue  -  startValue;	  end.add(field,    newdiff    +    1);    int    end.add(field,    newdiff    +    1);    	non-compiled	[CE]  variable  end  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	19	None	replace
88	[BUG]  [BUGGY]  if(newdiff  <  =  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  1);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  <  =  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  1);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  <  =  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  1);  }	  end.add(field,    newdiff    +    1    *    difference    );    end.add(field,    newdiff    +    1    *    difference    );    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
89	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  ==  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  1);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	if(newdiff  ==  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  1);  }	  end.add(field,    newdiff    +    1    *    difference    );    end.add(field,    newdiff    +    1    *    difference    );    	compilable	  [FE]  ComparisonFailure  	29	1	replace
90	[BUG]  [BUGGY]  if(newdiff  ==  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  1);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  ==  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  1);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  ==  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  1);  }	  end.add(field,    newdiff    +    1    *    difference    );    end.add(field,    newdiff    +    1    *    difference    );    	compilable	  [FE]  ComparisonFailure  	29	1	replace
91	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  1);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	if(newdiff  >=  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  1);  }	  end.add(field,    newdiff    +    1    *    difference    );    end.add(field,    newdiff    +    1    *    difference    );    	compilable	  [FE]  ComparisonFailure  	29	1	replace
92	[BUG]  [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  1);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  1);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  >=  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  1);  }	  end.add(field,    newdiff    +    1    *    difference    );    end.add(field,    newdiff    +    1    *    difference    );    	compilable	  [FE]  ComparisonFailure  	29	1	replace
93	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(newdiff,  newdiff);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(newdiff,  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(newdiff,  newdiff);	  int    days    =    DateTimeUtils.getDays(newdiff,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	14	None	replace
94	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(endValue,  newdiff);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(endValue,  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(endValue,  newdiff);	  int    days    =    DateTimeUtils.getDays(newdiff,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	14	None	replace
95	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  endValue,  newdiff);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  endValue,  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(startValue,  endValue,  newdiff);	  int    milliseconds    =    getMilliseconds(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
96	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(endValue,  startValue,  difference);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(endValue,  startValue,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(endValue,  startValue,  difference);	  int    milliseconds    =    getMilliseconds(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
97	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  endValue,  startValue);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  endValue,  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(newdiff,  endValue,  startValue);	  int    milliseconds    =    getMilliseconds(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
98	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(diff,  startValue);  [CE]  cannot  find  symbol  diff  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(diff,  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(diff,  startValue);	  int    milliseconds    =    getMilliseconds(startValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  diff	57	None	replace
99	[BUG]  [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	                int        seconds        =        startValue        -        startValue;        int    minutes    =    startValue    -    startValue;    int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	42	None	add
100	[BUG]  [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  int  minutes  =  endValue  -  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  int  minutes  =  endValue  -  startValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	                int        seconds        =        startValue        -        startValue;        int    minutes    =    startValue    -    startValue;    int  seconds  =  startValue  -  startValue;  int  minutes  =  endValue  -  startValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	42	None	add
101	[BUG]  [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  endValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  endValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	                int        seconds        =        startValue        -        startValue;        int    minutes    =    startValue    -    startValue;    int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  endValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	42	None	add
102	[BUG]  [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [CE]  variable  minutes  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	                int        seconds        =        startValue        -        startValue;        int    minutes    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;	  	non-compiled	[CE]  variable  minutes  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	42	None	add
103	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  difference);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(newdiff,  difference);	  int    milliseconds    =    getMilliseconds(newdiff);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
104	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff  -  1);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff  -  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(newdiff  -  1);	  int    milliseconds    =    getMilliseconds(newdiff);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
105	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  newdiff);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(newdiff,  newdiff);	  int    milliseconds    =    getMilliseconds(newdiff);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
106	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  /  newdiff;  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  /  newdiff;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.currentTimeMillis()  /  newdiff;	  int    days    =    DateTimeUtils.currentTimeMillis()    /    difference;    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	38	None	replace
107	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  *  difference;  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  *  difference;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.currentTimeMillis()  *  difference;	  int    days    =    DateTimeUtils.currentTimeMillis()    /    difference;    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	38	None	replace
108	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  /  change;  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  /  change;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.currentTimeMillis()  /  change;	  int    days    =    DateTimeUtils.currentTimeMillis()    /    difference;    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	38	None	replace
109	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  day);  [CE]  cannot  find  symbol  day  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  day);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  day);	  int    days    =    DateTimeUtils.getDaysInYearMonth(field,    startValue);    	non-compiled	[CE]  cannot  find  symbol  day	54	None	replace
110	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(field,  newdiff);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(field,  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(field,  newdiff);	  int    days    =    DateTimeUtils.getDaysInYearMonth(field,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	54	None	replace
111	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  newdiff  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(newdiff,  newdiff  -  difference);	  end.add(newdiff,    newdiff    -    startValue);    	compilable	  [FE]  ComparisonFailure  	52	1	replace
112	[BUG]  [BUGGY]  end.add(newdiff,  newdiff  -  difference);  [FE]  ComparisonFailure  [FE]        IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  newdiff  -  difference);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,  newdiff  -  difference);	  end.add(newdiff,    newdiff    -    startValue);    	compilable	  [FE]  ComparisonFailure  	52	1	replace
113	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  newdiff  -  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  newdiff  -  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(startValue,  newdiff  -  1);	  int    days    =    DateTimeUtils.getDaysInYear(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	82	None	replace
114	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(endValue,  startValue  -  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(endValue,  startValue  -  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(endValue,  startValue  -  1);	  int    days    =    DateTimeUtils.getDaysInYear(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	82	None	replace
115	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue  -  2);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue  -  2);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue  -  2);	  int    days    =    DateTimeUtils.getDaysInYear(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	82	None	replace
116	[BUG]  [BUGGY]  int  seconds  =  this.startValue  -  this.endValue;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  seconds  =  this.startValue  -  this.endValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =  this.startValue  -  this.endValue;	          int    seconds    =    startValue    -    startValue;    int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	41	None	replace
117	[BUG]  [BUGGY]  int  end.add(field,  newdiff  +  1  *  difference  );  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  end.add(field,  newdiff  +  1  *  difference  );  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  end.add(field,  newdiff  +  1  *  difference  );	  end.add(field,    newdiff    +    1    *    difference    );    int    end.add(field,    newdiff    +    1    *    difference    );    	non-compiled	[CE]  ';'  expected	30	None	replace
118	[BUG]  [BUGGY]  End.add(field,  newdiff  -  startValue);  [CE]  cannot  find  symbol  End  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  End.add(field,  newdiff  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	End.add(field,  newdiff  -  startValue);	  end.add(field,    newdiff    -    startValue);    End.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  cannot  find  symbol  End	34	None	replace
119	[BUG]  [BUGGY]  if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  End.add(field,  newdiff  -  startValue);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  End.add(field,  newdiff  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  End.add(field,  newdiff  -  startValue);  }	  end.add(field,    newdiff    -    startValue);    End.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
120	[BUG]  [BUGGY]  int  field  =  start.get(field);  [CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  field  =  start.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  field  =  start.get(field);	  end.add(field,    newdiff    -    startValue);    int    field    =    start.get(field);    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	73	None	replace
121	[BUG]  [BUGGY]  int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);  [CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);	  end.add(field,    newdiff    -    startValue);    int    field    =    start.get(field);    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	73	None	replace
122	[BUG]  [BUGGY]  if(newdiff  ==  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);  }  [CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  ==  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  ==  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);  }	  end.add(field,    newdiff    -    startValue);    int    field    =    start.get(field);    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	73	None	replace
123	[BUG]  [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);  }  [CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);  }	  end.add(field,    newdiff    -    startValue);    int    field    =    start.get(field);    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	73	None	replace
124	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    +    1);    end.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,        newdiff        +        1);        end.add(field,    newdiff    +    1);    end.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
125	[BUG]  [BUGGY]  end.add(field,    newdiff    +    1);    end.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    +    1);    end.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,        newdiff        +        1);        end.add(field,    newdiff    +    1);    end.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
126	[BUG]  [BUGGY]  end.add(field,    newdiff    +    1);    end.add(field,  newdiff  +  1);  int  end.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1);  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    +    1);    end.add(field,  newdiff  +  1);  int  end.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,        newdiff        +        1);        end.add(field,    newdiff    +    1);    int  end.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1);	  	non-compiled	[CE]  ';'  expected	17	None	add
127	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  difference  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(newdiff,  difference  -  startValue);	  end.add(newdiff,    field    -    startValue);    	compilable	  [FE]  IllegalArgumentException  	50	1	replace
128	[BUG]  [BUGGY]  end.add(newdiff,  difference  -  startValue);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  difference  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,  difference  -  startValue);	  end.add(newdiff,    field    -    startValue);    	compilable	  [FE]  IllegalArgumentException  	50	1	replace
129	[BUG]  [BUGGY]  int  days  =  endValue  -  startValue);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  endValue  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  endValue  -  startValue);	          int    days    =    startValue    -    startValue;    int    days    =    startValue    -    startValue);    	non-compiled	[CE]  ';'  expected	27	None	replace
130	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  +  1  *  difference  /  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,  newdiff  +  1  *  difference  /  1);	  end.add(field,    newdiff    +    1    *    difference    -    1);    	compilable	  [FE]  ComparisonFailure  	2	1	replace
131	[BUG]  [BUGGY]  end.add(field,  newdiff  +  1  *  difference  /  1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  +  1  *  difference  /  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,  newdiff  +  1  *  difference  /  1);	  end.add(field,    newdiff    +    1    *    difference    -    1);    	compilable	  [FE]  ComparisonFailure  	2	1	replace
132	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  newdiff  -  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  newdiff  -  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  newdiff  -  1);	  int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	88	None	replace
133	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  startValue  -  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  startValue  -  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  startValue  -  1);	  int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	88	None	replace
134	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  endValue  -  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  endValue  -  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  endValue  -  1);	  int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	88	None	replace
135	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(startValue,  difference);	  int    days    =    DateTimeUtils.getDaysInYear(field,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	71	None	replace
136	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  day);  [CE]  cannot  find  symbol  day  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  day);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(startValue,  day);	  int    days    =    DateTimeUtils.getDaysInYear(field,    startValue);    	non-compiled	[CE]  cannot  find  symbol  day	71	None	replace
137	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(field,  newdiff);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(field,  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(field,  newdiff);	  int    days    =    DateTimeUtils.getDaysInYear(field,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	71	None	replace
138	[BUG]  [BUGGY]  int  field  =  startValue.get(field);  [CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  field  =  startValue.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  field  =  startValue.get(field);	  end.add(field,    newdiff    -    startValue);    int    field    =    startValue.get(field);    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	35	None	replace
139	[BUG]  [BUGGY]  int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);  [CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);	  end.add(field,    newdiff    -    startValue);    int    field    =    startValue.get(field);    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	35	None	replace
140	[BUG]  [BUGGY]  if(newdiff  ==  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);  }  [CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  ==  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  ==  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);  }	  end.add(field,    newdiff    -    startValue);    int    field    =    startValue.get(field);    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	35	None	replace
141	[BUG]  [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);  }  [CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);  }	  end.add(field,    newdiff    -    startValue);    int    field    =    startValue.get(field);    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	35	None	replace
142	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  newdiff,  endValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  newdiff,  endValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  newdiff,  endValue);	  int    days    =    DateTimeUtils.getDaysInYearMonth(newdiff,    startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	15	None	replace
143	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  startValue,  endValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  startValue,  endValue,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  startValue,  endValue,  difference);	  int    days    =    DateTimeUtils.getDaysInYearMonth(newdiff,    startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	15	None	replace
144	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  endValue,  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  endValue,  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  endValue,  startValue);	  int    days    =    DateTimeUtils.getDaysInYearMonth(newdiff,    startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	15	None	replace
145	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(endValue,  startValue  -  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(endValue,  startValue  -  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(endValue,  startValue  -  difference);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	80	None	replace
146	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(newdiff,  endValue  -  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(newdiff,  endValue  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(newdiff,  endValue  -  startValue);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	80	None	replace
147	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  newdiff  -  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  newdiff  -  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(startValue,  newdiff  -  difference);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	80	None	replace
148	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  endValue  -  newdiff);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  endValue  -  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(startValue,  endValue  -  newdiff);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	80	None	replace
149	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  endValue);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  endValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(newdiff,  endValue);	  int    milliseconds    =    getMilliseconds(newdiff,    startValue);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
150	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  startValue,  difference);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  startValue,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(newdiff,  startValue,  difference);	  int    milliseconds    =    getMilliseconds(newdiff,    startValue);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
151	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(endValue,  newdiff);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(endValue,  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(endValue,  newdiff);	  int    milliseconds    =    getMilliseconds(newdiff,    startValue);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
152	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  newdiff,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  newdiff,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(startValue,  newdiff,  difference);	  int    days    =    DateTimeUtils.getDaysInYear(startValue,    newdiff);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	3	None	replace
153	[BUG]  [BUGGY]  int  milliseconds  =  Math.max(milliseconds,  endValue  -  startValue);  [CE]  variable  milliseconds  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.max(milliseconds,  endValue  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.max(milliseconds,  endValue  -  startValue);	          int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.max(endValue,    difference    -    startValue);    	non-compiled	[CE]  variable  milliseconds  might  not  have  been  initialized	70	None	replace
154	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(newdiff,  startValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(newdiff,  startValue,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(newdiff,  startValue,  difference);	  int    days    =    DateTimeUtils.getDays(newdiff,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	13	None	replace
155	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(diff,  endValue  -  startValue);  [CE]  cannot  find  symbol  diff  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.min(diff,  endValue  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(diff,  endValue  -  startValue);	  int    milliseconds    =    Math.min(milliseconds,    endValue    -    startValue);    	non-compiled	[CE]  cannot  find  symbol  diff	63	None	replace
156	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  /  1);  end.add(field,  newdiff  /  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,    newdiff    /    1);    end.add(field,  newdiff  /  1);	  	compilable	  [FE]  ComparisonFailure  	89	1	add
157	[BUG]  [BUGGY]  end.add(field,  newdiff  /  1);  end.add(field,  newdiff  /  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  /  1);  end.add(field,  newdiff  /  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    /    1);    end.add(field,  newdiff  /  1);	  	compilable	  [FE]  ComparisonFailure  	89	1	add
158	[BUG]  [BUGGY]  end.add(field,  newdiff  /  1);  int  end.add(field,  newdiff  /  1);  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  /  1);  int  end.add(field,  newdiff  /  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    /    1);    int  end.add(field,  newdiff  /  1);	  	non-compiled	[CE]  ';'  expected	89	None	add
159	[BUG]  [BUGGY]  end.add(field,  newdiff  /  1);  End.add(field,  newdiff  /  1);  [CE]  cannot  find  symbol  End  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  /  1);  End.add(field,  newdiff  /  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    /    1);    End.add(field,  newdiff  /  1);	  	non-compiled	[CE]  cannot  find  symbol  End	89	None	add
160	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  *  1);  end.add(field,  newdiff  *  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,    newdiff    *    1);    end.add(field,  newdiff  *  1);	  	compilable	  [FE]  ComparisonFailure  	91	1	add
161	[BUG]  [BUGGY]  end.add(field,  newdiff  *  1);  end.add(field,  newdiff  *  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  *  1);  end.add(field,  newdiff  *  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    *    1);    end.add(field,  newdiff  *  1);	  	compilable	  [FE]  ComparisonFailure  	91	1	add
162	[BUG]  [BUGGY]  end.add(field,  newdiff  *  1);  int  end.add(field,  newdiff  *  1);  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  *  1);  int  end.add(field,  newdiff  *  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    *    1);    int  end.add(field,  newdiff  *  1);	  	non-compiled	[CE]  ';'  expected	91	None	add
163	[BUG]  [BUGGY]  end.add(field,  newdiff  *  1);  End.add(field,  newdiff  *  1);  [CE]  cannot  find  symbol  End  [FE]          ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  *  1);  End.add(field,  newdiff  *  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    *    1);    End.add(field,  newdiff  *  1);	  	non-compiled	[CE]  cannot  find  symbol  End	91	None	add
164	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    +    1    *    difference    );    end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,        newdiff        +        1        *        difference        );        end.add(field,    newdiff    +    1    *    difference    );    end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );	  	compilable	  [FE]  ComparisonFailure  	28	1	add
165	[BUG]  [BUGGY]  end.add(field,    newdiff    +    1    *    difference    );    end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    +    1    *    difference    );    end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,        newdiff        +        1        *        difference        );        end.add(field,    newdiff    +    1    *    difference    );    end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );	  	compilable	  [FE]  ComparisonFailure  	28	1	add
166	[BUG]  [BUGGY]  end.add(field,    newdiff    +    1    *    difference    );    end.add(field,  newdiff  +  1  *  difference  );  int  end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    +    1    *    difference    );    end.add(field,  newdiff  +  1  *  difference  );  int  end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,        newdiff        +        1        *        difference        );        end.add(field,    newdiff    +    1    *    difference    );    int  end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );	  	non-compiled	[CE]  ';'  expected	28	None	add
167	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(endValue,  startValue  +  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(endValue,  startValue  +  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(endValue,  startValue  +  1);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue    +    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	95	None	replace
168	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  newdiff  +  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  newdiff  +  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(startValue,  newdiff  +  1);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue    +    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	95	None	replace
169	[BUG]  [BUGGY]  int  seconds  =  this.startValue  -  endValue;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  seconds  =  this.startValue  -  endValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =  this.startValue  -  endValue;	  int    seconds    =    this.endValue    -    this.startValue;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	84	None	replace
170	[BUG]  [BUGGY]  int  seconds  =  startValue  -  this.endValue;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  seconds  =  startValue  -  this.endValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =  startValue  -  this.endValue;	  int    seconds    =    this.endValue    -    this.startValue;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	84	None	replace
171	[BUG]  [BUGGY]  int  seconds  =  endValue  -  this.startValue;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  seconds  =  endValue  -  this.startValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =  endValue  -  this.startValue;	  int    seconds    =    this.endValue    -    this.startValue;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	84	None	replace
172	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(startValue,  newdiff  +  2);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(startValue,  newdiff  +  2);	  end.add(field,    newdiff    +    2);    	compilable	  [FE]  IllegalArgumentException  	76	1	replace
173	[BUG]  [BUGGY]  end.add(startValue,  newdiff  +  2);  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(startValue,  newdiff  +  2);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(startValue,  newdiff  +  2);	  end.add(field,    newdiff    +    2);    	compilable	  [FE]  IllegalArgumentException  	76	1	replace
174	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  end.add(newdiff,  newdiff  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(newdiff,    newdiff    -    startValue);    end.add(newdiff,  newdiff  -  startValue);	  	compilable	  [FE]  IllegalArgumentException  	51	1	add
175	[BUG]  [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  end.add(newdiff,  newdiff  -  startValue);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  end.add(newdiff,  newdiff  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,    newdiff    -    startValue);    end.add(newdiff,  newdiff  -  startValue);	  	compilable	  [FE]  IllegalArgumentException  	51	1	add
176	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  start.add(newdiff,  newdiff  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(newdiff,    newdiff    -    startValue);    start.add(newdiff,  newdiff  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	51	1	add
177	[BUG]  [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  start.add(newdiff,  newdiff  -  startValue);  [FE]  ComparisonFailure  [FE]      IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  start.add(newdiff,  newdiff  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,    newdiff    -    startValue);    start.add(newdiff,  newdiff  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	51	1	add
178	[BUG]  [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  int  newdiff  =  startValue  -  startValue;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  int  newdiff  =  startValue  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,    newdiff    -    startValue);    int  newdiff  =  startValue  -  startValue;	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	51	None	add
179	[BUG]  [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  int  newdiff  =  end.get(field);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  int  newdiff  =  end.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,    newdiff    -    startValue);    int  newdiff  =  end.get(field);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	51	None	add
180	[BUG]  [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  int  newdiff  =  startValue.get(field);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  int  newdiff  =  startValue.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,    newdiff    -    startValue);    int  newdiff  =  startValue.get(field);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	51	None	add
181	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  newdiff,  endValue);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  newdiff,  endValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(startValue,  newdiff,  endValue);	  int    milliseconds    =    getMilliseconds(newdiff,    startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
182	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  startValue,  endValue,  difference);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  startValue,  endValue,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(newdiff,  startValue,  endValue,  difference);	  int    milliseconds    =    getMilliseconds(newdiff,    startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
183	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  startValue,  newdiff);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  startValue,  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(newdiff,  startValue,  newdiff);	  int    milliseconds    =    getMilliseconds(newdiff,    startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
184	[BUG]  [BUGGY]  End.add(field,  newdiff  +  1);  [CE]  cannot  find  symbol  End  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  End.add(field,  newdiff  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	End.add(field,  newdiff  +  1);	  end.add(field,    newdiff    +    1);    End.add(field,    newdiff    +    1);    	non-compiled	[CE]  cannot  find  symbol  End	20	None	replace
185	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(endValue,  newdiff  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(endValue,  newdiff  +  1);	  end.add(startValue,    newdiff    +    1);    	compilable	  [FE]  IllegalArgumentException  	10	1	replace
186	[BUG]  [BUGGY]  end.add(endValue,  newdiff  +  1);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(endValue,  newdiff  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(endValue,  newdiff  +  1);	  end.add(startValue,    newdiff    +    1);    	compilable	  [FE]  IllegalArgumentException  	10	1	replace
187	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue,  newdiff);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue,  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue,  newdiff);	  int    days    =    DateTimeUtils.getDaysInYear(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	6	None	replace
188	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(endValue,  startValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(endValue,  startValue,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(endValue,  startValue,  difference);	  int    days    =    DateTimeUtils.getDaysInYear(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	6	None	replace
189	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(field,  endValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(field,  endValue,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(field,  endValue,  difference);	  int    days    =    DateTimeUtils.getDaysInYear(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	6	None	replace
190	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(endValue,  startValue  -  1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(endValue,  startValue  -  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(endValue,  startValue  -  1);	  int    milliseconds    =    getMilliseconds(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
191	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  startValue  -  1);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  startValue  -  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(newdiff,  startValue  -  1);	  int    milliseconds    =    getMilliseconds(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
192	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(endValue,  startValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(endValue,  startValue,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(endValue,  startValue,  difference);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	81	None	replace
193	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  endValue,  newdiff);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  endValue,  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(startValue,  endValue,  newdiff);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	81	None	replace
194	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(newdiff,  endValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(newdiff,  endValue,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(newdiff,  endValue,  difference);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	81	None	replace
195	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  newdiff,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  newdiff,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(startValue,  newdiff,  difference);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	81	None	replace
196	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,        newdiff        -        startValue);        end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
197	[BUG]  [BUGGY]  end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,        newdiff        -        startValue);        end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
198	[BUG]  [BUGGY]  end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);  int  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);  int  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,        newdiff        -        startValue);        end.add(field,    newdiff    -    startValue);    int  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);	  	non-compiled	[CE]  ';'  expected	31	None	add
199	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);  start.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,        newdiff        -        startValue);        end.add(field,    newdiff    -    startValue);    start.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
200	[BUG]  [BUGGY]  end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);  start.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);  start.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,        newdiff        -        startValue);        end.add(field,    newdiff    -    startValue);    start.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
201	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  newdiff,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  newdiff,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  newdiff,  difference);	  int    days    =    DateTimeUtils.getDaysInYearMonth(endValue,    newdiff);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	53	None	replace
202	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  newdiff  -  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  newdiff  -  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  newdiff  -  1);	  int    days    =    DateTimeUtils.getDaysInYearMonth(endValue,    newdiff);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	53	None	replace
203	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  Int  milliseconds  =  Math.min(endValue,  newdiff  -  startValue);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  Int  milliseconds  =  Math.min(endValue,  newdiff  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  Int  milliseconds  =  Math.min(endValue,  newdiff  -  startValue);	          int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    Int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
204	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(startValue,  difference  -  endValue);  Int  milliseconds  =  Math.min(endValue,  newdiff  -  startValue);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.min(startValue,  difference  -  endValue);  Int  milliseconds  =  Math.min(endValue,  newdiff  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(startValue,  difference  -  endValue);  Int  milliseconds  =  Math.min(endValue,  newdiff  -  startValue);	          int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    Int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
205	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  endValue  -  startValue);  Int  milliseconds  =  Math.min(endValue,  newdiff  -  startValue);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  endValue  -  startValue);  Int  milliseconds  =  Math.min(endValue,  newdiff  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(milliseconds,  endValue  -  startValue);  Int  milliseconds  =  Math.min(endValue,  newdiff  -  startValue);	          int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    Int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
206	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  startValue  -  startValue);  Int  milliseconds  =  Math.min(endValue,  newdiff  -  startValue);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  startValue  -  startValue);  Int  milliseconds  =  Math.min(endValue,  newdiff  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(milliseconds,  startValue  -  startValue);  Int  milliseconds  =  Math.min(endValue,  newdiff  -  startValue);	          int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    Int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
207	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  newdiff  -  startValue);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  newdiff  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(startValue,  newdiff  -  startValue);	  int    milliseconds    =    getMilliseconds(startValue,    newdiff);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
208	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(field,  endValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(field,  endValue,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(field,  endValue,  difference);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	81	None	replace
209	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(newdiff,  endValue,  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(newdiff,  endValue,  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(newdiff,  endValue,  startValue);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	81	None	replace
210	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(endValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(endValue,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(endValue,  difference);	  int    days    =    DateTimeUtils.getDaysInYear(endValue,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	4	None	replace
211	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  startValue  -  startValue);  [CE]  variable  milliseconds  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  startValue  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(milliseconds,  startValue  -  startValue);	          int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int    milliseconds    =    Math.max(endValue,    difference    -    startValue);    	non-compiled	[CE]  variable  milliseconds  might  not  have  been  initialized	70	None	replace
212	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue,  change);  [CE]  cannot  find  symbol  change  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue,  change);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue,  change);	  int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  change	16	None	replace
213	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(startValue,  newdiff  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(startValue,  newdiff  -  startValue);	  end.add(newdiff,    newdiff    -    startValue);    	compilable	  [FE]  IllegalArgumentException  	52	1	replace
214	[BUG]  [BUGGY]  end.add(startValue,  newdiff  -  startValue);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(startValue,  newdiff  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(startValue,  newdiff  -  startValue);	  end.add(newdiff,    newdiff    -    startValue);    	compilable	  [FE]  IllegalArgumentException  	52	1	replace
215	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(endValue,  newdiff  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(endValue,  newdiff  -  startValue);	  end.add(newdiff,    newdiff    -    startValue);    	compilable	  [FE]  IllegalArgumentException  	52	1	replace
216	[BUG]  [BUGGY]  end.add(endValue,  newdiff  -  startValue);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(endValue,  newdiff  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(endValue,  newdiff  -  startValue);	  end.add(newdiff,    newdiff    -    startValue);    	compilable	  [FE]  IllegalArgumentException  	52	1	replace
217	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  endValue  +  1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  endValue  +  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(startValue,  endValue  +  1);	  int    milliseconds    =    getMilliseconds(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
218	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  newdiff  -  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  newdiff  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(startValue,  newdiff  -  startValue);	  int    days    =    DateTimeUtils.getDays(startValue,    newdiff);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	11	None	replace
219	[BUG]  [BUGGY]  end.add(field,  newdiff  /  1);  int  field  =  startValue.get(field);  [CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  /  1);  int  field  =  startValue.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    /    1);    int  field  =  startValue.get(field);	  	non-compiled	[CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	89	None	add
220	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  -  endValue;  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  -  endValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.currentTimeMillis()  -  endValue;	  int    days    =    DateTimeUtils.currentTimeMillis()    -    startValue;    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	37	None	replace
221	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(end,  newdiff);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(end,  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(end,  newdiff);	  int    days    =    DateTimeUtils.getDays(end,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	93	None	replace
222	[BUG]  [BUGGY]  Integer  days  =  endValue  -  startValue;  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  Integer  days  =  endValue  -  startValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	Integer  days  =  endValue  -  startValue;	          int    days    =    startValue    -    startValue;    int    days    =    endValue    -    startValue;    	non-compiled	[CE]  incompatible  types	24	None	replace
223	[BUG]  [BUGGY]  int  days  =  this.days  /  this.endValue;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  this.days  /  this.endValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  this.days  /  this.endValue;	  int    days    =    this.days    -    this.endValue;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	86	None	replace
224	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  newdiff  -  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  newdiff  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  newdiff  -  startValue);	  int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    newdiff);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	7	None	replace
225	[BUG]  [BUGGY]  int  end.add(field,  newdiff  -  1  *  difference  );  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  end.add(field,  newdiff  -  1  *  difference  );  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  end.add(field,  newdiff  -  1  *  difference  );	  end.add(field,    newdiff    +    1    *    difference    );    int    end.add(field,    newdiff    +    1    *    difference    );    	non-compiled	[CE]  ';'  expected	30	None	replace
226	[BUG]  [BUGGY]  int  end.add(field,  newdiff  +  1  *  difference  -  startValue);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  end.add(field,  newdiff  +  1  *  difference  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  end.add(field,  newdiff  +  1  *  difference  -  startValue);	  end.add(field,    newdiff    +    1    *    difference    );    int    end.add(field,    newdiff    +    1    *    difference    );    	non-compiled	[CE]  ';'  expected	30	None	replace
227	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(endValue,  field);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(endValue,  field);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(endValue,  field);	  int    days    =    DateTimeUtils.getDaysInYear(field,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	71	None	replace
228	[BUG]  [BUGGY]  end.add(field,    newdiff    +    1);    end.add(field,  newdiff  +  1);  End.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1);  [CE]  cannot  find  symbol  End  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    +    1);    end.add(field,  newdiff  +  1);  End.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,        newdiff        +        1);        end.add(field,    newdiff    +    1);    End.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1);	  	non-compiled	[CE]  cannot  find  symbol  End	17	None	add
229	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    +    1);    end.add(field,  newdiff  +  1);  end.add(field,  newdiff);  end.add(field,  newdiff  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,        newdiff        +        1);        end.add(field,    newdiff    +    1);    end.add(field,  newdiff);  end.add(field,  newdiff  +  1);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
230	[BUG]  [BUGGY]  end.add(field,    newdiff    +    1);    end.add(field,  newdiff  +  1);  end.add(field,  newdiff);  end.add(field,  newdiff  +  1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    +    1);    end.add(field,  newdiff  +  1);  end.add(field,  newdiff);  end.add(field,  newdiff  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,        newdiff        +        1);        end.add(field,    newdiff    +    1);    end.add(field,  newdiff);  end.add(field,  newdiff  +  1);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
231	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(diff,  endValue,  startValue);  [CE]  cannot  find  symbol  diff  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(diff,  endValue,  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(diff,  endValue,  startValue);	  int    milliseconds    =    getMilliseconds(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  diff	65	None	replace
232	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(diff,  endValue  -  newdiff);  [CE]  cannot  find  symbol  diff  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.min(diff,  endValue  -  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(diff,  endValue  -  newdiff);	  int    milliseconds    =    Math.min(milliseconds,    endValue    -    newdiff);    	non-compiled	[CE]  cannot  find  symbol  diff	21	None	replace
233	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(diff,  startValue  -  endValue);  [CE]  cannot  find  symbol  diff  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.min(diff,  startValue  -  endValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(diff,  startValue  -  endValue);	  int    milliseconds    =    Math.min(milliseconds,    startValue    -    endValue);    	non-compiled	[CE]  cannot  find  symbol  diff	64	None	replace
234	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue,  change);  [CE]  cannot  find  symbol  change  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue,  change);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue,  change);	  int    days    =    DateTimeUtils.getDaysInYear(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  change	6	None	replace
235	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  newdiff  -  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  newdiff  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  newdiff  -  startValue);	  int    days    =    DateTimeUtils.getDaysInYearMonth(endValue,    newdiff);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	53	None	replace
236	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  endValue  -  2);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  endValue  -  2);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(startValue,  endValue  -  2);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	94	None	replace
237	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(field,  endValue  -  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(field,  endValue  -  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(field,  endValue  -  1);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	94	None	replace
238	[BUG]  [BUGGY]  float  seconds  =  startValue  -  startValue;  int  seconds  =  endValue  -  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  float  seconds  =  startValue  -  startValue;  int  seconds  =  endValue  -  startValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	float  seconds  =  startValue  -  startValue;  int  seconds  =  endValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    int    seconds    =    endValue    -    startValue;    	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	40	None	replace
239	[BUG]  [BUGGY]  float  seconds  =  startValue  -  startValue;  float  seconds  =  endValue  -  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  float  seconds  =  startValue  -  startValue;  float  seconds  =  endValue  -  startValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	float  seconds  =  startValue  -  startValue;  float  seconds  =  endValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    int    seconds    =    endValue    -    startValue;    	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	40	None	replace
240	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(endValue,  startValue,  newdiff);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(endValue,  startValue,  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(endValue,  startValue,  newdiff);	  int    milliseconds    =    getMilliseconds(newdiff,    startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
241	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue;  int  seconds  =  endValue  -  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  seconds  =  endValue  -  startValue;  int  seconds  =  endValue  -  startValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =  endValue  -  startValue;  int  seconds  =  endValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	41	None	replace
242	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(startValue  >  endValue)  {  end.add(field,  newdiff  +  1);  }  else  {  startValue  =  startValue;  end.add(field,  newdiff  +  1);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	if(startValue  >  endValue)  {  end.add(field,  newdiff  +  1);  }  else  {  startValue  =  startValue;  end.add(field,  newdiff  +  1);  }	  end.add(field,    newdiff    +    1);    end.add(field,    newdiff    +    1);    	compilable	  [FE]  ComparisonFailure  	18	1	replace
243	[BUG]  [BUGGY]  if(startValue  >  endValue)  {  end.add(field,  newdiff  +  1);  }  else  {  startValue  =  startValue;  end.add(field,  newdiff  +  1);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(startValue  >  endValue)  {  end.add(field,  newdiff  +  1);  }  else  {  startValue  =  startValue;  end.add(field,  newdiff  +  1);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(startValue  >  endValue)  {  end.add(field,  newdiff  +  1);  }  else  {  startValue  =  startValue;  end.add(field,  newdiff  +  1);  }	  end.add(field,    newdiff    +    1);    end.add(field,    newdiff    +    1);    	compilable	  [FE]  ComparisonFailure  	18	1	replace
244	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(startValue  >  endValue)  {  end.add(field,  newdiff  +  1);  }  else  {  end.add(field,  newdiff  +  1);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	if(startValue  >  endValue)  {  end.add(field,  newdiff  +  1);  }  else  {  end.add(field,  newdiff  +  1);  }	  end.add(field,    newdiff    +    1);    end.add(field,    newdiff    +    1);    	compilable	  [FE]  ComparisonFailure  	18	1	replace
245	[BUG]  [BUGGY]  if(startValue  >  endValue)  {  end.add(field,  newdiff  +  1);  }  else  {  end.add(field,  newdiff  +  1);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(startValue  >  endValue)  {  end.add(field,  newdiff  +  1);  }  else  {  end.add(field,  newdiff  +  1);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(startValue  >  endValue)  {  end.add(field,  newdiff  +  1);  }  else  {  end.add(field,  newdiff  +  1);  }	  end.add(field,    newdiff    +    1);    end.add(field,    newdiff    +    1);    	compilable	  [FE]  ComparisonFailure  	18	1	replace
246	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  }	  end.add(field,    newdiff    -    startValue);    end.add(field,    newdiff    -    startValue);    	compilable	  [FE]  ComparisonFailure  	32	1	replace
247	[BUG]  [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  }	  end.add(field,    newdiff    -    startValue);    end.add(field,    newdiff    -    startValue);    	compilable	  [FE]  ComparisonFailure  	32	1	replace
248	[BUG]  [BUGGY]  if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  }	  end.add(field,    newdiff    -    startValue);    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
249	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  }  else  {  return  0;  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  }  else  {  return  0;  }	  end.add(field,    newdiff    -    startValue);    end.add(field,    newdiff    -    startValue);    	compilable	  [FE]  ComparisonFailure  	32	1	replace
250	[BUG]  [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  }  else  {  return  0;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  }  else  {  return  0;  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  }  else  {  return  0;  }	  end.add(field,    newdiff    -    startValue);    end.add(field,    newdiff    -    startValue);    	compilable	  [FE]  ComparisonFailure  	32	1	replace
251	[BUG]  [BUGGY]  end.add(newdiff,  field  -  startValue);  int  newdiff  =  end.get(field);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  field  -  startValue);  int  newdiff  =  end.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,    field    -    startValue);    int  newdiff  =  end.get(field);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	49	None	add
252	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    +    1    *    difference    );    end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  -  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,        newdiff        +        1        *        difference        );        end.add(field,    newdiff    +    1    *    difference    );    end.add(field,  newdiff  -  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );	  	compilable	  [FE]  ComparisonFailure  	28	1	add
253	[BUG]  [BUGGY]  end.add(field,    newdiff    +    1    *    difference    );    end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  -  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    +    1    *    difference    );    end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  -  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,        newdiff        +        1        *        difference        );        end.add(field,    newdiff    +    1    *    difference    );    end.add(field,  newdiff  -  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );	  	compilable	  [FE]  ComparisonFailure  	28	1	add
254	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  newdiff  -  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  newdiff  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(startValue,  newdiff  -  startValue);	  int    days    =    DateTimeUtils.getDaysInYear(startValue,    newdiff);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	3	None	replace
255	[BUG]  [BUGGY]  int  end  =  startValue.add(field,  newdiff  -  startValue);  [CE]  variable  end  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  end  =  startValue.add(field,  newdiff  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  end  =  startValue.add(field,  newdiff  -  startValue);	  end.add(field,    newdiff    -    startValue);    int    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  variable  end  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	33	None	replace
256	[BUG]  [BUGGY]  int  end  =  field.add(newdiff,  startValue  -  startValue);  [CE]  variable  end  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  end  =  field.add(newdiff,  startValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  end  =  field.add(newdiff,  startValue  -  startValue);	  end.add(field,    newdiff    -    startValue);    int    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  variable  end  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	33	None	replace
257	[BUG]  [BUGGY]  int  end  =  field.add(newdiff,  startValue);  [CE]  variable  end  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  end  =  field.add(newdiff,  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  end  =  field.add(newdiff,  startValue);	  end.add(field,    newdiff    -    startValue);    int    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  variable  end  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	33	None	replace
258	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(field,  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(field,  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(field,  startValue);	  int    days    =    DateTimeUtils.getDays(endValue,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	12	None	replace
259	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  /  difference  +  1;  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  /  difference  +  1;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.currentTimeMillis()  /  difference  +  1;	  int    days    =    DateTimeUtils.currentTimeMillis()    /    difference;    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	38	None	replace
260	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  -  1L;  [CE]  cannot  find  symbol  DateTimeUtils  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  -  1L;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.currentTimeMillis()  -  1L;	  int    days    =    DateTimeUtils.currentTimeMillis()    -    1;    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	36	None	replace
261	[BUG]  [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);  }  [CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);  }	  end.add(field,    newdiff    -    startValue);    int    field    =    start.get(field);    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	73	None	replace
262	[BUG]  [BUGGY]  if(newdiff!=  0)  {  end.add(field,  newdiff  -  startValue);  int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);  }  [CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff!=  0)  {  end.add(field,  newdiff  -  startValue);  int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff!=  0)  {  end.add(field,  newdiff  -  startValue);  int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);  }	  end.add(field,    newdiff    -    startValue);    int    field    =    start.get(field);    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	73	None	replace
263	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  startValue  -  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,  startValue  -  newdiff);	  end.add(field,    newdiff    -    startValue);    End.add(field,    newdiff    -    startValue);    	compilable	  [FE]  ComparisonFailure  	34	1	replace
264	[BUG]  [BUGGY]  end.add(field,  startValue  -  newdiff);  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  startValue  -  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,  startValue  -  newdiff);	  end.add(field,    newdiff    -    startValue);    End.add(field,    newdiff    -    startValue);    	compilable	  [FE]  ComparisonFailure  	34	1	replace
265	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  +  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,        newdiff        -        startValue);        end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  +  startValue);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
266	[BUG]  [BUGGY]  end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  +  startValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  +  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,        newdiff        -        startValue);        end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  +  startValue);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
267	[BUG]  [BUGGY]  end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue;  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,        newdiff        -        startValue);        end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue;	  	non-compiled	[CE]  ')'  expected	31	None	add
268	[BUG]  [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);  }  [CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);  }	  end.add(field,    newdiff    -    startValue);    int    field    =    startValue.get(field);    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	35	None	replace
269	[BUG]  [BUGGY]  if(newdiff!=  0)  {  end.add(field,  newdiff  -  startValue);  int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);  }  [CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff!=  0)  {  end.add(field,  newdiff  -  startValue);  int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff!=  0)  {  end.add(field,  newdiff  -  startValue);  int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);  }	  end.add(field,    newdiff    -    startValue);    int    field    =    startValue.get(field);    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	35	None	replace
270	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	if(newdiff  >=  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  startValue);  }	  end.add(field,    newdiff    +    1    *    difference    );    end.add(field,    newdiff    +    1    *    difference    );    	compilable	  [FE]  ComparisonFailure  	29	1	replace
271	[BUG]  [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  startValue);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  >=  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  startValue);  }	  end.add(field,    newdiff    +    1    *    difference    );    end.add(field,    newdiff    +    1    *    difference    );    	compilable	  [FE]  ComparisonFailure  	29	1	replace
272	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	if(newdiff  >=  0)  {  end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );  }	  end.add(field,    newdiff    +    1    *    difference    );    end.add(field,    newdiff    +    1    *    difference    );    	compilable	  [FE]  ComparisonFailure  	29	1	replace
273	[BUG]  [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  >=  0)  {  end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );  }	  end.add(field,    newdiff    +    1    *    difference    );    end.add(field,    newdiff    +    1    *    difference    );    	compilable	  [FE]  ComparisonFailure  	29	1	replace
274	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  startValue,  newdiff);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  startValue,  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  startValue,  newdiff);	  int    days    =    DateTimeUtils.getDaysInYearMonth(newdiff,    startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	15	None	replace
275	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(field,  startValue,  endValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(field,  startValue,  endValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(field,  startValue,  endValue);	  int    days    =    DateTimeUtils.getDaysInYearMonth(newdiff,    startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	15	None	replace
276	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(endValue,  startValue  -  difference);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(endValue,  startValue  -  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(endValue,  startValue  -  difference);	  int    milliseconds    =    getMilliseconds(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
277	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  field);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  field);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  field);	  int    days    =    DateTimeUtils.getDaysInYearMonth(field,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	54	None	replace
278	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue;  Int  seconds  =  startValue  -  startValue;  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  seconds  =  endValue  -  startValue;  Int  seconds  =  startValue  -  startValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =  endValue  -  startValue;  Int  seconds  =  startValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    Int    seconds    =    startValue    -    startValue;    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
279	[BUG]  [BUGGY]  Int  seconds  =  endValue  -  startValue;  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  Int  seconds  =  endValue  -  startValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	Int  seconds  =  endValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    Int    seconds    =    startValue    -    startValue;    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
280	[BUG]  [BUGGY]  end.add(startValue,  newdiff  +  1);  int  startValue  =  end.get(field);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(startValue,  newdiff  +  1);  int  startValue  =  end.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(startValue,    newdiff    +    1);    int  startValue  =  end.get(field);	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	9	None	add
281	[BUG]  [BUGGY]  end.add(startValue,  newdiff  +  1);  int  startValue  =  start.get(field);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(startValue,  newdiff  +  1);  int  startValue  =  start.get(field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(startValue,    newdiff    +    1);    int  startValue  =  start.get(field);	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	9	None	add
282	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue  -  2);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue  -  2);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue  -  2);	  int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	88	None	replace
283	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue  +  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue  +  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue  +  1);	  int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	88	None	replace
284	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  -  startValue  *  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,  newdiff  -  startValue  *  1);	  end.add(field,    newdiff    *    1);    	compilable	  [FE]  ComparisonFailure  	92	1	replace
285	[BUG]  [BUGGY]  end.add(field,  newdiff  -  startValue  *  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  -  startValue  *  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,  newdiff  -  startValue  *  1);	  end.add(field,    newdiff    *    1);    	compilable	  [FE]  ComparisonFailure  	92	1	replace
286	[BUG]  [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  int  newdiff  =  startValue  -  endValue;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  int  newdiff  =  startValue  -  endValue;  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,    newdiff    -    startValue);    int  newdiff  =  startValue  -  endValue;	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	51	None	add
287	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  end.add(newdiff,  newdiff  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(newdiff,    newdiff    -    startValue);    end.add(newdiff,  newdiff  -  1);	  	compilable	  [FE]  IllegalArgumentException  	51	1	add
288	[BUG]  [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  end.add(newdiff,  newdiff  -  1);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  end.add(newdiff,  newdiff  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,    newdiff    -    startValue);    end.add(newdiff,  newdiff  -  1);	  	compilable	  [FE]  IllegalArgumentException  	51	1	add
289	[BUG]  [BUGGY]  int  end.add(field,  newdiff  -  1);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  end.add(field,  newdiff  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  end.add(field,  newdiff  -  1);	  end.add(field,    newdiff    +    1);    int    end.add(field,    newdiff    +    1);    	non-compiled	[CE]  ';'  expected	19	None	replace
290	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  endValue  +  2);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  endValue  +  2);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(startValue,  endValue  +  2);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue    +    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	95	None	replace
291	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(field,  endValue  -  1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(field,  endValue  -  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(field,  endValue  -  1);	  int    milliseconds    =    getMilliseconds(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
292	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(diff,  endValue  -  1);  [CE]  cannot  find  symbol  diff  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(diff,  endValue  -  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(diff,  endValue  -  1);	  int    milliseconds    =    getMilliseconds(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol  diff	96	None	replace
293	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(field,  newdiff);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(field,  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(field,  newdiff);	  int    milliseconds    =    getMilliseconds(newdiff,    startValue);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
294	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  endValue  -  newdiff  -  1);  [CE]  variable  milliseconds  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  endValue  -  newdiff  -  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(milliseconds,  endValue  -  newdiff  -  1);	  int    milliseconds    =    Math.min(milliseconds,    endValue    -    newdiff);    	non-compiled	[CE]  variable  milliseconds  might  not  have  been  initialized	21	None	replace
295	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  -  startValue  /  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,  newdiff  -  startValue  /  1);	  end.add(field,    newdiff    /    1);    	compilable	  [FE]  ComparisonFailure  	90	1	replace
296	[BUG]  [BUGGY]  end.add(field,  newdiff  -  startValue  /  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  -  startValue  /  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,  newdiff  -  startValue  /  1);	  end.add(field,    newdiff    /    1);    	compilable	  [FE]  ComparisonFailure  	90	1	replace
297	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(newdiff,  endValue  -  startValue);	  end.add(newdiff,    newdiff    -    startValue);    	compilable	  [FE]  ComparisonFailure  	52	1	replace
298	[BUG]  [BUGGY]  end.add(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  endValue  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,  endValue  -  startValue);	  end.add(newdiff,    newdiff    -    startValue);    	compilable	  [FE]  ComparisonFailure  	52	1	replace
299	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(end,  startValue  +  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                      ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(end,  startValue  +  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(end,  startValue  +  1);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue    +    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	95	None	replace
300	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(field,  endValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(field,  endValue,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(field,  endValue,  difference);	  int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	16	None	replace
301	[BUG]  [BUGGY]  int  seconds  =  endValue.getSeconds()  -  startValue;  [CE]  int  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  seconds  =  endValue.getSeconds()  -  startValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =  endValue.getSeconds()  -  startValue;	          int    seconds    =    startValue    -    startValue;    int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  int  cannot  be  dereferenced	41	None	replace
302	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  end.add(field,  newdiff  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  end.add(field,  newdiff  -  startValue);  }	  end.add(field,    newdiff    -    startValue);    end.add(field,    newdiff    -    startValue);    	compilable	  [FE]  ComparisonFailure  	32	1	replace
303	[BUG]  [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  end.add(field,  newdiff  -  startValue);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  end.add(field,  newdiff  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  >=  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  end.add(field,  newdiff  -  startValue);  }	  end.add(field,    newdiff    -    startValue);    end.add(field,    newdiff    -    startValue);    	compilable	  [FE]  ComparisonFailure  	32	1	replace
304	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  field);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  field);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(newdiff,  field);	  int    milliseconds    =    getMilliseconds(newdiff);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
305	[BUG]  [BUGGY]  int  seconds  =  difference  -  this.startValue;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  seconds  =  difference  -  this.startValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =  difference  -  this.startValue;	  int    seconds    =    this.endValue    -    this.startValue;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	84	None	replace
306	[BUG]  [BUGGY]  int  seconds  =  this.endValue  -  startValue;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  seconds  =  this.endValue  -  startValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =  this.endValue  -  startValue;	  int    seconds    =    this.endValue    -    this.startValue;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	84	None	replace
307	[BUG]  [BUGGY]  int  days  =  endValue.getDays()  -  startValue;  [CE]  int  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  endValue.getDays()  -  startValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  endValue.getDays()  -  startValue;	          int    days    =    startValue    -    startValue;    int    days    =    startValue    -    endValue;    	non-compiled	[CE]  int  cannot  be  dereferenced	25	None	replace
308	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  endValue  -  difference);  [CE]  variable  milliseconds  might  not  have  been  initialized  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  endValue  -  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(milliseconds,  endValue  -  difference);	  int    milliseconds    =    Math.min(milliseconds,    endValue    -    startValue);    	non-compiled	[CE]  variable  milliseconds  might  not  have  been  initialized	63	None	replace
309	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(change,  endValue  -  startValue);  [CE]  cannot  find  symbol  change  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.min(change,  endValue  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(change,  endValue  -  startValue);	  int    milliseconds    =    Math.min(milliseconds,    endValue    -    startValue);    	non-compiled	[CE]  cannot  find  symbol  change	63	None	replace
310	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(endValue,  startValue  -  endValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(endValue,  startValue  -  endValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(endValue,  startValue  -  endValue);	  int    days    =    DateTimeUtils.getDaysInYear(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	62	None	replace
311	[BUG]  [BUGGY]  end.add(startValue,  newdiff  +  1);  End.add(startValue,  newdiff  +  1);  [CE]  cannot  find  symbol  End  [FE]    IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(startValue,  newdiff  +  1);  End.add(startValue,  newdiff  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(startValue,    newdiff    +    1);    End.add(startValue,  newdiff  +  1);	  	non-compiled	[CE]  cannot  find  symbol  End	9	None	add
312	[BUG]  [BUGGY]  int  seconds  =  difference  -  startValue;  Int  seconds  =  endValue  -  startValue;  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  seconds  =  difference  -  startValue;  Int  seconds  =  endValue  -  startValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =  difference  -  startValue;  Int  seconds  =  endValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    Int    seconds    =    startValue    -    startValue;    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
313	[BUG]  [BUGGY]  int  seconds  =  difference  -  startValue;  Int  seconds  =  startValue  -  startValue;  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  seconds  =  difference  -  startValue;  Int  seconds  =  startValue  -  startValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =  difference  -  startValue;  Int  seconds  =  startValue  -  startValue;	          int    seconds    =    startValue    -    startValue;    Int    seconds    =    startValue    -    startValue;    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
314	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  *  2);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,  newdiff  *  2);	  end.add(field,    newdiff    *    1);    	compilable	  [FE]  ComparisonFailure  	92	1	replace
315	[BUG]  [BUGGY]  end.add(field,  newdiff  *  2);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  *  2);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,  newdiff  *  2);	  end.add(field,    newdiff    *    1);    	compilable	  [FE]  ComparisonFailure  	92	1	replace
316	[BUG]  [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  seconds  =  endValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]          int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;  int  seconds  =  endValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	                int        seconds        =        startValue        -        startValue;        int    minutes    =    startValue    -    startValue;    int  seconds  =  endValue  -  startValue;  int  minutes  =  startValue  -  startValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	42	None	add
317	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(endValue,  startValue,  newdiff);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(endValue,  startValue,  newdiff);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(endValue,  startValue,  newdiff);	  int    days    =    DateTimeUtils.getDaysInYear(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	6	None	replace
318	[BUG]  [BUGGY]  int  end.add(field,  newdiff  +  1  *  difference  -  1);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  end.add(field,  newdiff  +  1  *  difference  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  end.add(field,  newdiff  +  1  *  difference  -  1);	  end.add(field,    newdiff    +    1    *    difference    );    int    end.add(field,    newdiff    +    1    *    difference    );    	non-compiled	[CE]  ';'  expected	30	None	replace
319	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(field,  endValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(field,  endValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(field,  endValue);	  int    days    =    DateTimeUtils.getDays(newdiff,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	14	None	replace
320	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  endValue  -  startValue);  Int  milliseconds  =  Math.min(milliseconds,  endValue  -  startValue);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  endValue  -  startValue);  Int  milliseconds  =  Math.min(milliseconds,  endValue  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(milliseconds,  endValue  -  startValue);  Int  milliseconds  =  Math.min(milliseconds,  endValue  -  startValue);	          int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    Int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
321	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  Int  milliseconds  =  Math.min(milliseconds,  endValue  -  startValue);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  Int  milliseconds  =  Math.min(milliseconds,  endValue  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  Int  milliseconds  =  Math.min(milliseconds,  endValue  -  startValue);	          int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    Int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
322	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  +  1);  }  else  {  end.add(field,  newdiff  +  1);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	if(newdiff  >=  0)  {  end.add(field,  newdiff  +  1);  }  else  {  end.add(field,  newdiff  +  1);  }	  end.add(field,    newdiff    +    1);    end.add(field,    newdiff    +    1);    	compilable	  [FE]  ComparisonFailure  	18	1	replace
323	[BUG]  [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  +  1);  }  else  {  end.add(field,  newdiff  +  1);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  >=  0)  {  end.add(field,  newdiff  +  1);  }  else  {  end.add(field,  newdiff  +  1);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  >=  0)  {  end.add(field,  newdiff  +  1);  }  else  {  end.add(field,  newdiff  +  1);  }	  end.add(field,    newdiff    +    1);    end.add(field,    newdiff    +    1);    	compilable	  [FE]  ComparisonFailure  	18	1	replace
324	[BUG]  [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  end.add(newdiff,  newdiff  -  date);  [CE]  cannot  find  symbol  date  [FE]    IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  end.add(newdiff,  newdiff  -  date);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,    newdiff    -    startValue);    end.add(newdiff,  newdiff  -  date);	  	non-compiled	[CE]  cannot  find  symbol  date	51	None	add
325	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  end.add(newdiff,  newdiff  -  field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(newdiff,    newdiff    -    startValue);    end.add(newdiff,  newdiff  -  field);	  	compilable	  [FE]  IllegalArgumentException  	51	1	add
326	[BUG]  [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  end.add(newdiff,  newdiff  -  field);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  end.add(newdiff,  newdiff  -  field);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,    newdiff    -    startValue);    end.add(newdiff,  newdiff  -  field);	  	compilable	  [FE]  IllegalArgumentException  	51	1	add
327	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  startValue  -  endValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  startValue  -  endValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  startValue  -  endValue);	  int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	77	None	replace
328	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(endValue,  endValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(endValue,  endValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(endValue,  endValue);	  int    days    =    DateTimeUtils.getDays(endValue,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	12	None	replace
329	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(field,  startValue);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(field,  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(field,  startValue);	  int    milliseconds    =    getMilliseconds(endValue,    startValue);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
330	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  /  1  *  difference  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,  newdiff  /  1  *  difference  -  1);	  end.add(field,    newdiff    +    1    *    difference    -    1);    	compilable	  [FE]  ComparisonFailure  	2	1	replace
331	[BUG]  [BUGGY]  end.add(field,  newdiff  /  1  *  difference  -  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  /  1  *  difference  -  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,  newdiff  /  1  *  difference  -  1);	  end.add(field,    newdiff    +    1    *    difference    -    1);    	compilable	  [FE]  ComparisonFailure  	2	1	replace
332	[BUG]  [BUGGY]  if(newdiff  <  =  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  startValue);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  <  =  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  <  =  0)  {  end.add(field,  newdiff  +  1  *  difference  );  }  else  {  end.add(field,  newdiff  +  1  *  difference  -  startValue);  }	  end.add(field,    newdiff    +    1    *    difference    );    end.add(field,    newdiff    +    1    *    difference    );    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
333	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  field  -  startValue);  if(newdiff!=  0)  {  end.add(newdiff,  field  -  startValue);  }  else  {  return  0;  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(newdiff,    field    -    startValue);    if(newdiff!=  0)  {  end.add(newdiff,  field  -  startValue);  }  else  {  return  0;  }	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
334	[BUG]  [BUGGY]  end.add(newdiff,  field  -  startValue);  if(newdiff!=  0)  {  end.add(newdiff,  field  -  startValue);  }  else  {  return  0;  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  field  -  startValue);  if(newdiff!=  0)  {  end.add(newdiff,  field  -  startValue);  }  else  {  return  0;  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,    field    -    startValue);    if(newdiff!=  0)  {  end.add(newdiff,  field  -  startValue);  }  else  {  return  0;  }	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
335	[BUG]  [BUGGY]  end.add(newdiff,  field  -  startValue);  int  end.add(newdiff,  field  -  startValue);  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  field  -  startValue);  int  end.add(newdiff,  field  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,    field    -    startValue);    int  end.add(newdiff,  field  -  startValue);	  	non-compiled	[CE]  ';'  expected	49	None	add
336	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  field  -  startValue);  if(newdiff!=  0)  {  end.add(newdiff,  field  -  startValue);  }  else  {  return  1;  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(newdiff,    field    -    startValue);    if(newdiff!=  0)  {  end.add(newdiff,  field  -  startValue);  }  else  {  return  1;  }	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
337	[BUG]  [BUGGY]  end.add(newdiff,  field  -  startValue);  if(newdiff!=  0)  {  end.add(newdiff,  field  -  startValue);  }  else  {  return  1;  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(newdiff,  field  -  startValue);  if(newdiff!=  0)  {  end.add(newdiff,  field  -  startValue);  }  else  {  return  1;  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,    field    -    startValue);    if(newdiff!=  0)  {  end.add(newdiff,  field  -  startValue);  }  else  {  return  1;  }	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
338	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(field,  endValue,  difference);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(field,  endValue,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(field,  endValue,  difference);	  int    milliseconds    =    getMilliseconds(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
339	[BUG]  [BUGGY]  end.add(field,    newdiff    +    1);    end.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1));  end.add(field,  newdiff  +  1);  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    +    1);    end.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1));  end.add(field,  newdiff  +  1);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,        newdiff        +        1);        end.add(field,    newdiff    +    1);    end.add(field,  newdiff  +  1));  end.add(field,  newdiff  +  1);	  	non-compiled	[CE]  ';'  expected	17	None	add
340	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(endValue,  endValue  -  startValue);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(endValue,  endValue  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(endValue,  endValue  -  startValue);	  int    milliseconds    =    getMilliseconds(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
341	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(field,  endValue  -  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(field,  endValue  -  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(field,  endValue  -  1);	  int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	88	None	replace
342	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(end,  startValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(end,  startValue,  difference);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(end,  startValue,  difference);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	81	None	replace
343	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(endValue,  startValue  -  endValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(endValue,  startValue  -  endValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(endValue,  startValue  -  endValue);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	80	None	replace
344	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(field,  endValue  -  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(field,  endValue  -  startValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(field,  endValue  -  startValue);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue    -    difference);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	80	None	replace
345	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(field,  endValue  -  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(field,  endValue  -  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(field,  endValue  -  1);	  int    days    =    DateTimeUtils.getDaysInYear(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	82	None	replace
346	[BUG]  [BUGGY]  if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);  }	  end.add(field,    newdiff    -    startValue);    int    field    =    start.get(field);    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
347	[BUG]  [BUGGY]  end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);  End.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  [CE]  cannot  find  symbol  End  [FE]    ComparisonFailure    [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);  End.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,        newdiff        -        startValue);        end.add(field,    newdiff    -    startValue);    End.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);	  	non-compiled	[CE]  cannot  find  symbol  End	31	None	add
348	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  -  2;  [CE]  cannot  find  symbol  DateTimeUtils  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  -  2;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.currentTimeMillis()  -  2;	  int    days    =    DateTimeUtils.currentTimeMillis()    -    1;    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	36	None	replace
349	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  newdiff  +  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  newdiff  +  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  newdiff  +  1);	  int    days    =    DateTimeUtils.getDaysInYearMonth(endValue,    newdiff);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	53	None	replace
350	[BUG]  [BUGGY]  if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  int  end.add(field,  newdiff  -  startValue);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  int  end.add(field,  newdiff  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  int  end.add(field,  newdiff  -  startValue);  }	  end.add(field,    newdiff    -    startValue);    int    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
351	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(change,  startValue  -  endValue);  [CE]  cannot  find  symbol  change  [FE]            ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  Math.min(change,  startValue  -  endValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(change,  startValue  -  endValue);	  int    milliseconds    =    Math.min(milliseconds,    startValue    -    endValue);    	non-compiled	[CE]  cannot  find  symbol  change	64	None	replace
352	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(field,  newdiff,  endValue);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(field,  newdiff,  endValue);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(field,  newdiff,  endValue);	  int    milliseconds    =    getMilliseconds(newdiff,    startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
353	[BUG]  [BUGGY]  int  end  =  startValue.add(field,  newdiff);  [CE]  variable  end  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  end  =  startValue.add(field,  newdiff);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  end  =  startValue.add(field,  newdiff);	  end.add(field,    newdiff    +    1);    int    end.add(field,    newdiff    +    1);    	non-compiled	[CE]  variable  end  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	19	None	replace
354	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(endValue,  field);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  milliseconds  =  getMilliseconds(endValue,  field);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(endValue,  field);	  int    milliseconds    =    getMilliseconds(endValue,    difference);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
355	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(end,  startValue  -  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  DateTimeUtils.getDays(end,  startValue  -  1);  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(end,  startValue  -  1);	  int    days    =    DateTimeUtils.getDays(startValue,    endValue    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	94	None	replace
356	[BUG]  [BUGGY]  int  days  =  difference  -  this.endValue;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  difference  -  this.endValue;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  difference  -  this.endValue;	  int    days    =    this.days    -    this.endValue;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	86	None	replace
357	[BUG]  [BUGGY]  int  days  =  this.days  -  difference;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  int  days  =  this.days  -  difference;  [BUGGY]      end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  this.days  -  difference;	  int    days    =    this.days    -    this.endValue;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	86	None	replace
358	[BUG]  [BUGGY]  if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);  }  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	if(newdiff  <  =  0)  {  end.add(field,  newdiff  -  startValue);  }  else  {  int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);  }	  end.add(field,    newdiff    -    startValue);    int    field    =    startValue.get(field);    end.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
359	[BUG]  [BUGGY]  end.add(field,  newdiff  -  1,  startValue);  [CE]  method  add  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;      [BUGGY]  end.add(field,  newdiff  -  1,  startValue);  [BUGGY]      return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,  newdiff  -  1,  startValue);	  end.add(field,    newdiff    -    startValue);    End.add(field,    newdiff    -    startValue);    	non-compiled	[CE]  method  add  in  class  Calendar  cannot  be  applied  to  given  types;	34	None	replace
