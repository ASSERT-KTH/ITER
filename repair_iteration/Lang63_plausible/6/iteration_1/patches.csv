bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  +  1  *  difference  -  1);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,  newdiff  +  1  *  difference  -  1);	  end.add(field,    newdiff    +    1    *    difference    );    	compilable	  [FE]  ComparisonFailure  	16	1	replace
2	[BUG]  [BUGGY]  end.add(field,  newdiff  +  1  *  difference  -  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  +  1  *  difference  -  1);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,  newdiff  +  1  *  difference  -  1);	  end.add(field,    newdiff    +    1    *    difference    );    	compilable	  [FE]  ComparisonFailure  	16	1	replace
3	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  newdiff);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  newdiff);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(startValue,  newdiff);	      int    days    =    DateTimeUtils.getDaysInYear(startValue,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	4	None	replace
4	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(endValue,  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(endValue,  startValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(endValue,  startValue);	      int    days    =    DateTimeUtils.getDaysInYear(startValue,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	4	None	replace
5	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(newdiff,  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(newdiff,  startValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(newdiff,  startValue);	      int    days    =    DateTimeUtils.getDaysInYear(startValue,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	4	None	replace
6	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue,  difference);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue,  difference);	      int    days    =    DateTimeUtils.getDaysInYear(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	2	None	replace
7	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  newdiff);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  newdiff);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  newdiff);	      int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	20	None	replace
8	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  startValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  startValue);	      int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	20	None	replace
9	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(startValue,  newdiff  +  1);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(startValue,  newdiff  +  1);	  end.add(field,    newdiff    +    1);    	compilable	  [FE]  IllegalArgumentException  	18	1	replace
10	[BUG]  [BUGGY]  end.add(startValue,  newdiff  +  1);  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(startValue,  newdiff  +  1);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(startValue,  newdiff  +  1);	  end.add(field,    newdiff    +    1);    	compilable	  [FE]  IllegalArgumentException  	18	1	replace
11	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  newdiff);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  newdiff);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(startValue,  newdiff);	      int    days    =    DateTimeUtils.getDays(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	3	None	replace
12	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(endValue,  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDays(endValue,  startValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(endValue,  startValue);	      int    days    =    DateTimeUtils.getDays(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	3	None	replace
13	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(newdiff,  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDays(newdiff,  startValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(newdiff,  startValue);	      int    days    =    DateTimeUtils.getDays(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	3	None	replace
14	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(newdiff,  endValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDays(newdiff,  endValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(newdiff,  endValue);	      int    days    =    DateTimeUtils.getDays(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	3	None	replace
15	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  startValue,  endValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  startValue,  endValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(newdiff,  startValue,  endValue);	      int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	19	None	replace
16	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue,  difference);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue,  difference);	      int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	19	None	replace
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,    newdiff    +    1);    end.add(field,  newdiff  +  1);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
18	[BUG]  [BUGGY]  end.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    +    1);    end.add(field,  newdiff  +  1);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
19	[BUG]  [BUGGY]  end.add(field,  newdiff  +  1);  int  end.add(field,  newdiff  +  1);  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  +  1);  int  end.add(field,  newdiff  +  1);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    +    1);    int  end.add(field,  newdiff  +  1);	  	non-compiled	[CE]  ';'  expected	17	None	add
20	[BUG]  [BUGGY]  end.add(field,  newdiff  +  1);  End.add(field,  newdiff  +  1);  [CE]  cannot  find  symbol  End  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  +  1);  End.add(field,  newdiff  +  1);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    +    1);    End.add(field,  newdiff  +  1);	  	non-compiled	[CE]  cannot  find  symbol  End	17	None	add
21	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  endValue  -  newdiff);  [CE]  variable  milliseconds  might  not  have  been  initialized  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  endValue  -  newdiff);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(milliseconds,  endValue  -  newdiff);	      int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    	non-compiled	[CE]  variable  milliseconds  might  not  have  been  initialized	11	None	replace
22	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  newdiff  -  startValue);  [CE]  variable  milliseconds  might  not  have  been  initialized  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  newdiff  -  startValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(milliseconds,  newdiff  -  startValue);	      int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    	non-compiled	[CE]  variable  milliseconds  might  not  have  been  initialized	11	None	replace
23	[BUG]  [BUGGY]      int  days  =  startValue  -  startValue;  int  days  =  startValue  -  startValue;  [CE]  variable  days  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]      int  days  =  startValue  -  startValue;  int  days  =  startValue  -  startValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	        int    days    =    startValue    -    startValue;    int  days  =  startValue  -  startValue;	  	non-compiled	[CE]  variable  days  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	6	None	add
24	[BUG]  [BUGGY]      int  days  =  startValue  -  startValue;  int  days  =  endValue  -  startValue;  [CE]  variable  days  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]      int  days  =  startValue  -  startValue;  int  days  =  endValue  -  startValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	        int    days    =    startValue    -    startValue;    int  days  =  endValue  -  startValue;	  	non-compiled	[CE]  variable  days  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	6	None	add
25	[BUG]  [BUGGY]      int  days  =  startValue  -  startValue;  int  days  =  startValue  -  endValue;  [CE]  variable  days  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]      int  days  =  startValue  -  startValue;  int  days  =  startValue  -  endValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	        int    days    =    startValue    -    startValue;    int  days  =  startValue  -  endValue;	  	non-compiled	[CE]  variable  days  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	6	None	add
26	[BUG]  [BUGGY]      int  days  =  startValue  -  startValue;  Int  days  =  startValue  -  startValue;  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]      int  days  =  startValue  -  startValue;  Int  days  =  startValue  -  startValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	        int    days    =    startValue    -    startValue;    Int  days  =  startValue  -  startValue;	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
27	[BUG]  [BUGGY]      int  days  =  startValue  -  startValue;  int  days  =  startValue  -  startValue);  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]      int  days  =  startValue  -  startValue;  int  days  =  startValue  -  startValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	        int    days    =    startValue    -    startValue;    int  days  =  startValue  -  startValue);	  	non-compiled	[CE]  ';'  expected	6	None	add
28	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,    newdiff    +    1    *    difference    );    end.add(field,  newdiff  +  1  *  difference  );	  	compilable	  [FE]  ComparisonFailure  	15	1	add
29	[BUG]  [BUGGY]  end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  +  1  *  difference  );  end.add(field,  newdiff  +  1  *  difference  );  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    +    1    *    difference    );    end.add(field,  newdiff  +  1  *  difference  );	  	compilable	  [FE]  ComparisonFailure  	15	1	add
30	[BUG]  [BUGGY]  end.add(field,  newdiff  +  1  *  difference  );  int  end.add(field,  newdiff  +  1  *  difference  );  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  +  1  *  difference  );  int  end.add(field,  newdiff  +  1  *  difference  );  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    +    1    *    difference    );    int  end.add(field,  newdiff  +  1  *  difference  );	  	non-compiled	[CE]  ';'  expected	15	None	add
31	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
32	[BUG]  [BUGGY]  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  -  startValue);  end.add(field,  newdiff  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    -    startValue);    end.add(field,  newdiff  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
33	[BUG]  [BUGGY]  end.add(field,  newdiff  -  startValue);  int  end.add(field,  newdiff  -  startValue);  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  -  startValue);  int  end.add(field,  newdiff  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    -    startValue);    int  end.add(field,  newdiff  -  startValue);	  	non-compiled	[CE]  ';'  expected	13	None	add
34	[BUG]  [BUGGY]  end.add(field,  newdiff  -  startValue);  End.add(field,  newdiff  -  startValue);  [CE]  cannot  find  symbol  End  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  -  startValue);  End.add(field,  newdiff  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    -    startValue);    End.add(field,  newdiff  -  startValue);	  	non-compiled	[CE]  cannot  find  symbol  End	13	None	add
35	[BUG]  [BUGGY]  end.add(field,  newdiff  -  startValue);  int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);  [CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  -  startValue);  int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    -    startValue);    int  field  =  startValue.get(field);  end.add(field,  newdiff  -  startValue);	  	non-compiled	[CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	13	None	add
36	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  -  1;  [CE]  cannot  find  symbol  DateTimeUtils  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  -  1;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.currentTimeMillis()  -  1;	      int    days    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	1	None	replace
37	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  -  startValue;  [CE]  cannot  find  symbol  DateTimeUtils  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  -  startValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.currentTimeMillis()  -  startValue;	      int    days    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	1	None	replace
38	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  /  difference;  [CE]  cannot  find  symbol  DateTimeUtils  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  /  difference;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.currentTimeMillis()  /  difference;	      int    days    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	1	None	replace
39	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	        int    seconds    =    startValue    -    startValue;    int  seconds  =  startValue  -  startValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	8	None	add
40	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  endValue  -  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  endValue  -  startValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	        int    seconds    =    startValue    -    startValue;    int  seconds  =  endValue  -  startValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	8	None	add
41	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  -  endValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  -  endValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	        int    seconds    =    startValue    -    startValue;    int  seconds  =  startValue  -  endValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	8	None	add
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]      int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	        int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;	  	compilable	  [FE]  ComparisonFailure  	8	1	add
43	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]      int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	        int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;	  	compilable	  [FE]  ComparisonFailure  	8	1	add
44	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  Int  seconds  =  startValue  -  startValue;  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]      int  seconds  =  startValue  -  startValue;  Int  seconds  =  startValue  -  startValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	        int    seconds    =    startValue    -    startValue;    Int  seconds  =  startValue  -  startValue;	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
45	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  newdiff);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  newdiff);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(startValue,  newdiff);	      int    milliseconds    =    getMilliseconds(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
46	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  startValue,  endValue);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  startValue,  endValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(newdiff,  startValue,  endValue);	      int    milliseconds    =    getMilliseconds(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
47	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(endValue,  startValue);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  milliseconds  =  getMilliseconds(endValue,  startValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(endValue,  startValue);	      int    milliseconds    =    getMilliseconds(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
48	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  startValue);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff,  startValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(newdiff,  startValue);	      int    milliseconds    =    getMilliseconds(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
49	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(newdiff,  field  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(newdiff,  field  -  startValue);	  end.add(field,    newdiff    -    startValue);    	compilable	  [FE]  IllegalArgumentException  	14	1	replace
50	[BUG]  [BUGGY]  end.add(newdiff,  field  -  startValue);  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(newdiff,  field  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,  field  -  startValue);	  end.add(field,    newdiff    -    startValue);    	compilable	  [FE]  IllegalArgumentException  	14	1	replace
51	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(newdiff,  newdiff  -  startValue);	  end.add(field,    newdiff    -    startValue);    	compilable	  [FE]  IllegalArgumentException  	14	1	replace
52	[BUG]  [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(newdiff,  newdiff  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(newdiff,  newdiff  -  startValue);	  end.add(field,    newdiff    -    startValue);    	compilable	  [FE]  IllegalArgumentException  	14	1	replace
53	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  newdiff);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  newdiff);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  newdiff);	      int    days    =    DateTimeUtils.getDaysInYearMonth(endValue,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	21	None	replace
54	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(field,  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(field,  startValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(field,  startValue);	      int    days    =    DateTimeUtils.getDaysInYearMonth(endValue,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	21	None	replace
55	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  milliseconds  =  getMilliseconds(newdiff);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(newdiff);	      int    milliseconds    =    getMilliseconds(startValue);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
56	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(endValue);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  milliseconds  =  getMilliseconds(endValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(endValue);	      int    milliseconds    =    getMilliseconds(startValue);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
57	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  difference);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  difference);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(startValue,  difference);	      int    milliseconds    =    getMilliseconds(startValue);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
58	[BUG]  [BUGGY]      int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  [CE]  variable  milliseconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]      int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	        int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int  milliseconds  =  Math.min(endValue,  difference  -  startValue);	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	10	None	add
59	[BUG]  [BUGGY]      int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  int  milliseconds  =  Math.min(endValue,  difference  -  endValue);  [CE]  variable  milliseconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]      int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  int  milliseconds  =  Math.min(endValue,  difference  -  endValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	        int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int  milliseconds  =  Math.min(endValue,  difference  -  endValue);	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	10	None	add
60	[BUG]  [BUGGY]      int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  int  milliseconds  =  Math.min(endValue,  différence  -  startValue);  [CE]  variable  milliseconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]      int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  int  milliseconds  =  Math.min(endValue,  différence  -  startValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	        int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int  milliseconds  =  Math.min(endValue,  différence  -  startValue);	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	10	None	add
61	[BUG]  [BUGGY]      int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  Int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]      int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  Int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	        int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    Int  milliseconds  =  Math.min(endValue,  difference  -  startValue);	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
62	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue  -  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue  -  difference);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue  -  difference);	      int    days    =    DateTimeUtils.getDaysInYear(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	2	None	replace
63	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  endValue  -  startValue);  [CE]  variable  milliseconds  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  endValue  -  startValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(milliseconds,  endValue  -  startValue);	      int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    	non-compiled	[CE]  variable  milliseconds  might  not  have  been  initialized	11	None	replace
64	[BUG]  [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  startValue  -  endValue);  [CE]  variable  milliseconds  might  not  have  been  initialized  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  milliseconds  =  Math.min(milliseconds,  startValue  -  endValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  Math.min(milliseconds,  startValue  -  endValue);	      int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    	non-compiled	[CE]  variable  milliseconds  might  not  have  been  initialized	11	None	replace
65	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  endValue,  difference);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  endValue,  difference);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(startValue,  endValue,  difference);	      int    milliseconds    =    getMilliseconds(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
66	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  endValue  -  difference);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  endValue  -  difference);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(startValue,  endValue  -  difference);	      int    milliseconds    =    getMilliseconds(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
67	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  difference);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  difference);	      int    days    =    DateTimeUtils.getDaysInYearMonth(endValue,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	21	None	replace
68	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  +  1;  [CE]  cannot  find  symbol  DateTimeUtils  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.currentTimeMillis()  +  1;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.currentTimeMillis()  +  1;	      int    days    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	1	None	replace
69	[BUG]  [BUGGY]      int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  int  milliseconds  =  Math.min(startValue,  difference  -  startValue);  [CE]  variable  milliseconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]      int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  int  milliseconds  =  Math.min(startValue,  difference  -  startValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	        int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int  milliseconds  =  Math.min(startValue,  difference  -  startValue);	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	10	None	add
70	[BUG]  [BUGGY]      int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  int  milliseconds  =  Math.max(endValue,  difference  -  startValue);  [CE]  variable  milliseconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]      int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  int  milliseconds  =  Math.max(endValue,  difference  -  startValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	        int    milliseconds    =    Math.min(endValue,    difference    -    startValue);    int  milliseconds  =  Math.max(endValue,  difference  -  startValue);	  	non-compiled	[CE]  variable  milliseconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	10	None	add
71	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(field,  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(field,  startValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(field,  startValue);	      int    days    =    DateTimeUtils.getDaysInYear(startValue,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	4	None	replace
72	[BUG]  [BUGGY]      int  days  =  startValue  -  startValue;  int  days  =  startValue  +  startValue;  [CE]  variable  days  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]      int  days  =  startValue  -  startValue;  int  days  =  startValue  +  startValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	        int    days    =    startValue    -    startValue;    int  days  =  startValue  +  startValue;	  	non-compiled	[CE]  variable  days  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	6	None	add
73	[BUG]  [BUGGY]  end.add(field,  newdiff  -  startValue);  int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);  [CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  -  startValue);  int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    -    startValue);    int  field  =  start.get(field);  end.add(field,  newdiff  -  startValue);	  	non-compiled	[CE]  variable  field  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	13	None	add
74	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  difference);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  difference);	      int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	20	None	replace
75	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  +  2);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,  newdiff  +  2);	  end.add(field,    newdiff    +    1);    	compilable	  [FE]  ComparisonFailure  	18	1	replace
76	[BUG]  [BUGGY]  end.add(field,  newdiff  +  2);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  +  2);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,  newdiff  +  2);	  end.add(field,    newdiff    +    1);    	compilable	  [FE]  ComparisonFailure  	18	1	replace
77	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue  -  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue  -  difference);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue  -  difference);	      int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	19	None	replace
78	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(endValue,  difference);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  milliseconds  =  getMilliseconds(endValue,  difference);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(endValue,  difference);	      int    milliseconds    =    getMilliseconds(startValue);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
79	[BUG]  [BUGGY]  end.add(field,  newdiff  +  1  *  difference  );  End.add(field,  newdiff  +  1  *  difference  );  [CE]  cannot  find  symbol  End  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  +  1  *  difference  );  End.add(field,  newdiff  +  1  *  difference  );  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,    newdiff    +    1    *    difference    );    End.add(field,  newdiff  +  1  *  difference  );	  	non-compiled	[CE]  cannot  find  symbol  End	15	None	add
80	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  endValue  -  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  endValue  -  difference);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(startValue,  endValue  -  difference);	      int    days    =    DateTimeUtils.getDays(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	3	None	replace
81	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  endValue,  difference);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  endValue,  difference);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(startValue,  endValue,  difference);	      int    days    =    DateTimeUtils.getDays(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	3	None	replace
82	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue  -  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue  -  1);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue  -  1);	      int    days    =    DateTimeUtils.getDaysInYear(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	2	None	replace
83	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  endValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  endValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  endValue);	      int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	20	None	replace
84	[BUG]  [BUGGY]  int  seconds  =  this.endValue  -  this.startValue;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  seconds  =  this.endValue  -  this.startValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  seconds  =  this.endValue  -  this.startValue;	      int    seconds    =    startValue    -    startValue;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	9	None	replace
85	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  +  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  +  startValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	        int    seconds    =    startValue    -    startValue;    int  seconds  =  startValue  +  startValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	8	None	add
86	[BUG]  [BUGGY]  int  days  =  this.days  -  this.endValue;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  this.days  -  this.endValue;  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  this.days  -  this.endValue;	      int    days    =    startValue    -    startValue;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	7	None	replace
87	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(endValue,  endValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDaysInYear(endValue,  endValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYear(endValue,  endValue);	      int    days    =    DateTimeUtils.getDaysInYear(startValue,    startValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	4	None	replace
88	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue  -  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue  -  1);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue  -  1);	      int    days    =    DateTimeUtils.getDaysInYearMonth(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	19	None	replace
89	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  /  1);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,  newdiff  /  1);	  end.add(field,    newdiff    +    1);    	compilable	  [FE]  ComparisonFailure  	18	1	replace
90	[BUG]  [BUGGY]  end.add(field,  newdiff  /  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  /  1);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,  newdiff  /  1);	  end.add(field,    newdiff    +    1);    	compilable	  [FE]  ComparisonFailure  	18	1	replace
91	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  *  1);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,  newdiff  *  1);	  end.add(field,    newdiff    +    1);    	compilable	  [FE]  ComparisonFailure  	18	1	replace
92	[BUG]  [BUGGY]  end.add(field,  newdiff  *  1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  end.add(field,  newdiff  *  1);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,  newdiff  *  1);	  end.add(field,    newdiff    +    1);    	compilable	  [FE]  ComparisonFailure  	18	1	replace
93	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(end,  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDays(end,  startValue);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(end,  startValue);	      int    days    =    DateTimeUtils.getDays(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	3	None	replace
94	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  endValue  -  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  endValue  -  1);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(startValue,  endValue  -  1);	      int    days    =    DateTimeUtils.getDays(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	3	None	replace
95	[BUG]  [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  endValue  +  1);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  days  =  DateTimeUtils.getDays(startValue,  endValue  +  1);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  days  =  DateTimeUtils.getDays(startValue,  endValue  +  1);	      int    days    =    DateTimeUtils.getDays(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	3	None	replace
96	[BUG]  [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  endValue  -  1);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;    [BUGGY]  int  milliseconds  =  getMilliseconds(startValue,  endValue  -  1);  [BUGGY]    end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	int  milliseconds  =  getMilliseconds(startValue,  endValue  -  1);	      int    milliseconds    =    getMilliseconds(startValue,    endValue);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
