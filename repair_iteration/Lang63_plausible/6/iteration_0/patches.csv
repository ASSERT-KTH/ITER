bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    int  days  =  DateTimeUtils.currentTimeMillis();  [CE]  cannot  find  symbol  DateTimeUtils  [FE]    ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]    int  days  =  DateTimeUtils.currentTimeMillis();  [BUGGY]  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	    int  days  =  DateTimeUtils.currentTimeMillis();		non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	12	None	add
2	[BUG]  [BUGGY]    int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]      ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]    int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue);  [BUGGY]  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	    int  days  =  DateTimeUtils.getDaysInYear(startValue,  endValue);		non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	12	None	add
3	[BUG]  [BUGGY]    int  days  =  DateTimeUtils.getDays(startValue,  endValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]          ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]    int  days  =  DateTimeUtils.getDays(startValue,  endValue);  [BUGGY]  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	    int  days  =  DateTimeUtils.getDays(startValue,  endValue);		non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	12	None	add
4	[BUG]  [BUGGY]    int  days  =  DateTimeUtils.getDaysInYear(startValue,  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]            ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]    int  days  =  DateTimeUtils.getDaysInYear(startValue,  startValue);  [BUGGY]  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	    int  days  =  DateTimeUtils.getDaysInYear(startValue,  startValue);		non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	12	None	add
5	[BUG]  [BUGGY]    int  milliseconds  =  getMilliseconds(startValue,  endValue);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]    int  milliseconds  =  getMilliseconds(startValue,  endValue);  [BUGGY]  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	    int  milliseconds  =  getMilliseconds(startValue,  endValue);		non-compiled	[CE]  cannot  find  symbol	12	None	add
6	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]    int  days  =  startValue  -  startValue;  [BUGGY]  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	    int  days  =  startValue  -  startValue;		compilable	  [FE]  ComparisonFailure  	12	1	add
7	[BUG]  [BUGGY]    int  days  =  startValue  -  startValue;  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]    int  days  =  startValue  -  startValue;  [BUGGY]  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	    int  days  =  startValue  -  startValue;		compilable	  [FE]  ComparisonFailure  	12	1	add
8	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]    int  seconds  =  startValue  -  startValue;  [BUGGY]  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	    int  seconds  =  startValue  -  startValue;		compilable	  [FE]  ComparisonFailure  	12	1	add
9	[BUG]  [BUGGY]    int  seconds  =  startValue  -  startValue;  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]    int  seconds  =  startValue  -  startValue;  [BUGGY]  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	    int  seconds  =  startValue  -  startValue;		compilable	  [FE]  ComparisonFailure  	12	1	add
10	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]    int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  [BUGGY]  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	    int  milliseconds  =  Math.min(endValue,  difference  -  startValue);		compilable	  [FE]  ComparisonFailure  	12	1	add
11	[BUG]  [BUGGY]    int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]    int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  [BUGGY]  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	    int  milliseconds  =  Math.min(endValue,  difference  -  startValue);		compilable	  [FE]  ComparisonFailure  	12	1	add
12	[BUG]  [BUGGY]    int  milliseconds  =  getMilliseconds(startValue);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]    int  milliseconds  =  getMilliseconds(startValue);  [BUGGY]  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	    int  milliseconds  =  getMilliseconds(startValue);		non-compiled	[CE]  cannot  find  symbol	12	None	add
13	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]  end.add(field,  newdiff  -  startValue);  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,  newdiff  -  startValue);	end.add(  field,  newdiff  );  	compilable	  [FE]  ComparisonFailure  	11	1	replace
14	[BUG]  [BUGGY]  end.add(field,  newdiff  -  startValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]  end.add(field,  newdiff  -  startValue);  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,  newdiff  -  startValue);	end.add(  field,  newdiff  );  	compilable	  [FE]  ComparisonFailure  	11	1	replace
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]  end.add(field,  newdiff  +  1  *  difference  );  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,  newdiff  +  1  *  difference  );	end.add(  field,  newdiff  );  	compilable	  [FE]  ComparisonFailure  	11	1	replace
16	[BUG]  [BUGGY]  end.add(field,  newdiff  +  1  *  difference  );  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]  end.add(field,  newdiff  +  1  *  difference  );  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,  newdiff  +  1  *  difference  );	end.add(  field,  newdiff  );  	compilable	  [FE]  ComparisonFailure  	11	1	replace
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]  end.add(field,  newdiff  +  1);  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	add	end.add(field,  newdiff  +  1);	end.add(  field,  newdiff  );  	compilable	  [FE]  ComparisonFailure  	11	1	replace
18	[BUG]  [BUGGY]  end.add(field,  newdiff  +  1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]  end.add(field,  newdiff  +  1);  [BUGGY]  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	end.add(field,  newdiff  +  1);	end.add(  field,  newdiff  );  	compilable	  [FE]  ComparisonFailure  	11	1	replace
19	[BUG]  [BUGGY]    int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]    ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]    int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue);  [BUGGY]  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	    int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  endValue);		non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	12	None	add
20	[BUG]  [BUGGY]    int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]      ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]    int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  startValue);  [BUGGY]  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	    int  days  =  DateTimeUtils.getDaysInYearMonth(startValue,  startValue);		non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	12	None	add
21	[BUG]  [BUGGY]    int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  startValue);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]        ComparisonFailure  [CONTEXT]  static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  [BUGGY]    int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  startValue);  [BUGGY]  end.add(  field,  newdiff  );  return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	438	438	1	replace	    int  days  =  DateTimeUtils.getDaysInYearMonth(endValue,  startValue);		non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	12	None	add
