bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]      int  seconds  =  startValue  -  endValue;  int  seconds  =  startValue  -  endValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      int  seconds  =  startValue  -  endValue;  int  seconds  =  startValue  -  endValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        int    seconds    =    startValue    -    endValue;    int  seconds  =  startValue  -  endValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	15	None	add
2	[BUG]  [BUGGY]      int  seconds  =  startValue  -  endValue;  int  seconds  =  endValue  -  endValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      int  seconds  =  startValue  -  endValue;  int  seconds  =  endValue  -  endValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        int    seconds    =    startValue    -    endValue;    int  seconds  =  endValue  -  endValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	15	None	add
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      int  seconds  =  startValue  -  endValue;  int  minutes  =  startValue  -  endValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	        int    seconds    =    startValue    -    endValue;    int  minutes  =  startValue  -  endValue;	  	compilable	  [FE]  ComparisonFailure  	15	1	add
4	[BUG]  [BUGGY]      int  seconds  =  startValue  -  endValue;  int  minutes  =  startValue  -  endValue;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      int  seconds  =  startValue  -  endValue;  int  minutes  =  startValue  -  endValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        int    seconds    =    startValue    -    endValue;    int  minutes  =  startValue  -  endValue;	  	compilable	  [FE]  ComparisonFailure  	15	1	add
5	[BUG]  [BUGGY]      int  seconds  =  startValue  -  endValue;  int  seconds  =  startValue  -  endValue);  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      int  seconds  =  startValue  -  endValue;  int  seconds  =  startValue  -  endValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        int    seconds    =    startValue    -    endValue;    int  seconds  =  startValue  -  endValue);	  	non-compiled	[CE]  ';'  expected	15	None	add
6	[BUG]  [BUGGY]      int  seconds  =  startValue  -  endValue;  Int  seconds  =  startValue  -  endValue;  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      int  seconds  =  startValue  -  endValue;  Int  seconds  =  startValue  -  endValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        int    seconds    =    startValue    -    endValue;    Int  seconds  =  startValue  -  endValue;	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  2;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  newdiff  -  2;	  return    newdiff    -    1;    	compilable	  [FE]  ComparisonFailure  	8	1	replace
8	[BUG]  [BUGGY]  return  newdiff  -  2;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  2;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -  2;	  return    newdiff    -    1;    	compilable	  [FE]  ComparisonFailure  	8	1	replace
9	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  /  1;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  newdiff  /  1;	  return    newdiff    -    1;    	compilable	  [FE]  ComparisonFailure  	8	1	replace
10	[BUG]  [BUGGY]  return  newdiff  /  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  /  1;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  /  1;	  return    newdiff    -    1;    	compilable	  [FE]  ComparisonFailure  	8	1	replace
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  1  +  1;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  newdiff  -  1  +  1;	  return    newdiff    -    1;    	compilable	  [FE]  ComparisonFailure  	8	1	replace
12	[BUG]  [BUGGY]  return  newdiff  -  1  +  1;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  1  +  1;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -  1  +  1;	  return    newdiff    -    1;    	compilable	  [FE]  ComparisonFailure  	8	1	replace
13	[BUG]  [BUGGY]  int  milliseconds  =  endValue.get(field);  [CE]  int  cannot  be  dereferenced  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  milliseconds  =  endValue.get(field);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  endValue.get(field);	      if(diff    >    0)    {    for(int    i    =    startValue    -    1;    i    >=    0;    i--)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  int  cannot  be  dereferenced	25	None	replace
14	[BUG]  [BUGGY]  int  milliseconds  =  endValue.getMilliseconds();  [CE]  int  cannot  be  dereferenced  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  milliseconds  =  endValue.getMilliseconds();  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  endValue.getMilliseconds();	      if(diff    >    0)    {    for(int    i    =    startValue    -    1;    i    >=    0;    i--)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  int  cannot  be  dereferenced	25	None	replace
15	[BUG]  [BUGGY]  int  milliseconds  =  endValue.getMillis();  [CE]  int  cannot  be  dereferenced  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  milliseconds  =  endValue.getMillis();  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  endValue.getMillis();	      if(diff    >    0)    {    for(int    i    =    startValue    -    1;    i    >=    0;    i--)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  int  cannot  be  dereferenced	25	None	replace
16	[BUG]  [BUGGY]  int  milliseconds  =  endValue.getMilliseconds(field);  [CE]  int  cannot  be  dereferenced  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  milliseconds  =  endValue.getMilliseconds(field);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  endValue.getMilliseconds(field);	      if(diff    >    0)    {    for(int    i    =    startValue    -    1;    i    >=    0;    i--)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  int  cannot  be  dereferenced	25	None	replace
17	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)/  startValue);  [CE]  no  suitable  method  found  for  min(int)  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  Math.min(end.get(field)/  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)/  startValue);	      int    seconds    =    Math.min(end.get(field)-    startValue);    	non-compiled	[CE]  no  suitable  method  found  for  min(int)	20	None	replace
18	[BUG]  [BUGGY]  int  seconds  =  Math.min(startValue.get(field)-  endValue);  [CE]  int  cannot  be  dereferenced  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  Math.min(startValue.get(field)-  endValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(startValue.get(field)-  endValue);	      int    seconds    =    Math.min(end.get(field)-    startValue);    	non-compiled	[CE]  int  cannot  be  dereferenced	20	None	replace
19	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)-  newdiff);  [CE]  no  suitable  method  found  for  min(int)  [FE]                  ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  Math.min(end.get(field)-  newdiff);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)-  newdiff);	      int    seconds    =    Math.min(end.get(field)-    startValue);    	non-compiled	[CE]  no  suitable  method  found  for  min(int)	20	None	replace
20	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)-  newdiff,  startValue);  [CE]  missing  return  statement  [FE]                    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  Math.min(end.get(field)-  newdiff,  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)-  newdiff,  startValue);	      int    seconds    =    Math.min(end.get(field)-    startValue);    	non-compiled	[CE]  missing  return  statement	20	None	replace
21	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  newdiff  -  startValue);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  end.get(field,  newdiff  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  newdiff  -  startValue);	      int    seconds    =    end.get(field,    difference    -    startValue);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	19	None	replace
22	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  startValue  -  difference);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  end.get(field,  startValue  -  difference);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  startValue  -  difference);	      int    seconds    =    end.get(field,    difference    -    startValue);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	19	None	replace
23	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  difference  -  startValue,  newdiff);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  end.get(field,  difference  -  startValue,  newdiff);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  difference  -  startValue,  newdiff);	      int    seconds    =    end.get(field,    difference    -    startValue);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	19	None	replace
24	[BUG]  [BUGGY]  int  seconds  =  start.get(field,  difference  -  endValue);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  start.get(field,  difference  -  endValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  start.get(field,  difference  -  endValue);	      int    seconds    =    end.get(field,    difference    -    startValue);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	19	None	replace
25	[BUG]  [BUGGY]  return  newdiff  -  endValue;  newdiff  -  endValue;  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  endValue;  newdiff  -  endValue;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    endValue;    newdiff  -  endValue;	  	non-compiled	[CE]  not  a  statement	9	None	add
26	[BUG]  [BUGGY]  return  newdiff  -  endValue;  int  newdiff  =  end.get(field);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  endValue;  int  newdiff  =  end.get(field);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    endValue;    int  newdiff  =  end.get(field);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	9	None	add
27	[BUG]  [BUGGY]  return  newdiff  -  endValue;  int  newdiff  -  endValue;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  endValue;  int  newdiff  -  endValue;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    endValue;    int  newdiff  -  endValue;	  	non-compiled	[CE]  ';'  expected	9	None	add
28	[BUG]  [BUGGY]  return  newdiff  -  endValue;  int  newdiff  =  startValue  -  endValue;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  endValue;  int  newdiff  =  startValue  -  endValue;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    endValue;    int  newdiff  =  startValue  -  endValue;	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	9	None	add
29	[BUG]  [BUGGY]  return  newdiff  -  endValue;  int  newdiff  =  endValue  -  endValue;  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  endValue;  int  newdiff  =  endValue  -  endValue;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    endValue;    int  newdiff  =  endValue  -  endValue;	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	9	None	add
30	[BUG]  [BUGGY]  if(newdiff  ==  0)  {  return  0;  }  [CE]  missing  return  statement  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  if(newdiff  ==  0)  {  return  0;  }  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  ==  0)  {  return  0;  }	  return    startValue;    	non-compiled	[CE]  missing  return  statement	14	None	replace
31	[BUG]  [BUGGY]  if(newdiff!=  0)  {  return  0;  }  [CE]  missing  return  statement  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  if(newdiff!=  0)  {  return  0;  }  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff!=  0)  {  return  0;  }	  return    startValue;    	non-compiled	[CE]  missing  return  statement	14	None	replace
32	[BUG]  [BUGGY]  int  seconds  =  end.get(field  +  1);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  end.get(field  +  1);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field  +  1);	      int    seconds    =    end.get(field);    	non-compiled	[CE]  missing  return  statement	18	None	replace
33	[BUG]  [BUGGY]  int  seconds  =  end.get(field  -  1);  [CE]  missing  return  statement  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  end.get(field  -  1);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field  -  1);	      int    seconds    =    end.get(field);    	non-compiled	[CE]  missing  return  statement	18	None	replace
34	[BUG]  [BUGGY]  int  seconds  =  startValue.get(field);  [CE]  int  cannot  be  dereferenced  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  startValue.get(field);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue.get(field);	      int    seconds    =    end.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	18	None	replace
35	[BUG]  [BUGGY]  int  seconds  =  endValue.get(field);  [CE]  int  cannot  be  dereferenced  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  endValue.get(field);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue.get(field);	      int    seconds    =    end.get(field);    	non-compiled	[CE]  int  cannot  be  dereferenced	18	None	replace
36	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	        newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
37	[BUG]  [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
38	[BUG]  [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  int  newdiff  =  Math.max(newdiff,  endValue);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  int  newdiff  =  Math.max(newdiff,  endValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.max(newdiff,    endValue);    int  newdiff  =  Math.max(newdiff,  endValue);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	1	None	add
39	[BUG]  [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  Newdiff  =  Math.max(newdiff,  endValue);  [CE]  cannot  find  symbol  Newdiff  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  Newdiff  =  Math.max(newdiff,  endValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.max(newdiff,    endValue);    Newdiff  =  Math.max(newdiff,  endValue);	  	non-compiled	[CE]  cannot  find  symbol  Newdiff	1	None	add
40	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	        newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
41	[BUG]  [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
42	[BUG]  [BUGGY]  return  newdiff  +  1;  newdiff  +  1;  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  +  1;  newdiff  +  1;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    +    1;    newdiff  +  1;	  	non-compiled	[CE]  not  a  statement	11	None	add
43	[BUG]  [BUGGY]  return  newdiff  +  1;  int  seconds  =  startValue  -  startValue;  end.add(  field,  newdiff  +  1);  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  +  1;  int  seconds  =  startValue  -  startValue;  end.add(  field,  newdiff  +  1);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    +    1;    int  seconds  =  startValue  -  startValue;  end.add(  field,  newdiff  +  1);	  	non-compiled	[CE]  unreachable  statement	11	None	add
44	[BUG]  [BUGGY]  return  newdiff  +  1;  int  seconds  =  startValue  -  endValue;  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  +  1;  int  seconds  =  startValue  -  endValue;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    +    1;    int  seconds  =  startValue  -  endValue;	  	non-compiled	[CE]  unreachable  statement	11	None	add
45	[BUG]  [BUGGY]  return  newdiff  +  1;  int  seconds  =  end.get(field);  [CE]  unreachable  statement  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  +  1;  int  seconds  =  end.get(field);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    +    1;    int  seconds  =  end.get(field);	  	non-compiled	[CE]  unreachable  statement	11	None	add
46	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
47	[BUG]  [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
48	[BUG]  [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  startValue);  int  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  startValue);  int  newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    int  newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	3	None	add
49	[BUG]  [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  startValue);  Newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [CE]  cannot  find  symbol  Newdiff  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  startValue);  Newdiff  =  Math.min(newdiff,  endValue  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    Newdiff  =  Math.min(newdiff,  endValue  -  startValue);	  	non-compiled	[CE]  cannot  find  symbol  Newdiff	3	None	add
50	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
51	[BUG]  [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
52	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  startValue  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
53	[BUG]  [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  startValue  -  startValue);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  startValue  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  startValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
54	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  endValue  -  difference);	      newdiff    =    Math.min(newdiff,    endValue    -    difference);    	non-compiled	[CE]  missing  return  statement	6	None	replace
55	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  1);  [CE]  missing  return  statement  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  1);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  -  1);	      newdiff    =    Math.min(newdiff,    endValue    -    difference);    	non-compiled	[CE]  missing  return  statement	6	None	replace
56	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  +  difference);  [CE]  missing  return  statement  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  +  difference);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  +  difference);	      newdiff    =    Math.min(newdiff,    endValue    -    difference);    	non-compiled	[CE]  missing  return  statement	6	None	replace
57	[BUG]  [BUGGY]  return  newdiff  -  1;  int  newdiff  -  1;  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  1;  int  newdiff  -  1;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    1;    int  newdiff  -  1;	  	non-compiled	[CE]  ';'  expected	7	None	add
58	[BUG]  [BUGGY]  return  newdiff  -  1;  newdiff  -  1;  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  1;  newdiff  -  1;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    1;    newdiff  -  1;	  	non-compiled	[CE]  not  a  statement	7	None	add
59	[BUG]  [BUGGY]  return  newdiff  -  1;  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  -  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  1;  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  -  1);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    1;    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  -  1);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	7	None	add
60	[BUG]  [BUGGY]  return  newdiff  -  1;  int  newdiff  =  endValue  -  startValue;  end.add(  field,  newdiff  -  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  1;  int  newdiff  =  endValue  -  startValue;  end.add(  field,  newdiff  -  1);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    1;    int  newdiff  =  endValue  -  startValue;  end.add(  field,  newdiff  -  1);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	7	None	add
61	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  +  2;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  newdiff  +  2;	  return    newdiff    +    1;    	compilable	  [FE]  ComparisonFailure  	12	1	replace
62	[BUG]  [BUGGY]  return  newdiff  +  2;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  +  2;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  +  2;	  return    newdiff    +    1;    	compilable	  [FE]  ComparisonFailure  	12	1	replace
63	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	        newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	5	1	add
64	[BUG]  [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	5	1	add
65	[BUG]  [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  difference);  int  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  difference);  int  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.min(newdiff,    endValue    -    difference);    int  newdiff  =  Math.min(newdiff,  endValue  -  difference);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	5	None	add
66	[BUG]  [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  difference);  Newdiff  =  Math.min(newdiff,  endValue  -  difference);  [CE]  cannot  find  symbol  Newdiff  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  difference);  Newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.min(newdiff,    endValue    -    difference);    Newdiff  =  Math.min(newdiff,  endValue  -  difference);	  	non-compiled	[CE]  cannot  find  symbol  Newdiff	5	None	add
67	[BUG]  [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  change);  [CE]  cannot  find  symbol  change  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  -  change);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  -  change);	  	non-compiled	[CE]  cannot  find  symbol  change	5	None	add
68	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	        newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	5	1	add
69	[BUG]  [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.max(newdiff,  endValue  -  difference);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.max(newdiff,  endValue  -  difference);	  	compilable	  [FE]  ComparisonFailure  	5	1	add
70	[BUG]  [BUGGY]  Context.reportCodeChange();  [CE]  cannot  find  symbol  Context  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  Context.reportCodeChange();  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Context.reportCodeChange();	      if(diff    >    0)    {    for(int    i    =    startValue;    i    <    =    endValue;    ++i)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  cannot  find  symbol  Context	26	None	replace
71	[BUG]  [BUGGY]      int  seconds  =  end.get(field);  int  seconds  =  end.get(field);  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      int  seconds  =  end.get(field);  int  seconds  =  end.get(field);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        int    seconds    =    end.get(field);    int  seconds  =  end.get(field);	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	17	None	add
72	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      int  seconds  =  end.get(field);  int  minutes  =  end.get(field);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	        int    seconds    =    end.get(field);    int  minutes  =  end.get(field);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
73	[BUG]  [BUGGY]      int  seconds  =  end.get(field);  int  minutes  =  end.get(field);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      int  seconds  =  end.get(field);  int  minutes  =  end.get(field);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        int    seconds    =    end.get(field);    int  minutes  =  end.get(field);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
74	[BUG]  [BUGGY]      int  seconds  =  end.get(field);  int  seconds  =  start.get(field);  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      int  seconds  =  end.get(field);  int  seconds  =  start.get(field);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        int    seconds    =    end.get(field);    int  seconds  =  start.get(field);	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	17	None	add
75	[BUG]  [BUGGY]      int  seconds  =  end.get(field);  Int  seconds  =  end.get(field);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      int  seconds  =  end.get(field);  Int  seconds  =  end.get(field);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        int    seconds    =    end.get(field);    Int  seconds  =  end.get(field);	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
76	[BUG]  [BUGGY]  return  startValue;  int  startValue  =  end.get(field);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  startValue;  int  startValue  =  end.get(field);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue;    int  startValue  =  end.get(field);	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	13	None	add
77	[BUG]  [BUGGY]  return  startValue;  int  seconds  =  end.get(field);  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  startValue;  int  seconds  =  end.get(field);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue;    int  seconds  =  end.get(field);	  	non-compiled	[CE]  unreachable  statement	13	None	add
78	[BUG]  [BUGGY]  return  startValue;  int  seconds  =  startValue  -  endValue;  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  startValue;  int  seconds  =  startValue  -  endValue;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue;    int  seconds  =  startValue  -  endValue;	  	non-compiled	[CE]  unreachable  statement	13	None	add
79	[BUG]  [BUGGY]  return  startValue;  int  seconds  =  startValue  -  startValue;  [CE]  unreachable  statement  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  startValue;  int  seconds  =  startValue  -  startValue;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue;    int  seconds  =  startValue  -  startValue;	  	non-compiled	[CE]  unreachable  statement	13	None	add
80	[BUG]  [BUGGY]  return  startValue;  int  seconds  =  end.get(field,  difference  -  1);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  startValue;  int  seconds  =  end.get(field,  difference  -  1);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue;    int  seconds  =  end.get(field,  difference  -  1);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	13	None	add
81	[BUG]  [BUGGY]  int  seconds  =  endValue  -  startValue;  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  endValue  -  startValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  endValue  -  startValue;	      int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  missing  return  statement	16	None	replace
82	[BUG]  [BUGGY]  int  seconds  =  startValue  -  newdiff;  [CE]  missing  return  statement  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  startValue  -  newdiff;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue  -  newdiff;	      int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  missing  return  statement	16	None	replace
83	[BUG]  [BUGGY]  int  seconds  =  newdiff  -  endValue;  [CE]  missing  return  statement  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  newdiff  -  endValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  newdiff  -  endValue;	      int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  missing  return  statement	16	None	replace
84	[BUG]  [BUGGY]  int  seconds  =  startValue  -  endValue  +  1;  [CE]  missing  return  statement  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  startValue  -  endValue  +  1;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue  -  endValue  +  1;	      int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  missing  return  statement	16	None	replace
85	[BUG]  [BUGGY]  int  seconds  =  newdiff  -  startValue;  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  newdiff  -  startValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  newdiff  -  startValue;	      int    seconds    =    startValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	22	None	replace
86	[BUG]  [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	24	None	replace
87	[BUG]  [BUGGY]  return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_DAY);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	24	None	replace
88	[BUG]  [BUGGY]  return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY,  difference);  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY,  difference);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY,  difference);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  ')'  expected	24	None	replace
89	[BUG]  [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  difference);  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  difference);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_DAY,  difference);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  ')'  expected	24	None	replace
90	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        int    seconds    =    startValue    -    startValue;    int  seconds  =  startValue  -  startValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	21	None	add
91	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  endValue  -  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  endValue  -  startValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        int    seconds    =    startValue    -    startValue;    int  seconds  =  endValue  -  startValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	21	None	add
92	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	        int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;	  	compilable	  [FE]  ComparisonFailure  	21	1	add
93	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        int    seconds    =    startValue    -    startValue;    int  minutes  =  startValue  -  startValue;	  	compilable	  [FE]  ComparisonFailure  	21	1	add
94	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue);  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        int    seconds    =    startValue    -    startValue;    int  seconds  =  startValue  -  startValue);	  	non-compiled	[CE]  ';'  expected	21	None	add
95	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  -  endValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  -  endValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        int    seconds    =    startValue    -    startValue;    int  seconds  =  startValue  -  endValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	21	None	add
96	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  endValue);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  endValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  startValue  -  endValue);	      newdiff    =    Math.min(newdiff,    endValue    -    startValue);    	non-compiled	[CE]  missing  return  statement	4	None	replace
97	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  [CE]  missing  return  statement  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  +  startValue);	      newdiff    =    Math.min(newdiff,    endValue    -    startValue);    	non-compiled	[CE]  missing  return  statement	4	None	replace
98	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  +  1);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  +  1);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  +  1);	      newdiff    =    Math.max(newdiff,    endValue);    	non-compiled	[CE]  missing  return  statement	2	None	replace
99	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  endValue  +  1;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  newdiff  -  endValue  +  1;	  return    newdiff    -    endValue;    	compilable	  [FE]  ComparisonFailure  	10	1	replace
100	[BUG]  [BUGGY]  return  newdiff  -  endValue  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  endValue  +  1;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -  endValue  +  1;	  return    newdiff    -    endValue;    	compilable	  [FE]  ComparisonFailure  	10	1	replace
101	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  difference;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  newdiff  -  difference;	  return    newdiff    -    endValue;    	compilable	  [FE]  ComparisonFailure  	10	1	replace
102	[BUG]  [BUGGY]  return  newdiff  -  difference;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  difference;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -  difference;	  return    newdiff    -    endValue;    	compilable	  [FE]  ComparisonFailure  	10	1	replace
103	[BUG]  [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(newdiff  *  DateTimeConstants.MILLIS_PER_SECOND);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	23	None	replace
104	[BUG]  [BUGGY]  return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(startValue  *  DateTimeConstants.MILLIS_PER_SECOND);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	23	None	replace
105	[BUG]  [BUGGY]  return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND,  difference);  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND,  difference);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND,  difference);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  ')'  expected	23	None	replace
106	[BUG]  [BUGGY]  return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND  +  difference);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND  +  difference);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  newdiff  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND  +  difference);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	23	None	replace
107	[BUG]  [BUGGY]  Integer  newdiff  =  endValue.get(field);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  Integer  newdiff  =  endValue.get(field);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  newdiff  =  endValue.get(field);	      if(diff    >    0)    {    for(int    i    =    startValue    -    1;    i    >=    0;    i--)    {    end.add(field,    newdiff);    }    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	28	None	replace
108	[BUG]  [BUGGY]  Integer  newdiff  =  end.get(field);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  Integer  newdiff  =  end.get(field);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  newdiff  =  end.get(field);	      if(diff    >    0)    {    for(int    i    =    startValue    -    1;    i    >=    0;    i--)    {    end.add(field,    newdiff);    }    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	28	None	replace
109	[BUG]  [BUGGY]  return  newdiff  +  1;  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  +  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  +  1;  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  +  1);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    +    1;    int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  +  1);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	11	None	add
110	[BUG]  [BUGGY]  return  newdiff  +  1;  int  newdiff  =  end.get(field);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  +  1;  int  newdiff  =  end.get(field);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    +    1;    int  newdiff  =  end.get(field);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	11	None	add
111	[BUG]  [BUGGY]  return  newdiff  +  1;  int  milliseconds  =  end.get(field);  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  +  1;  int  milliseconds  =  end.get(field);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    +    1;    int  milliseconds  =  end.get(field);	  	non-compiled	[CE]  unreachable  statement	11	None	add
112	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  Int  seconds  =  startValue  -  startValue;  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      int  seconds  =  startValue  -  startValue;  Int  seconds  =  startValue  -  startValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        int    seconds    =    startValue    -    startValue;    Int  seconds  =  startValue  -  startValue;	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
113	[BUG]  [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  Integer  newdiff  =  Math.max(newdiff,  endValue);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  Integer  newdiff  =  Math.max(newdiff,  endValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.max(newdiff,    endValue);    Integer  newdiff  =  Math.max(newdiff,  endValue);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	1	None	add
114	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	        newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
115	[BUG]  [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  endValue  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
116	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	        newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  startValue);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
117	[BUG]  [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  startValue);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  newdiff  =  Math.max(newdiff,  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  startValue);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
118	[BUG]  [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  difference);  Integer  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  difference);  Integer  newdiff  =  Math.min(newdiff,  endValue  -  difference);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.min(newdiff,    endValue    -    difference);    Integer  newdiff  =  Math.min(newdiff,  endValue  -  difference);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	5	None	add
119	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  startValue  +  1);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  startValue  +  1);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  -  startValue  +  1);	      newdiff    =    Math.min(newdiff,    endValue    -    startValue);    	non-compiled	[CE]  missing  return  statement	4	None	replace
120	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  startValue  -  1;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  startValue  -  1;	  return    newdiff    -    1;    	compilable	  [FE]  ComparisonFailure  	8	1	replace
121	[BUG]  [BUGGY]  return  startValue  -  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  startValue  -  1;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  startValue  -  1;	  return    newdiff    -    1;    	compilable	  [FE]  ComparisonFailure  	8	1	replace
122	[BUG]  [BUGGY]  return  newdiff  -  endValue;  int  endValue  =  end.get(field);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  endValue;  int  endValue  =  end.get(field);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    endValue;    int  endValue  =  end.get(field);	  	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	9	None	add
123	[BUG]  [BUGGY]  return  newdiff  -  endValue;  int  endValue  =  start.get(field);  [CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  endValue;  int  endValue  =  start.get(field);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    endValue;    int  endValue  =  start.get(field);	  	non-compiled	[CE]  variable  endValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	9	None	add
124	[BUG]  [BUGGY]  return  newdiff  -  endValue;  int  newdiff  -=  endValue;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  endValue;  int  newdiff  -=  endValue;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    endValue;    int  newdiff  -=  endValue;	  	non-compiled	[CE]  ';'  expected	9	None	add
125	[BUG]  [BUGGY]  int  seconds  =  startValue  -  endValue  +  difference;  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  startValue  -  endValue  +  difference;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue  -  endValue  +  difference;	      int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  missing  return  statement	16	None	replace
126	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  startValue  -  endValue;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  startValue  -  endValue;	  return    startValue;    	compilable	  [FE]  ComparisonFailure  	14	1	replace
127	[BUG]  [BUGGY]  return  startValue  -  endValue;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  startValue  -  endValue;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  startValue  -  endValue;	  return    startValue;    	compilable	  [FE]  ComparisonFailure  	14	1	replace
128	[BUG]  [BUGGY]  int  seconds  =  difference  -  startValue;  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  difference  -  startValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  difference  -  startValue;	      int    seconds    =    startValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	22	None	replace
129	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  startValue  +  1;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  startValue  +  1;	  return    newdiff    +    1;    	compilable	  [FE]  ComparisonFailure  	12	1	replace
130	[BUG]  [BUGGY]  return  startValue  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  startValue  +  1;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  startValue  +  1;	  return    newdiff    +    1;    	compilable	  [FE]  ComparisonFailure  	12	1	replace
131	[BUG]  [BUGGY]  int  milliseconds  =  endValue  -  startValue;  [CE]  missing  return  statement  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  milliseconds  =  endValue  -  startValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  endValue  -  startValue;	      if(diff    >    0)    {    for(int    i    =    startValue    -    1;    i    >=    0;    i--)    {    end.add(field,    newdiff);    }    	non-compiled	[CE]  missing  return  statement	28	None	replace
132	[BUG]  [BUGGY]  int  milliseconds  =  startValue  -  1;  [CE]  missing  return  statement  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  milliseconds  =  startValue  -  1;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  startValue  -  1;	      if(diff    >    0)    {    for(int    i    =    startValue    -    1;    i    <    =    endValue;    i++)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  missing  return  statement	27	None	replace
133	[BUG]  [BUGGY]  int  milliseconds  =  endValue  -  1;  [CE]  missing  return  statement  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  milliseconds  =  endValue  -  1;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  endValue  -  1;	      if(diff    >    0)    {    for(int    i    =    startValue    -    1;    i    <    =    endValue;    i++)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  missing  return  statement	27	None	replace
134	[BUG]  [BUGGY]  int  milliseconds  =  startValue  -  endValue;  [CE]  missing  return  statement  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  milliseconds  =  startValue  -  endValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  startValue  -  endValue;	      if(diff    >    0)    {    for(int    i    =    startValue;    i    <    =    endValue;    ++i)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  missing  return  statement	26	None	replace
135	[BUG]  [BUGGY]  int  milliseconds  =  startValue.get(field);  [CE]  int  cannot  be  dereferenced  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  milliseconds  =  startValue.get(field);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  milliseconds  =  startValue.get(field);	      if(diff    >    0)    {    for(int    i    =    startValue;    i    <    =    endValue;    ++i)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  int  cannot  be  dereferenced	26	None	replace
136	[BUG]  [BUGGY]  Integer  newdiff  =  startValue.get(field);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  Integer  newdiff  =  startValue.get(field);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	Integer  newdiff  =  startValue.get(field);	      if(diff    >    0)    {    for(int    i    =    startValue;    i    <    =    endValue;    ++i)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	26	None	replace
137	[BUG]  [BUGGY]  int  seconds  =  end.get(field  -  startValue);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  end.get(field  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field  -  startValue);	      int    seconds    =    end.get(field);    	non-compiled	[CE]  missing  return  statement	18	None	replace
138	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  difference);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  end.get(field,  difference);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  difference);	      int    seconds    =    end.get(field);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	18	None	replace
139	[BUG]  [BUGGY]  return  newdiff  -  1;  int  newdiff  =  end.get(field);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  1;  int  newdiff  =  end.get(field);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    1;    int  newdiff  =  end.get(field);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	7	None	add
140	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)-  difference);  [CE]  no  suitable  method  found  for  min(int)  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  Math.min(end.get(field)-  difference);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)-  difference);	      int    seconds    =    Math.min(end.get(field)-    startValue);    	non-compiled	[CE]  no  suitable  method  found  for  min(int)	20	None	replace
141	[BUG]  [BUGGY]  int  seconds  =  Math.min(startValue,  end.get(field)-  endValue);  [CE]  missing  return  statement  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  Math.min(startValue,  end.get(field)-  endValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(startValue,  end.get(field)-  endValue);	      int    seconds    =    Math.min(end.get(field)-    startValue);    	non-compiled	[CE]  missing  return  statement	20	None	replace
142	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)-  startValue,  difference);  [CE]  missing  return  statement  [FE]                  ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  Math.min(end.get(field)-  startValue,  difference);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)-  startValue,  difference);	      int    seconds    =    Math.min(end.get(field)-    startValue);    	non-compiled	[CE]  missing  return  statement	20	None	replace
143	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  difference);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  newdiff  =  Math.min(newdiff,  difference);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  difference);	      newdiff    =    Math.max(newdiff,    endValue);    	non-compiled	[CE]  missing  return  statement	2	None	replace
144	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  startValue);  [CE]  missing  return  statement  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  newdiff  =  Math.min(newdiff,  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  startValue);	      newdiff    =    Math.max(newdiff,    endValue);    	non-compiled	[CE]  missing  return  statement	2	None	replace
145	[BUG]  [BUGGY]  int  days  =  startValue  -  startValue;  [CE]  missing  return  statement  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  days  =  startValue  -  startValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  days  =  startValue  -  startValue;	      if(diff    >    0)    {    for(int    i    =    startValue    -    1;    i    >=    0;    i--)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  missing  return  statement	25	None	replace
146	[BUG]  [BUGGY]  return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_SECOND);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	23	None	replace
147	[BUG]  [BUGGY]  return  startValue;  int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  startValue;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  startValue;  int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  startValue;  }  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue;    int  startValue  =  end.get(field);  if(startValue  >  endValue)  {  return  startValue;  }	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	13	None	add
148	[BUG]  [BUGGY]  return  startValue;  int  startValue  =  end.get(field);  if(endValue  <  startValue)  {  return  startValue;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  startValue;  int  startValue  =  end.get(field);  if(endValue  <  startValue)  {  return  startValue;  }  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue;    int  startValue  =  end.get(field);  if(endValue  <  startValue)  {  return  startValue;  }	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	13	None	add
149	[BUG]  [BUGGY]  return  startValue;  int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  startValue;  }  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  startValue;  int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  startValue;  }  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue;    int  startValue  =  end.get(field);  if(startValue  >=  endValue)  {  return  startValue;  }	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	13	None	add
150	[BUG]  [BUGGY]  return  startValue;  int  startValue  =  start.get(field);  [CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  startValue;  int  startValue  =  start.get(field);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue;    int  startValue  =  start.get(field);	  	non-compiled	[CE]  variable  startValue  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	13	None	add
151	[BUG]  [BUGGY]  return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  difference  -(endValue  *  DateTimeConstants.MILLIS_PER_DAY);	  return    newdiff    -(endValue    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	24	None	replace
152	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  endValue  -  newdiff;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	return  endValue  -  newdiff;	  return    newdiff    -    endValue;    	compilable	  [FE]  ComparisonFailure  	10	1	replace
153	[BUG]  [BUGGY]  return  endValue  -  newdiff;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  endValue  -  newdiff;  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return  endValue  -  newdiff;	  return    newdiff    -    endValue;    	compilable	  [FE]  ComparisonFailure  	10	1	replace
154	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  difference);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  newdiff  =  Math.min(newdiff,  startValue  -  difference);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  startValue  -  difference);	      newdiff    =    Math.min(newdiff,    endValue    -    difference);    	non-compiled	[CE]  missing  return  statement	6	None	replace
155	[BUG]  [BUGGY]  int  days  =  endValue  -  startValue;  [CE]  missing  return  statement  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  days  =  endValue  -  startValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  days  =  endValue  -  startValue;	      if(diff    >    0)    {    for(int    i    =    startValue    -    1;    i    >=    0;    i--)    {    end.add(field,    newdiff);    }    	non-compiled	[CE]  missing  return  statement	28	None	replace
156	[BUG]  [BUGGY]  return  startValue;  int  seconds  =  end.get(field,  newdiff  -  startValue);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  startValue;  int  seconds  =  end.get(field,  newdiff  -  startValue);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue;    int  seconds  =  end.get(field,  newdiff  -  startValue);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	13	None	add
157	[BUG]  [BUGGY]  return  startValue;  int  seconds  =  end.get(field,  difference  -  startValue);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  startValue;  int  seconds  =  end.get(field,  difference  -  startValue);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue;    int  seconds  =  end.get(field,  difference  -  startValue);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	13	None	add
158	[BUG]  [BUGGY]  return  startValue;  int  minutes  =  end.get(field);  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  startValue;  int  minutes  =  end.get(field);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    startValue;    int  minutes  =  end.get(field);	  	non-compiled	[CE]  unreachable  statement	13	None	add
159	[BUG]  [BUGGY]  int  seconds  =  field  -  startValue;  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  field  -  startValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  field  -  startValue;	      int    seconds    =    startValue    -    startValue;    	non-compiled	[CE]  missing  return  statement	22	None	replace
160	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  difference);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  newdiff  =  Math.max(newdiff,  difference);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  difference);	      newdiff    =    Math.max(newdiff,    endValue);    	non-compiled	[CE]  missing  return  statement	2	None	replace
161	[BUG]  [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  -  1);  [CE]  missing  return  statement  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  newdiff  =  Math.max(newdiff,  endValue  -  1);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.max(newdiff,  endValue  -  1);	      newdiff    =    Math.max(newdiff,    endValue);    	non-compiled	[CE]  missing  return  statement	2	None	replace
162	[BUG]  [BUGGY]  int  days  =  startValue  -  startValue.get(field);  [CE]  int  cannot  be  dereferenced  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  days  =  startValue  -  startValue.get(field);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  days  =  startValue  -  startValue.get(field);	      if(diff    >    0)    {    for(int    i    =    startValue    -    1;    i    >=    0;    i--)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  int  cannot  be  dereferenced	25	None	replace
163	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  2);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  2);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  -  2);	      newdiff    =    Math.min(newdiff,    endValue    -    difference);    	non-compiled	[CE]  missing  return  statement	6	None	replace
164	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	        newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);	  	compilable	  [FE]  ComparisonFailure  	5	1	add
165	[BUG]  [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  difference);  newdiff  =  Math.min(newdiff,  endValue  +  difference);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.min(newdiff,    endValue    -    difference);    newdiff  =  Math.min(newdiff,  endValue  +  difference);	  	compilable	  [FE]  ComparisonFailure  	5	1	add
166	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  newdiff);  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  newdiff);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  -  newdiff);	      newdiff    =    Math.min(newdiff,    endValue    -    startValue);    	non-compiled	[CE]  missing  return  statement	4	None	replace
167	[BUG]  [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  change);  [CE]  cannot  find  symbol  change  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  newdiff  =  Math.min(newdiff,  endValue  -  change);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	newdiff  =  Math.min(newdiff,  endValue  -  change);	      newdiff    =    Math.min(newdiff,    endValue    -    startValue);    	non-compiled	[CE]  cannot  find  symbol  change	4	None	replace
168	[BUG]  [BUGGY]  int  seconds  =  Math.min(end.get(field)-  difference,  startValue);  [CE]  missing  return  statement  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  Math.min(end.get(field)-  difference,  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  Math.min(end.get(field)-  difference,  startValue);	      int    seconds    =    Math.min(end.get(field)-    startValue);    	non-compiled	[CE]  missing  return  statement	20	None	replace
169	[BUG]  [BUGGY]  int  seconds  =  end.get(field,  change  -  startValue);  [CE]  cannot  find  symbol  change  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  end.get(field,  change  -  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  end.get(field,  change  -  startValue);	      int    seconds    =    end.get(field,    difference    -    startValue);    	non-compiled	[CE]  cannot  find  symbol  change	19	None	replace
170	[BUG]  [BUGGY]  return  newdiff  +  1;  int  seconds  =  startValue  -  end.get(field);  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  +  1;  int  seconds  =  startValue  -  end.get(field);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    +    1;    int  seconds  =  startValue  -  end.get(field);	  	non-compiled	[CE]  unreachable  statement	11	None	add
171	[BUG]  [BUGGY]  return  newdiff  +  1;  int  seconds  =  end.get(field,  newdiff);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  +  1;  int  seconds  =  end.get(field,  newdiff);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    +    1;    int  seconds  =  end.get(field,  newdiff);	  	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	11	None	add
172	[BUG]  [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  if(diff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  0;  }  [CE]  cannot  find  symbol  diff  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  if(diff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  0;  }  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.max(newdiff,    endValue);    if(diff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  0;  }	  	non-compiled	[CE]  cannot  find  symbol  diff	1	None	add
173	[BUG]  [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  if(diff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  [CE]  cannot  find  symbol  diff  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  if(diff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.max(newdiff,    endValue);    if(diff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }	  	non-compiled	[CE]  cannot  find  symbol  diff	1	None	add
174	[BUG]  [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  if(diff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  1;  }  [CE]  cannot  find  symbol  diff  [FE]        ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.max(newdiff,  endValue);  if(diff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  1;  }  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.max(newdiff,    endValue);    if(diff  <  0)  {  int  newdiff  =  Math.max(newdiff,  endValue);  }  else  {  return  1;  }	  	non-compiled	[CE]  cannot  find  symbol  diff	1	None	add
175	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	add	        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  +  startValue);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
176	[BUG]  [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      newdiff  =  Math.min(newdiff,  endValue  -  startValue);  newdiff  =  Math.min(newdiff,  endValue  +  startValue);  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        newdiff    =    Math.min(newdiff,    endValue    -    startValue);    newdiff  =  Math.min(newdiff,  endValue  +  startValue);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
177	[BUG]  [BUGGY]  int  seconds  =  difference  -  endValue;  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  difference  -  endValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  difference  -  endValue;	      int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  missing  return  statement	16	None	replace
178	[BUG]  [BUGGY]  int  seconds  =  startValue  -  endValue  -  1;  [CE]  missing  return  statement  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  int  seconds  =  startValue  -  endValue  -  1;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	int  seconds  =  startValue  -  endValue  -  1;	      int    seconds    =    startValue    -    endValue;    	non-compiled	[CE]  missing  return  statement	16	None	replace
179	[BUG]  [BUGGY]  return  newdiff  -  1;  int  newdiff  =  end.get(field,  newdiff  -  1);  [CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  1;  int  newdiff  =  end.get(field,  newdiff  -  1);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    1;    int  newdiff  =  end.get(field,  newdiff  -  1);	  	non-compiled	[CE]  variable  newdiff  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	7	None	add
180	[BUG]  [BUGGY]  return  newdiff  -  1;  int  seconds  =  end.get(field);  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  return  newdiff  -  1;  int  seconds  =  end.get(field);  [BUGGY]    }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	return    newdiff    -    1;    int  seconds  =  end.get(field);	  	non-compiled	[CE]  unreachable  statement	7	None	add
181	[BUG]  [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  =  endValue;  ++i)  {  end.add(field,  -1  *  difference);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  =  endValue;  ++i)  {  end.add(field,  -1  *  difference);  }  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  =  endValue;  ++i)  {  end.add(field,  -1  *  difference);  }	      if(diff    >    0)    {    for(int    i    =    startValue;    i    <    =    endValue;    ++i)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
182	[BUG]  [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  endValue;  ++i)  {  end.add(field,  -1  *  difference);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  endValue;  ++i)  {  end.add(field,  -1  *  difference);  }  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  endValue;  ++i)  {  end.add(field,  -1  *  difference);  }	      if(diff    >    0)    {    for(int    i    =    startValue;    i    <    =    endValue;    ++i)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
183	[BUG]  [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  =  endValue;  ++i)  {  end.add(field,  -1  *  difference  +  1);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  =  endValue;  ++i)  {  end.add(field,  -1  *  difference  +  1);  }  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  =  endValue;  ++i)  {  end.add(field,  -1  *  difference  +  1);  }	      if(diff    >    0)    {    for(int    i    =    startValue;    i    <    =    endValue;    ++i)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
184	[BUG]  [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  this.endValue;  ++i)  {  end.add(field,  -1  *  difference);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  this.endValue;  ++i)  {  end.add(field,  -1  *  difference);  }  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  >  0)  {  for(int  i  =  startValue;  i  <  this.endValue;  ++i)  {  end.add(field,  -1  *  difference);  }	      if(diff    >    0)    {    for(int    i    =    startValue;    i    <    =    endValue;    ++i)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
185	[BUG]  [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue  -  1;  i  <  =  endValue;  i++)  {  end.add(field,  -1  *  difference);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue  -  1;  i  <  =  endValue;  i++)  {  end.add(field,  -1  *  difference);  }  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  >  0)  {  for(int  i  =  startValue  -  1;  i  <  =  endValue;  i++)  {  end.add(field,  -1  *  difference);  }	      if(diff    >    0)    {    for(int    i    =    startValue    -    1;    i    <    =    endValue;    i++)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
186	[BUG]  [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue  -  1;  i  <  endValue;  i++)  {  end.add(field,  -1  *  difference);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]  if(newdiff  >  0)  {  for(int  i  =  startValue  -  1;  i  <  endValue;  i++)  {  end.add(field,  -1  *  difference);  }  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	if(newdiff  >  0)  {  for(int  i  =  startValue  -  1;  i  <  endValue;  i++)  {  end.add(field,  -1  *  difference);  }	      if(diff    >    0)    {    for(int    i    =    startValue    -    1;    i    <    =    endValue;    i++)    {    end.add(field,    -1    *    difference);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
187	[BUG]  [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  +  startValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  +  startValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        int    seconds    =    startValue    -    startValue;    int  seconds  =  startValue  +  startValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	21	None	add
188	[BUG]  [BUGGY]      int  seconds  =  startValue  -  endValue;  int  seconds  =  startValue  +  endValue;  [CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)  [FE]    ComparisonFailure    [CONTEXT]    static  int  reduceAndCorrect(Calendar  start,  Calendar  end,  int  field,  int  difference)  {  end.add(  field,  -1  *  difference  );  int  endValue  =  end.get(field);  int  startValue  =  start.get(field);  if  (endValue  <  startValue)  {  int  newdiff  =  startValue  -  endValue;  end.add(  field,  newdiff  );    [BUGGY]      int  seconds  =  startValue  -  endValue;  int  seconds  =  startValue  +  endValue;  [BUGGY]    return  newdiff;  }  else  {  return  0;  }  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  reduceAndCorrect  [RETURN_TYPE]  int  Calendar  start  Calendar  end  int  field  int  difference  [VARIABLES]  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  str  tmp  boolean  int  count  days  difference  endValue  field  hours  i  milliseconds  minutes  months  newdiff  seconds  startValue  sz  years  Calendar  end  start  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	1.0	439	439	1	replace	        int    seconds    =    startValue    -    endValue;    int  seconds  =  startValue  +  endValue;	  	non-compiled	[CE]  variable  seconds  is  already  defined  in  method  reduceAndCorrect(Calendar,Calendar,int,int)	15	None	add
