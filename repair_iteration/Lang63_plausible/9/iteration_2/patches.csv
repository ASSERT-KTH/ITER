bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  months  =  tokens.size()  /  1;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.size()  /  1;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.size()  /  1;	  Integer    months    =    tokens.size()    >    1;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
2	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  S));  [CE]  [FE]          ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  S));  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  S));	  Token.containsTokenWithValue(tokens,    S);    	non-compiled	[CE]  	61	None	replace
3	[BUG]  [BUGGY]  Tokens  y  =  tokens,  start.substring(0,  tokens.length());  [CE]  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Tokens  y  =  tokens,  start.substring(0,  tokens.length());  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Tokens  y  =  tokens,  start.substring(0,  tokens.length());	  Tokens    y    =    tokens,    start.substring(0,    tokens.length()    -    1);    	non-compiled	[CE]  	75	None	replace
4	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  H)  {  months  +=  365  *  years;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  H)  {  months  +=  365  *  years;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  H)  {  months  +=  365  *  years;	  Token.containsTokenWithValue(tokens,    H)    {    months    +=    12    *    years;    	non-compiled	[CE]  ';'  expected	45	None	replace
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y)&&!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	if(!Token.containsTokenWithValue(tokens,  y)&&!Token.containsTokenWithValue(tokens,  S))  {	  if(!Token.containsTokenWithValue(tokens,    M)&&!Token.containsTokenWithValue(tokens,    S))    {    	compilable	  [FE]  ComparisonFailure  	93	1	replace
6	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y)&&!Token.containsTokenWithValue(tokens,  S))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y)&&!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  y)&&!Token.containsTokenWithValue(tokens,  S))  {	  if(!Token.containsTokenWithValue(tokens,    M)&&!Token.containsTokenWithValue(tokens,    S))    {    	compilable	  [FE]  ComparisonFailure  	93	1	replace
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  S))  {	  if(!Token.containsTokenWithValue(tokens,    M)&&!Token.containsTokenWithValue(tokens,    S))    {    	compilable	  [FE]  ComparisonFailure  	93	1	replace
8	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  S))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  S))  {	  if(!Token.containsTokenWithValue(tokens,    M)&&!Token.containsTokenWithValue(tokens,    S))    {    	compilable	  [FE]  ComparisonFailure  	93	1	replace
9	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J)&&!Token.containsTokenWithValue(tokens,  S))  {  [CE]  cannot  find  symbol  J  [FE]        ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J)&&!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  J)&&!Token.containsTokenWithValue(tokens,  S))  {	  if(!Token.containsTokenWithValue(tokens,    M)&&!Token.containsTokenWithValue(tokens,    S))    {    	non-compiled	[CE]  cannot  find  symbol  J	93	None	replace
10	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  S  +  1);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  S  +  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  S  +  1);	  Token.containsTokenWithValue(tokens,    y    +    1);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
11	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  M  +  1);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  M  +  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  M  +  1);	  Token.containsTokenWithValue(tokens,    y    +    1);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
12	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  value  +  1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  value  +  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  value  +  1);	  Token.containsTokenWithValue(tokens,    y    +    1);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
13	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  H  +  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  H  +  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  H  +  1);	  Token.containsTokenWithValue(tokens,    y    +    1);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
14	[BUG]  [BUGGY]  Integer  months  =  tokens.values()  -  1;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.values()  -  1;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.values()  -  1;	  Integer    months    =    tokens.values();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
15	[BUG]  [BUGGY]  Integer  months  =  tokens.values().length;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.values().length;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.values().length;	  Integer    months    =    tokens.values();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
16	[BUG]  [BUGGY]  Integer  months  =  tokens.values()  +  1;  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.values()  +  1;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.values()  +  1;	  Integer    months    =    tokens.values();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
17	[BUG]  [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()));  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()));  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Tokens  y  =  tokens.substring(0,  tokens.length()));	  Tokens    y    =    tokens.substring(0,    tokens.length()    +    1);    	non-compiled	[CE]  	25	None	replace
18	[BUG]  [BUGGY]  Tokens  y  =  tokens.substring0(0,  tokens.length());  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Tokens  y  =  tokens.substring0(0,  tokens.length());  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Tokens  y  =  tokens.substring0(0,  tokens.length());	  Tokens    y    =    tokens.substring(0,    tokens.length()    +    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
19	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  m);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    m);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  m);	  	compilable	  [FE]  ComparisonFailure  	18	1	add
20	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  m);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  m);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    m);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  m);	  	compilable	  [FE]  ComparisonFailure  	18	1	add
21	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  m);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    m);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  m);	  	compilable	  [FE]  ComparisonFailure  	18	1	add
22	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  m);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  m);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    m);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  m);	  	compilable	  [FE]  ComparisonFailure  	18	1	add
23	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  M);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    m);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  M);	  	compilable	  [FE]  ComparisonFailure  	18	1	add
24	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  M);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  M);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    m);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  M);	  	compilable	  [FE]  ComparisonFailure  	18	1	add
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  m);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    m);    Token.containsTokenWithValue(tokens,  m);	  	compilable	  [FE]  ComparisonFailure  	18	1	add
26	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  m);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  m);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    m);    Token.containsTokenWithValue(tokens,  m);	  	compilable	  [FE]  ComparisonFailure  	18	1	add
27	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  m);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    m);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  m);	  	compilable	  [FE]  ComparisonFailure  	18	1	add
28	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  m);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  m);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    m);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  m);	  	compilable	  [FE]  ComparisonFailure  	18	1	add
29	[BUG]  [BUGGY]  Token  m  =  tokens.getToken()  +  1;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.getToken()  +  1;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.getToken()  +  1;	  Token    m    =    tokens.nextToken()    +    1;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
30	[BUG]  [BUGGY]  Token  m  =  tokens.nextToken()  +  1L;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.nextToken()  +  1L;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.nextToken()  +  1L;	  Token    m    =    tokens.nextToken()    +    1;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
31	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  H)  {  months  +=  365  *  tokens.get(Calendar.YEAR);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  H)  {  months  +=  365  *  tokens.get(Calendar.YEAR);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  H)  {  months  +=  365  *  tokens.get(Calendar.YEAR);	  Token.containsTokenWithValue(tokens,    H)    {    months    +=    12    *    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  ';'  expected	49	None	replace
32	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    S)||!Token.containsTokenWithValue(tokens,    M))    {    if(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
33	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {  If(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {  If(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    S)||!Token.containsTokenWithValue(tokens,    M))    {    If(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {	  	non-compiled	[CE]  	30	None	add
34	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  S)&|!Token.containsTokenWithValue(tokens,  M))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  S)&|!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    S)||!Token.containsTokenWithValue(tokens,    M))    {    if(!Token.containsTokenWithValue(tokens,  S)&|!Token.containsTokenWithValue(tokens,  M))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
35	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  d);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  d);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  d);	  Token.containsTokenWithValue(tokens,    M);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
36	[BUG]  [BUGGY]  Token  m  =  tokens.nextToken()  &&  padWithZeros;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.nextToken()  &&  padWithZeros;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.nextToken()  &&  padWithZeros;	  Token    m    =    tokens.nextToken()    ||    padWithZeros;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
37	[BUG]  [BUGGY]  Token  m  =  padWithZeros.nextToken()  ||  tokens;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  padWithZeros.nextToken()  ||  tokens;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  padWithZeros.nextToken()  ||  tokens;	  Token    m    =    tokens.nextToken()    ||    padWithZeros;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
38	[BUG]  [BUGGY]  Token  m  =  tokens.nextToken()  ||  padWithZeros  +  1;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.nextToken()  ||  padWithZeros  +  1;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.nextToken()  ||  padWithZeros  +  1;	  Token    m    =    tokens.nextToken()    ||    padWithZeros;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
39	[BUG]  [BUGGY]  Token  m  =  tokens.nextToken()  /  ||  padWithZeros;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.nextToken()  /  ||  padWithZeros;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.nextToken()  /  ||  padWithZeros;	  Token    m    =    tokens.nextToken()    ||    padWithZeros;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
40	[BUG]  [BUGGY]  Integer  months  =  tokens.get(value  -  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(value  -  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(value  -  1);	  Integer    months    =    tokens.get(y    -    1);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
41	[BUG]  [BUGGY]  Integer  months  =  tokens.get(Y  -  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(Y  -  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(Y  -  1);	  Integer    months    =    tokens.get(y    -    1);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
42	[BUG]  [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  -  2);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  -  2);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Tokens  y  =  tokens.substring(0,  tokens.length()  -  2);	  Tokens    y    =    tokens.substring(0,    tokens.length());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
43	[BUG]  [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  -  3);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  -  3);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Tokens  y  =  tokens.substring(0,  tokens.length()  -  3);	  Tokens    y    =    tokens.substring(0,    tokens.length());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
44	[BUG]  [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  -  4);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  -  4);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Tokens  y  =  tokens.substring(0,  tokens.length()  -  4);	  Tokens    y    =    tokens.substring(0,    tokens.length());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
45	[BUG]  [BUGGY]  If(!Token.containsTokenWithValue(tokens,  y))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  If(!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	If(!Token.containsTokenWithValue(tokens,  y))  {	  if(!Token.containsTokenWithValue(tokens,    H))    {    If(!Token.containsTokenWithValue(tokens,    H))    {    	non-compiled	[CE]  ';'  expected	65	None	replace
46	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  H)  {  months  +=  365  *  tokens.get(Calendar.MONTH);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  H)  {  months  +=  365  *  tokens.get(Calendar.MONTH);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  H)  {  months  +=  365  *  tokens.get(Calendar.MONTH);	  Token.containsTokenWithValue(tokens,    H)    {    months    +=    12    *    tokens.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	39	None	replace
47	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  value);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  value);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  value);	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    0);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
48	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  0);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  0);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  0);	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    0);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
49	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y)||!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	if(!Token.containsTokenWithValue(tokens,  y)||!Token.containsTokenWithValue(tokens,  M))  {	  if(!Token.containsTokenWithValue(tokens,    S)||!Token.containsTokenWithValue(tokens,    M))    {    	compilable	  [FE]  ComparisonFailure  	31	1	replace
50	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y)||!Token.containsTokenWithValue(tokens,  M))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y)||!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  y)||!Token.containsTokenWithValue(tokens,  M))  {	  if(!Token.containsTokenWithValue(tokens,    S)||!Token.containsTokenWithValue(tokens,    M))    {    	compilable	  [FE]  ComparisonFailure  	31	1	replace
51	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H)||!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	if(!Token.containsTokenWithValue(tokens,  H)||!Token.containsTokenWithValue(tokens,  M))  {	  if(!Token.containsTokenWithValue(tokens,    S)||!Token.containsTokenWithValue(tokens,    M))    {    	compilable	  [FE]  ComparisonFailure  	31	1	replace
52	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H)||!Token.containsTokenWithValue(tokens,  M))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H)||!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  H)||!Token.containsTokenWithValue(tokens,  M))  {	  if(!Token.containsTokenWithValue(tokens,    S)||!Token.containsTokenWithValue(tokens,    M))    {    	compilable	  [FE]  ComparisonFailure  	31	1	replace
53	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y)||!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	if(!Token.containsTokenWithValue(tokens,  y)||!Token.containsTokenWithValue(tokens,  S))  {	  if(!Token.containsTokenWithValue(tokens,    S)||!Token.containsTokenWithValue(tokens,    M))    {    	compilable	  [FE]  ComparisonFailure  	31	1	replace
54	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y)||!Token.containsTokenWithValue(tokens,  S))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y)||!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  y)||!Token.containsTokenWithValue(tokens,  S))  {	  if(!Token.containsTokenWithValue(tokens,    S)||!Token.containsTokenWithValue(tokens,    M))    {    	compilable	  [FE]  ComparisonFailure  	31	1	replace
55	[BUG]  [BUGGY]  Token  m  =  tokens.substring(0,  tokens.length()  -  1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.substring(0,  tokens.length()  -  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.substring(0,  tokens.length()  -  1);	  Token    m    =    tokens.trim();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
56	[BUG]  [BUGGY]  Token  m  =  tokens.substring(0,  tokens.length()  -  2);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.substring(0,  tokens.length()  -  2);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.substring(0,  tokens.length()  -  2);	  Token    m    =    tokens.trim();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
57	[BUG]  [BUGGY]  Token  m  =  tokens.toString();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.toString();  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.toString();	  Token    m    =    tokens.trim();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
58	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  m);  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  m);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  m);  }	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    m);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
59	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  M);  }  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  M);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  M);  }	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    m);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
60	[BUG]  [BUGGY]  Token  m  =  tokens.nextToken(value);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.nextToken(value);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.nextToken(value);	  Token    m    =    tokens.nextToken(y);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
61	[BUG]  [BUGGY]  Token  m  =  tokens.nextToken(Y);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.nextToken(Y);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.nextToken(Y);	  Token    m    =    tokens.nextToken(y);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
62	[BUG]  [BUGGY]  Token  m  =  tokens.nextToken(value,  y);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.nextToken(value,  y);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.nextToken(value,  y);	  Token    m    =    tokens.nextToken(y);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
63	[BUG]  [BUGGY]  Token  m  =  tokens.nextToken(this.value);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.nextToken(this.value);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.nextToken(this.value);	  Token    m    =    tokens.nextToken(y);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
64	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  M)  {  months  +=  365  *  tokens.get(Calendar.YEAR);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  M)  {  months  +=  365  *  tokens.get(Calendar.YEAR);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  M)  {  months  +=  365  *  tokens.get(Calendar.YEAR);	  Token.containsTokenWithValue(tokens,    y)    {    months    +=    365    *    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  ';'  expected	77	None	replace
65	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  S)  {  months  +=  365  *  tokens.get(Calendar.YEAR);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  S)  {  months  +=  365  *  tokens.get(Calendar.YEAR);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  S)  {  months  +=  365  *  tokens.get(Calendar.YEAR);	  Token.containsTokenWithValue(tokens,    y)    {    months    +=    365    *    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  ';'  expected	77	None	replace
66	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  M));  [CE]  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  M));  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  M));	  Token.containsTokenWithValue(tokens,    Y));    	non-compiled	[CE]  	63	None	replace
67	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  H));  [CE]  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  H));  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  H));	  Token.containsTokenWithValue(tokens,    Y));    	non-compiled	[CE]  	63	None	replace
68	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  S))  {  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  S))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  S))  {  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    M)&&!Token.containsTokenWithValue(tokens,    S))    {    if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  S))  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
69	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  S))  {  If(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  S))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  S))  {  If(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    M)&&!Token.containsTokenWithValue(tokens,    S))    {    If(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  S))  {	  	non-compiled	[CE]  	92	None	add
70	[BUG]  [BUGGY]  if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {	  if(!Token.containsTokenWithValue(tokens,    y))    {    if(!Token.containsTokenWithValue(tokens,    M))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
71	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  d);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    d);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  d);	  	compilable	  [FE]  ComparisonFailure  	20	1	add
72	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  d);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  d);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    d);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  d);	  	compilable	  [FE]  ComparisonFailure  	20	1	add
73	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  d);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    d);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  d);	  	compilable	  [FE]  ComparisonFailure  	20	1	add
74	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  d);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  d);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    d);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  d);	  	compilable	  [FE]  ComparisonFailure  	20	1	add
75	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  d);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    d);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  d);	  	compilable	  [FE]  ComparisonFailure  	20	1	add
76	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  d);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  d);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    d);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  d);	  	compilable	  [FE]  ComparisonFailure  	20	1	add
77	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  m);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    d);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  m);	  	compilable	  [FE]  ComparisonFailure  	20	1	add
78	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  m);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  m);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    d);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  m);	  	compilable	  [FE]  ComparisonFailure  	20	1	add
79	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  p);  Token.containsTokenWithValue(tokens,  d);  [CE]  cannot  find  symbol  p  [FE]            ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  p);  Token.containsTokenWithValue(tokens,  d);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    d);    Token.containsTokenWithValue(tokens,  p);  Token.containsTokenWithValue(tokens,  d);	  	non-compiled	[CE]  cannot  find  symbol  p	20	None	add
80	[BUG]  [BUGGY]  Integer  months  =  tokens.size()  /  2;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.size()  /  2;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.size()  /  2;	  Integer    months    =    tokens.size()    *    0;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
81	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    H)&&!Token.containsTokenWithValue(tokens,    M))    {    if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {	  	non-compiled	[CE]  illegal  start  of  expression	104	None	add
82	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {  If(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {  If(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    H)&&!Token.containsTokenWithValue(tokens,    M))    {    If(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {	  	non-compiled	[CE]  	104	None	add
83	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  M);  if(!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	Token.containsTokenWithValue(tokens,  M);  if(!Token.containsTokenWithValue(tokens,  M))  {	          Token.containsTokenWithValue(tokens,    y);    if(!Token.containsTokenWithValue(tokens,    y))    {    	compilable	  [FE]  ComparisonFailure  	72	2	replace
84	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  M);  if(!Token.containsTokenWithValue(tokens,  M))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  M);  if(!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  M);  if(!Token.containsTokenWithValue(tokens,  M))  {	          Token.containsTokenWithValue(tokens,    y);    if(!Token.containsTokenWithValue(tokens,    y))    {    	compilable	  [FE]  ComparisonFailure  	72	2	replace
85	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  M);  if(!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	Token.containsTokenWithValue(tokens,  M);  if(!Token.containsTokenWithValue(tokens,  S))  {	          Token.containsTokenWithValue(tokens,    y);    if(!Token.containsTokenWithValue(tokens,    y))    {    	compilable	  [FE]  ComparisonFailure  	72	1	replace
86	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  M);  if(!Token.containsTokenWithValue(tokens,  S))  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  M);  if(!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  M);  if(!Token.containsTokenWithValue(tokens,  S))  {	          Token.containsTokenWithValue(tokens,    y);    if(!Token.containsTokenWithValue(tokens,    y))    {    	compilable	  [FE]  ComparisonFailure  	72	1	replace
87	[BUG]  [BUGGY]  Integer  months  =  tokens.get(tokens.length);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(tokens.length);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(tokens.length);	  Integer    months    =    tokens.get(0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
88	[BUG]  [BUGGY]  Integer  months  =  tokens.get(tokens.length  -  1);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(tokens.length  -  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(tokens.length  -  1);	  Integer    months    =    tokens.get(0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
89	[BUG]  [BUGGY]  Integer  months  =  tokens.get(y  +  1  -  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(y  +  1  -  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(y  +  1  -  1);	  Integer    months    =    tokens.get(y    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
90	[BUG]  [BUGGY]  Integer  months  =  tokens.get(value  +  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(value  +  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(value  +  1);	  Integer    months    =    tokens.get(y    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
91	[BUG]  [BUGGY]  Integer  months  =  tokens.size()  *  2  +  1;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.size()  *  2  +  1;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.size()  *  2  +  1;	  Integer    months    =    tokens.size()    *    2;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
92	[BUG]  [BUGGY]  Integer  months  =  tokens.size()  *  2  -  1;  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.size()  *  2  -  1;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.size()  *  2  -  1;	  Integer    months    =    tokens.size()    *    2;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
93	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  Y))  {  [CE]  cannot  find  symbol  Y  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  Y))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  Y))  {	  if(!Token.containsTokenWithValue(tokens,    y))    {    if(!Token.containsTokenWithValue(tokens,    0))    {    	non-compiled	[CE]  cannot  find  symbol  Y	35	None	replace
94	[BUG]  [BUGGY]  Integer  months  =  tokens.size()  <  1;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.size()  <  1;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.size()  <  1;	  Integer    months    =    tokens.size()    <    0;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
95	[BUG]  [BUGGY]  Integer  months  =  tokens.indexOf('.')-  1;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.indexOf('.')-  1;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.indexOf('.')-  1;	  Integer    months    =    tokens.size()    -    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
96	[BUG]  [BUGGY]  Integer  months  =  tokens.indexOf(',')-  1;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.indexOf(',')-  1;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.indexOf(',')-  1;	  Integer    months    =    tokens.size()    -    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
97	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  y))  {	  if(!Token.containsTokenWithValue(tokens,    M)&&!Token.containsTokenWithValue(tokens,    y))    {    	compilable	  [FE]  ComparisonFailure  	79	1	replace
98	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  y))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  y))  {	  if(!Token.containsTokenWithValue(tokens,    M)&&!Token.containsTokenWithValue(tokens,    y))    {    	compilable	  [FE]  ComparisonFailure  	79	1	replace
99	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  YEARS))  {  [CE]  cannot  find  symbol  YEARS  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  YEARS))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  YEARS))  {	  if(!Token.containsTokenWithValue(tokens,    M)&&!Token.containsTokenWithValue(tokens,    y))    {    	non-compiled	[CE]  cannot  find  symbol  YEARS	79	None	replace
100	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  JsonToken.VALUE_MILLIS))  {  [CE]  cannot  find  symbol  JsonToken  [FE]        ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  JsonToken.VALUE_MILLIS))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  JsonToken.VALUE_MILLIS))  {	  if(!Token.containsTokenWithValue(tokens,    M)&&!Token.containsTokenWithValue(tokens,    y))    {    	non-compiled	[CE]  cannot  find  symbol  JsonToken	79	None	replace
101	[BUG]  [BUGGY]  Integer  months  =  tokens.get(YEAR  +  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(YEAR  +  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(YEAR  +  1);	  Integer    months    =    tokens.get(YEAR);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
102	[BUG]  [BUGGY]  Integer  months  =  tokens.get(YEAR,  0);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(YEAR,  0);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(YEAR,  0);	  Integer    months    =    tokens.get(YEAR);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
103	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  y)  {  months  +=  12  *  tokens.get(Calendar.MONTH)-  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  y)  {  months  +=  12  *  tokens.get(Calendar.MONTH)-  1;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  y)  {  months  +=  12  *  tokens.get(Calendar.MONTH)-  1;	  Token.containsTokenWithValue(tokens,    Y)    {    months    +=    12    *    tokens.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	40	None	replace
104	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  Token.containsTokenWithValue(tokens,  S);  Token.containsTokenWithValue(tokens,  S);  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  Token.containsTokenWithValue(tokens,  S);  Token.containsTokenWithValue(tokens,  S);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  S))  {  Token.containsTokenWithValue(tokens,  S);  Token.containsTokenWithValue(tokens,  S);  }	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    y);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
105	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token.containsTokenWithValue(tokens,  y);  }  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token.containsTokenWithValue(tokens,  y);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  Token.containsTokenWithValue(tokens,  y);  }	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    y);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
106	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y)&&!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	if(!Token.containsTokenWithValue(tokens,  y)&&!Token.containsTokenWithValue(tokens,  M))  {	  if(!Token.containsTokenWithValue(tokens,    H)&&!Token.containsTokenWithValue(tokens,    M))    {    	compilable	  [FE]  ComparisonFailure  	105	2	replace
107	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y)&&!Token.containsTokenWithValue(tokens,  M))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y)&&!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  y)&&!Token.containsTokenWithValue(tokens,  M))  {	  if(!Token.containsTokenWithValue(tokens,    H)&&!Token.containsTokenWithValue(tokens,    M))    {    	compilable	  [FE]  ComparisonFailure  	105	2	replace
108	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y)&&!Token.containsTokenWithValue(tokens,  H))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	if(!Token.containsTokenWithValue(tokens,  y)&&!Token.containsTokenWithValue(tokens,  H))  {	  if(!Token.containsTokenWithValue(tokens,    H)&&!Token.containsTokenWithValue(tokens,    M))    {    	compilable	  [FE]  ComparisonFailure  	105	1	replace
109	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y)&&!Token.containsTokenWithValue(tokens,  H))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y)&&!Token.containsTokenWithValue(tokens,  H))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  y)&&!Token.containsTokenWithValue(tokens,  H))  {	  if(!Token.containsTokenWithValue(tokens,    H)&&!Token.containsTokenWithValue(tokens,    M))    {    	compilable	  [FE]  ComparisonFailure  	105	1	replace
110	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  M)  {  months  +=  365  *  tokens.get(Calendar.MONTH);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  M)  {  months  +=  365  *  tokens.get(Calendar.MONTH);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  M)  {  months  +=  365  *  tokens.get(Calendar.MONTH);	  Token.containsTokenWithValue(tokens,    M)    {    months    +=    12    *    tokens.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	37	None	replace
111	[BUG]  [BUGGY]  Integer  months  =  tokens.indexOf('.')-  2;  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.indexOf('.')-  2;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.indexOf('.')-  2;	  Integer    months    =    tokens.size()    -    2;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
112	[BUG]  [BUGGY]  Integer  months  =  tokens.indexOf(',')-  2;  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.indexOf(',')-  2;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.indexOf(',')-  2;	  Integer    months    =    tokens.size()    -    2;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
113	[BUG]  [BUGGY]  Token  m  =  tokens[start.nextToken();  [CE]  [FE]            ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens[start.nextToken();  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens[start.nextToken();	  Token    m    =    start.nextToken();    	non-compiled	[CE]  	86	None	replace
114	[BUG]  [BUGGY]  Token  m  =  tokens[i].nextToken();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens[i].nextToken();  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens[i].nextToken();	  Token    m    =    start.nextToken();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
115	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    S)&&!Token.containsTokenWithValue(tokens,    M))    {    if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
116	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  If(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  If(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    S)&&!Token.containsTokenWithValue(tokens,    M))    {    If(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {	  	non-compiled	[CE]  	82	None	add
117	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  M);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    M);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  M);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
118	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  M);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  M);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    M);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  M);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
119	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  Y);  Token.containsTokenWithValue(tokens,  M);  [CE]  cannot  find  symbol  Y  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  Y);  Token.containsTokenWithValue(tokens,  M);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    M);    Token.containsTokenWithValue(tokens,  Y);  Token.containsTokenWithValue(tokens,  M);	  	non-compiled	[CE]  cannot  find  symbol  Y	102	None	add
120	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  M);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    M);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  M);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
121	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  M);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  M);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    M);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  M);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
122	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  M);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    M);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  M);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
123	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  M);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  M);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    M);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  M);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
124	[BUG]  [BUGGY]  Token  m  =  tokens.trimToken(y);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.trimToken(y);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.trimToken(y);	  Token    m    =    tokens.trimToken();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
125	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  S)  {  months  +=  365  *  tokens.get(Calendar.MONTH);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  S)  {  months  +=  365  *  tokens.get(Calendar.MONTH);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  S)  {  months  +=  365  *  tokens.get(Calendar.MONTH);	  Token.containsTokenWithValue(tokens,    y)    {    months    +=    365    *    tokens.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	91	None	replace
126	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  y);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  y);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
127	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  y);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  y);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  y);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
128	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  Y);  Token.containsTokenWithValue(tokens,  y);  [CE]  cannot  find  symbol  Y  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  Y);  Token.containsTokenWithValue(tokens,  y);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  Y);  Token.containsTokenWithValue(tokens,  y);	  	non-compiled	[CE]  cannot  find  symbol  Y	15	None	add
129	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  y);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  y);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
130	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  y);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  y);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  y);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
131	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  Y);  [CE]  cannot  find  symbol  Y  [FE]          ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  Y);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  Y);	  	non-compiled	[CE]  cannot  find  symbol  Y	15	None	add
132	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  0);  [CE]  method  containsTokenWithValue  in  class  Token  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  0);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  0);	  	non-compiled	[CE]  method  containsTokenWithValue  in  class  Token  cannot  be  applied  to  given  types;	15	None	add
133	[BUG]  [BUGGY]  Integer  months  =  tokens.get(i  +  1  -  1);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(i  +  1  -  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(i  +  1  -  1);	  Integer    months    =    tokens.get(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
134	[BUG]  [BUGGY]  Integer  months  =  tokens.get(years  +  1);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(years  +  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(years  +  1);	  Integer    months    =    tokens.get(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
135	[BUG]  [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  -  1,  tokens.length()  -  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  -  1,  tokens.length()  -  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Tokens  y  =  tokens.substring(0,  tokens.length()  -  1,  tokens.length()  -  1);	  Tokens    y    =    tokens.substring(0,    tokens.length()    -    1,    tokens.length());    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
136	[BUG]  [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  -  1,  tokens.length()  -  2);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  -  1,  tokens.length()  -  2);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Tokens  y  =  tokens.substring(0,  tokens.length()  -  1,  tokens.length()  -  2);	  Tokens    y    =    tokens.substring(0,    tokens.length()    -    1,    tokens.length());    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
137	[BUG]  [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  -  1,  tokens.length()  -  3);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  -  1,  tokens.length()  -  3);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Tokens  y  =  tokens.substring(0,  tokens.length()  -  1,  tokens.length()  -  3);	  Tokens    y    =    tokens.substring(0,    tokens.length()    -    1,    tokens.length());    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
138	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  Y)  {  months  +=  365  *  years;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  Y)  {  months  +=  365  *  years;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  Y)  {  months  +=  365  *  years;	  Token.containsTokenWithValue(tokens,    Y)    {    months    +=    12    *    years;    	non-compiled	[CE]  ';'  expected	46	None	replace
139	[BUG]  [BUGGY]  Integer  months  =  tokens.size()  <  2;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.size()  <  2;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.size()  <  2;	  Integer    months    =    tokens.size()    >    2;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
140	[BUG]  [BUGGY]  If(!Token.containsTokenWithValue(tokens,  M))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  If(!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	If(!Token.containsTokenWithValue(tokens,  M))  {	  if(!Token.containsTokenWithValue(tokens,    S))    {    If(!Token.containsTokenWithValue(tokens,    S))    {    	non-compiled	[CE]  ';'  expected	28	None	replace
141	[BUG]  [BUGGY]  Integer  months  =  tokens.get(Y);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(Y);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(Y);	  Integer    months    =    tokens.get(value);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
142	[BUG]  [BUGGY]  Integer  months  =  value.get(tokens);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  value.get(tokens);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  value.get(tokens);	  Integer    months    =    tokens.get(value);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
143	[BUG]  [BUGGY]  Integer  months  =  tokens.get(tokens.size());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(tokens.size());  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(tokens.size());	  Integer    months    =    tokens.get(tokens.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
144	[BUG]  [BUGGY]  Integer  months  =  tokens.get(tokens.size()  -  1  +  1);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(tokens.size()  -  1  +  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(tokens.size()  -  1  +  1);	  Integer    months    =    tokens.get(tokens.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
145	[BUG]  [BUGGY]  Integer  months  =  tokens.get(tokens.size()  -  1  -  1);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(tokens.size()  -  1  -  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(tokens.size()  -  1  -  1);	  Integer    months    =    tokens.get(tokens.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
146	[BUG]  [BUGGY]  Token  m  =  tokens[y].nextToken();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens[y].nextToken();  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens[y].nextToken();	  Token    m    =    end.nextToken();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
147	[BUG]  [BUGGY]  Token  m  =  tokens[0].nextToken();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens[0].nextToken();  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens[0].nextToken();	  Token    m    =    end.nextToken();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
148	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  JsonToken.VALUE_NUMBER_OF_YEAR,  months))  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  JsonToken.VALUE_NUMBER_OF_YEAR,  months))  {  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  JsonToken.VALUE_NUMBER_OF_YEAR,  months))  {	  Token.containsTokenWithValue(tokens,    JsonToken.VALUE_NUMBER_OF_YEAR))    {    	non-compiled	[CE]  ';'  expected	88	None	replace
149	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  Y);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  Y);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  Y);	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    Y);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
150	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  y))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    M)&&!Token.containsTokenWithValue(tokens,    y))    {    if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  y))  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
151	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  y))  {  If(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  y))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  y))  {  If(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    M)&&!Token.containsTokenWithValue(tokens,    y))    {    If(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  y))  {	  	non-compiled	[CE]  	78	None	add
152	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  Y))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  Y))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    M)&&!Token.containsTokenWithValue(tokens,    y))    {    if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  Y))  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
153	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token.containsTokenWithValue(tokens,  M);  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token.containsTokenWithValue(tokens,  M);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  Token.containsTokenWithValue(tokens,  M);  }	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    M);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
154	[BUG]  [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  *  2);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  *  2);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Tokens  y  =  tokens.substring(0,  tokens.length()  *  2);	  Tokens    y    =    tokens.substring(0,    tokens.length()    *    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
155	[BUG]  [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  /  1);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  /  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Tokens  y  =  tokens.substring(0,  tokens.length()  /  1);	  Tokens    y    =    tokens.substring(0,    tokens.length()    *    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
156	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  JsonToken.VALUE_NUMBER_FLOAT)  {	  Token.containsTokenWithValue(tokens,    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  ';'  expected	81	None	replace
157	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  d);  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  d);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  d);  }	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    d);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
158	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  Token.containsTokenWithValue(tokens,  M)  {  months  +=  12  *  tokens.get(Calendar.MONTH);  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  Token.containsTokenWithValue(tokens,  M)  {  months  +=  12  *  tokens.get(Calendar.MONTH);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  y))  {  Token.containsTokenWithValue(tokens,  M)  {  months  +=  12  *  tokens.get(Calendar.MONTH);  }	  Token.containsTokenWithValue(tokens,    M)    {    months    +=    12    *    tokens.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	37	None	replace
159	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  365  *  tokens.get(Calendar.MONTH);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  365  *  tokens.get(Calendar.MONTH);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  365  *  tokens.get(Calendar.MONTH);  }	  Token.containsTokenWithValue(tokens,    y)    {    months    +=    365    *    tokens.get(Calendar.MONTH);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
160	[BUG]  [BUGGY]  Integer  months  =  end.get(Calendar.MONTH);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  end.get(Calendar.MONTH);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  end.get(Calendar.MONTH);	  Integer    months    =    tokens.get(YEAR);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
161	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  Token.containsTokenWithValue(tokens,  M)  {  months  +=  12  *  tokens.get(Calendar.YEAR);  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  Token.containsTokenWithValue(tokens,  M)  {  months  +=  12  *  tokens.get(Calendar.YEAR);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  y))  {  Token.containsTokenWithValue(tokens,  M)  {  months  +=  12  *  tokens.get(Calendar.YEAR);  }	  Token.containsTokenWithValue(tokens,    M)    {    months    +=    12    *    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  ';'  expected	47	None	replace
162	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.get(Calendar.YEAR);  Token.containsTokenWithValue(y,  m);  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.get(Calendar.YEAR);  Token.containsTokenWithValue(y,  m);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.get(Calendar.YEAR);  Token.containsTokenWithValue(y,  m);  }	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    m);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
163	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.nextToken();  Token.containsTokenWithValue(tokens,  m);  }  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.nextToken();  Token.containsTokenWithValue(tokens,  m);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.nextToken();  Token.containsTokenWithValue(tokens,  m);  }	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    m);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
164	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.get(Calendar.YEAR);  Token.containsTokenWithValue(y,  value);  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.get(Calendar.YEAR);  Token.containsTokenWithValue(y,  value);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.get(Calendar.YEAR);  Token.containsTokenWithValue(y,  value);  }	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    m);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
165	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    S)||!Token.containsTokenWithValue(tokens,    M))    {    if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
166	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  y));  [CE]  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  y));  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  y));	  Token.containsTokenWithValue(tokens,    Y));    	non-compiled	[CE]  	63	None	replace
167	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  JsonToken.FIELD_NAME);  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  JsonToken.FIELD_NAME);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  JsonToken.FIELD_NAME);	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    y);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
168	[BUG]  [BUGGY]  Integer  months  =  tokens.size()  >  1L;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.size()  >  1L;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.size()  >  1L;	  Integer    months    =    tokens.size()    >    1;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
169	[BUG]  [BUGGY]  Tokens  y  =  tokens,  end.substring(0,  tokens.length()  -  1);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Tokens  y  =  tokens,  end.substring(0,  tokens.length()  -  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Tokens  y  =  tokens,  end.substring(0,  tokens.length()  -  1);	  Tokens    y    =    tokens,    start.substring(0,    tokens.length()    -    1);    	non-compiled	[CE]  	75	None	replace
170	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  S);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    M);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  S);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
171	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  S);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  S);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    M);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  S);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
172	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  M);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    M);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  M);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
173	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  M);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  M);  Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  M);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    M);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  M);	  	compilable	  [FE]  ComparisonFailure  	102	1	add
174	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.nextToken();  Token.containsTokenWithValue(tokens,  M);  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.nextToken();  Token.containsTokenWithValue(tokens,  M);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.nextToken();  Token.containsTokenWithValue(tokens,  M);  }	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    M);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
175	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.get(Calendar.YEAR);  Token.containsTokenWithValue(y,  M);  }  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.get(Calendar.YEAR);  Token.containsTokenWithValue(y,  M);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.get(Calendar.YEAR);  Token.containsTokenWithValue(y,  M);  }	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    M);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
176	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.get(Calendar.YEAR);  tokens.addValue(y);  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.get(Calendar.YEAR);  tokens.addValue(y);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.get(Calendar.YEAR);  tokens.addValue(y);  }	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    M);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
177	[BUG]  [BUGGY]  Integer  months  =  tokens.indexOf('  ')-  2;  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.indexOf('  ')-  2;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.indexOf('  ')-  2;	  Integer    months    =    tokens.size()    -    2;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
178	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(padWithZeros)  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	if(padWithZeros)  {	  if(!Token.containsTokenWithValue(tokens,    y))    {    if(!Token.containsTokenWithValue(tokens,    M))    {    	compilable	  [FE]  ComparisonFailure  	34	1	replace
179	[BUG]  [BUGGY]  if(padWithZeros)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(padWithZeros)  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(padWithZeros)  {	  if(!Token.containsTokenWithValue(tokens,    y))    {    if(!Token.containsTokenWithValue(tokens,    M))    {    	compilable	  [FE]  ComparisonFailure  	34	1	replace
180	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  S))  {  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  S))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  S))  {  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    M)&&!Token.containsTokenWithValue(tokens,    S))    {    if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  S))  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
181	[BUG]  [BUGGY]  Integer  months  =  tokens.indexOf('.')+  1;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.indexOf('.')+  1;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.indexOf('.')+  1;	  Integer    months    =    tokens.size()    +    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
182	[BUG]  [BUGGY]  Integer  months  =  tokens.indexOf('  ')+  1;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.indexOf('  ')+  1;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.indexOf('  ')+  1;	  Integer    months    =    tokens.size()    +    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
183	[BUG]  [BUGGY]  Integer  months  =  tokens.indexOf(':')+  1;  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.indexOf(':')+  1;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.indexOf(':')+  1;	  Integer    months    =    tokens.size()    +    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
184	[BUG]  [BUGGY]  Integer  months  =  tokens.values()  *  DateTimeConstants.MILLIS_PER_DAY;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.values()  *  DateTimeConstants.MILLIS_PER_DAY;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.values()  *  DateTimeConstants.MILLIS_PER_DAY;	  Integer    months    =    tokens.values();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
185	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  H))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  H))  {	  if(!Token.containsTokenWithValue(tokens,    S))    {    if(!Token.containsTokenWithValue(tokens,    H))    {    	compilable	  [FE]  ComparisonFailure  	29	1	replace
186	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  H))  {  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  H))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  H))  {	  if(!Token.containsTokenWithValue(tokens,    S))    {    if(!Token.containsTokenWithValue(tokens,    H))    {    	compilable	  [FE]  ComparisonFailure  	29	1	replace
187	[BUG]  [BUGGY]  Integer  months  =  tokens.get(y  -  1  -  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(y  -  1  -  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(y  -  1  -  1);	  Integer    months    =    tokens.get(y    -    1);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
188	[BUG]  [BUGGY]  Integer  months  =  tokens.get(y  -  1  +  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(y  -  1  +  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(y  -  1  +  1);	  Integer    months    =    tokens.get(y    -    1);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
189	[BUG]  [BUGGY]  Token  m  =  end.nextToken()  +  1;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  end.nextToken()  +  1;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  end.nextToken()  +  1;	  Token    m    =    end.nextToken();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
190	[BUG]  [BUGGY]  Token  m  =  tokens.substring(start,  end.get(Calendar.MILLISECOND));  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.substring(start,  end.get(Calendar.MILLISECOND));  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.substring(start,  end.get(Calendar.MILLISECOND));	  Token    m    =    tokens.trim();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
191	[BUG]  [BUGGY]  Token  m  =  tokens.substring(start.get(Calendar.MILLISECOND));  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.substring(start.get(Calendar.MILLISECOND));  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.substring(start.get(Calendar.MILLISECOND));	  Token    m    =    tokens.trim();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
192	[BUG]  [BUGGY]  Tokens  y  =  tokens.substring0,  tokens.length());  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Tokens  y  =  tokens.substring0,  tokens.length());  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Tokens  y  =  tokens.substring0,  tokens.length());	  Tokens    y    =    tokens.substring(0,    tokens.length()    +    1);    	non-compiled	[CE]  	25	None	replace
193	[BUG]  [BUGGY]  Integer  months  =  tokens.get(years  -  1);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(years  -  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(years  -  1);	  Integer    months    =    tokens.get(years);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
194	[BUG]  [BUGGY]  Token  m  =  start.nextToken()  ||  padWithZeros;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  start.nextToken()  ||  padWithZeros;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  start.nextToken()  ||  padWithZeros;	  Token    m    =    tokens.nextToken()    ||    padWithZeros;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
195	[BUG]  [BUGGY]  Integer  months  =  tokens.size()  *  4;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.size()  *  4;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.size()  *  4;	  Integer    months    =    tokens.size()    *    2;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
196	[BUG]  [BUGGY]  Integer  months  =  tokens.get(0,  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(0,  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(0,  1);	  Integer    months    =    tokens.get(0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
197	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  d);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    d);    Token.containsTokenWithValue(tokens,  d);	  	compilable	  [FE]  ComparisonFailure  	20	1	add
198	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  d);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  d);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    d);    Token.containsTokenWithValue(tokens,  d);	  	compilable	  [FE]  ComparisonFailure  	20	1	add
199	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  l);  Token.containsTokenWithValue(tokens,  d);  [CE]  cannot  find  symbol  l  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  l);  Token.containsTokenWithValue(tokens,  d);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    d);    Token.containsTokenWithValue(tokens,  l);  Token.containsTokenWithValue(tokens,  d);	  	non-compiled	[CE]  cannot  find  symbol  l	20	None	add
200	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  q);  Token.containsTokenWithValue(tokens,  d);  [CE]  cannot  find  symbol  q  [FE]        ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  q);  Token.containsTokenWithValue(tokens,  d);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    d);    Token.containsTokenWithValue(tokens,  q);  Token.containsTokenWithValue(tokens,  d);	  	non-compiled	[CE]  cannot  find  symbol  q	20	None	add
201	[BUG]  [BUGGY]  Integer  months  =  tokens.indexOf('  ')-  1;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.indexOf('  ')-  1;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.indexOf('  ')-  1;	  Integer    months    =    tokens.size()    -    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
202	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens))  {  [CE]  method  containsTokenWithValue  in  class  Token  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens))  {  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens))  {	          Token.containsTokenWithValue(tokens,    y);    if(!Token.containsTokenWithValue(tokens,    y))    {    	non-compiled	[CE]  method  containsTokenWithValue  in  class  Token  cannot  be  applied  to  given  types;	72	None	replace
203	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  JsonToken.VALUE_NUMBER_INT))  {  [CE]  cannot  find  symbol  JsonToken  [FE]          ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  JsonToken.VALUE_NUMBER_INT))  {  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  JsonToken.VALUE_NUMBER_INT))  {	          Token.containsTokenWithValue(tokens,    y);    if(!Token.containsTokenWithValue(tokens,    y))    {    	non-compiled	[CE]  cannot  find  symbol  JsonToken	72	None	replace
204	[BUG]  [BUGGY]  Integer  months  =  tokens.get(y  /  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(y  /  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(y  /  1);	  Integer    months    =    tokens.get(y    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
205	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {	  Token.containsTokenWithValue(tokens,    S);    	non-compiled	[CE]  not  a  statement	61	None	replace
206	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  M))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    S)&&!Token.containsTokenWithValue(tokens,    M))    {    if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  M))  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
207	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  0,  tokens.length);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  0,  tokens.length);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  0,  tokens.length);	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    0);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
208	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  365))  {  [CE]  method  containsTokenWithValue  in  class  Token  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  365))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  365))  {	  if(!Token.containsTokenWithValue(tokens,    M)&&!Token.containsTokenWithValue(tokens,    y))    {    	non-compiled	[CE]  method  containsTokenWithValue  in  class  Token  cannot  be  applied  to  given  types;	79	None	replace
209	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  YEAR))  {  [CE]  cannot  find  symbol  YEAR  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  YEAR))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  YEAR))  {	  if(!Token.containsTokenWithValue(tokens,    M)&&!Token.containsTokenWithValue(tokens,    y))    {    	non-compiled	[CE]  cannot  find  symbol  YEAR	79	None	replace
210	[BUG]  [BUGGY]  Token  m  =  tokens.trimToken(this);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.trimToken(this);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.trimToken(this);	  Token    m    =    tokens.trimToken();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
211	[BUG]  [BUGGY]  Token  m  =  tokens.trimToken(value);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.trimToken(value);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.trimToken(value);	  Token    m    =    tokens.trimToken();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
212	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.get(Calendar.YEAR);  Token.containsTokenWithValue(y,  d);  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.get(Calendar.YEAR);  Token.containsTokenWithValue(y,  d);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  Token  y  =  tokens.get(Calendar.YEAR);  Token.containsTokenWithValue(y,  d);  }	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    d);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
213	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  S))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    H)&&!Token.containsTokenWithValue(tokens,    M))    {    if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  S))  {	  	non-compiled	[CE]  illegal  start  of  expression	104	None	add
214	[BUG]  [BUGGY]  Token  m  =  tokens.nextToken(YEAR);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.nextToken(YEAR);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.nextToken(YEAR);	  Token    m    =    tokens.nextToken(y);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
215	[BUG]  [BUGGY]  Token  m  =  tokens.getToken();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.getToken();  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.getToken();	  Token    m    =    tokens.nextToken()    +    1;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
216	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  365  *  tokens.get(Calendar.YEAR);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  365  *  tokens.get(Calendar.YEAR);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  365  *  tokens.get(Calendar.YEAR);  }	  Token.containsTokenWithValue(tokens,    y)    {    months    +=    365    *    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
217	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  y)  {  months  +=  end.get(Calendar.MONTH);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  y)  {  months  +=  end.get(Calendar.MONTH);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  y)  {  months  +=  end.get(Calendar.MONTH);	  Token.containsTokenWithValue(tokens,    Y)    {    months    +=    12    *    tokens.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	40	None	replace
218	[BUG]  [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  -  1,  tokens.length()  -  4);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length()  -  1,  tokens.length()  -  4);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Tokens  y  =  tokens.substring(0,  tokens.length()  -  1,  tokens.length()  -  4);	  Tokens    y    =    tokens.substring(0,    tokens.length()    -    1,    tokens.length());    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
219	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  y))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  y))  {  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  y))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    M)&&!Token.containsTokenWithValue(tokens,    y))    {    if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  y))  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
220	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  H)  {  months  +=  end.get(Calendar.MONTH);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  H)  {  months  +=  end.get(Calendar.MONTH);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  H)  {  months  +=  end.get(Calendar.MONTH);	  Token.containsTokenWithValue(tokens,    H)    {    months    +=    12    *    tokens.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	39	None	replace
221	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  H)  {  months  +=  end.get(Calendar.YEAR);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  H)  {  months  +=  end.get(Calendar.YEAR);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  H)  {  months  +=  end.get(Calendar.YEAR);	  Token.containsTokenWithValue(tokens,    H)    {    months    +=    12    *    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  ';'  expected	49	None	replace
222	[BUG]  [BUGGY]  Token  m  =  tokens.trimToken()  +  1;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.trimToken()  +  1;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.trimToken()  +  1;	  Token    m    =    tokens.nextToken()    +    1;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
223	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  if(!Token.containsTokenWithValue(tokens,  d))  {  Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  d);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    d);    if(!Token.containsTokenWithValue(tokens,  d))  {  Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  d);  }	  	compilable	  [FE]  ComparisonFailure  	20	1	add
224	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  if(!Token.containsTokenWithValue(tokens,  d))  {  Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  d);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  if(!Token.containsTokenWithValue(tokens,  d))  {  Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  d);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    d);    if(!Token.containsTokenWithValue(tokens,  d))  {  Token.containsTokenWithValue(tokens,  d);  Token.containsTokenWithValue(tokens,  d);  }	  	compilable	  [FE]  ComparisonFailure  	20	1	add
225	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  if(!Token.containsTokenWithValue(tokens,  d))  {  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  d);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    d);    if(!Token.containsTokenWithValue(tokens,  d))  {  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  d);  }	  	compilable	  [FE]  ComparisonFailure  	20	1	add
226	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  if(!Token.containsTokenWithValue(tokens,  d))  {  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  d);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  d);  if(!Token.containsTokenWithValue(tokens,  d))  {  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  d);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    d);    if(!Token.containsTokenWithValue(tokens,  d))  {  Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  d);  }	  	compilable	  [FE]  ComparisonFailure  	20	1	add
227	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  L)&&!Token.containsTokenWithValue(tokens,  M))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  L)&&!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    S)&&!Token.containsTokenWithValue(tokens,    M))    {    if(!Token.containsTokenWithValue(tokens,  L)&&!Token.containsTokenWithValue(tokens,  M))  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
228	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  M))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    H)&&!Token.containsTokenWithValue(tokens,    M))    {    if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  M))  {	  	non-compiled	[CE]  illegal  start  of  expression	104	None	add
229	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    H)&&!Token.containsTokenWithValue(tokens,    M))    {    if(!Token.containsTokenWithValue(tokens,  S)&&!Token.containsTokenWithValue(tokens,  M))  {	  	non-compiled	[CE]  illegal  start  of  expression	104	None	add
230	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  Token.containsTokenWithValue(tokens,  M);  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  Token.containsTokenWithValue(tokens,  M);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  S))  {  Token.containsTokenWithValue(tokens,  M);  }	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    M);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
231	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  Token.containsTokenWithValue(tokens,  M);  }  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  Token.containsTokenWithValue(tokens,  M);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  H))  {  Token.containsTokenWithValue(tokens,  M);  }	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    M);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
232	[BUG]  [BUGGY]  Token  m  =  tokens.nextToken(tokens,  value);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.nextToken(tokens,  value);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.nextToken(tokens,  value);	  Token    m    =    tokens.nextToken(y);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
233	[BUG]  [BUGGY]  Token  m  =  tokens.nextToken(y,  value);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.nextToken(y,  value);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.nextToken(y,  value);	  Token    m    =    tokens.nextToken(y);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
234	[BUG]  [BUGGY]  Token  m  =  tokens.substring(1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token  m  =  tokens.substring(1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token  m  =  tokens.substring(1);	  Token    m    =    tokens.trim();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
235	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  M)  {  months  +=  end.get(Calendar.MONTH);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  M)  {  months  +=  end.get(Calendar.MONTH);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  M)  {  months  +=  end.get(Calendar.MONTH);	  Token.containsTokenWithValue(tokens,    M)    {    months    +=    12    *    tokens.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	37	None	replace
236	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  S)  {  months  +=  end.get(Calendar.MONTH);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  S)  {  months  +=  end.get(Calendar.MONTH);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  S)  {  months  +=  end.get(Calendar.MONTH);	  Token.containsTokenWithValue(tokens,    M)    {    months    +=    12    *    tokens.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	37	None	replace
237	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  y)  {  months  +=  end.get(Calendar.YEAR);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  y)  {  months  +=  end.get(Calendar.YEAR);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  y)  {  months  +=  end.get(Calendar.YEAR);	  Token.containsTokenWithValue(tokens,    Y)    {    months    +=    12    *    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  ';'  expected	50	None	replace
238	[BUG]  [BUGGY]  Integer  months  =  tokens.get(YEAR  -  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(YEAR  -  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(YEAR  -  1);	  Integer    months    =    tokens.get(y    -    1);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
239	[BUG]  [BUGGY]  Integer  months  =  tokens.values().getIntValue();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.values().getIntValue();  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.values().getIntValue();	  Integer    months    =    tokens.values();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
240	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  H))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  H))  {	  if(!Token.containsTokenWithValue(tokens,    H)&&!Token.containsTokenWithValue(tokens,    M))    {    	compilable	  [FE]  ComparisonFailure  	105	2	replace
241	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  H))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  H))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  H))  {	  if(!Token.containsTokenWithValue(tokens,    H)&&!Token.containsTokenWithValue(tokens,    M))    {    	compilable	  [FE]  ComparisonFailure  	105	2	replace
242	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  M)||!Token.containsTokenWithValue(tokens,  M))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S)||!Token.containsTokenWithValue(tokens,  M))  {  if(!Token.containsTokenWithValue(tokens,  M)||!Token.containsTokenWithValue(tokens,  M))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    S)||!Token.containsTokenWithValue(tokens,    M))    {    if(!Token.containsTokenWithValue(tokens,  M)||!Token.containsTokenWithValue(tokens,  M))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
243	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  J)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  J)  {  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  J)  {	  Token.containsTokenWithValue(tokens,    M)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
244	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token.containsTokenWithValue(tokens,  d);  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  Token.containsTokenWithValue(tokens,  d);  }  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  Token.containsTokenWithValue(tokens,  d);  }	          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,    d);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
245	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  Y);  Token.containsTokenWithValue(tokens,  m);  [CE]  cannot  find  symbol  Y  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  m);  Token.containsTokenWithValue(tokens,  Y);  Token.containsTokenWithValue(tokens,  m);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    m);    Token.containsTokenWithValue(tokens,  Y);  Token.containsTokenWithValue(tokens,  m);	  	non-compiled	[CE]  cannot  find  symbol  Y	18	None	add
246	[BUG]  [BUGGY]  Integer  months  =  tokens.get(tokens.size())-  1;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(tokens.size())-  1;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(tokens.size())-  1;	  Integer    months    =    tokens.size()    -    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
247	[BUG]  [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length())+  1;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Tokens  y  =  tokens.substring(0,  tokens.length())+  1;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Tokens  y  =  tokens.substring(0,  tokens.length())+  1;	  Tokens    y    =    tokens.substring(0,    tokens.length()    *    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
248	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  S)  {  months  +=  end.get(Calendar.YEAR);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  S)  {  months  +=  end.get(Calendar.YEAR);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  S)  {  months  +=  end.get(Calendar.YEAR);	  Token.containsTokenWithValue(tokens,    S)    {    months    +=    12    *    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  ';'  expected	48	None	replace
249	[BUG]  [BUGGY]  Integer  months  =  tokens.get(Y  +  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(Y  +  1);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(Y  +  1);	  Integer    months    =    tokens.get(y    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
250	[BUG]  [BUGGY]  Integer  months  =  tokens.get(0,  0);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(0,  0);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(0,  0);	  Integer    months    =    tokens.get(0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
251	[BUG]  [BUGGY]  Integer  months  =  tokens.size()  *  12;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.size()  *  12;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.size()  *  12;	  Integer    months    =    tokens.size()    *    0;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
252	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  S);  Token.containsTokenWithValue(tokens,  y);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	add	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  S);  Token.containsTokenWithValue(tokens,  y);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
253	[BUG]  [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  S);  Token.containsTokenWithValue(tokens,  y);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]          Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  y);  Token.containsTokenWithValue(tokens,  S);  Token.containsTokenWithValue(tokens,  y);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	                Token.containsTokenWithValue(tokens,        y);        Token.containsTokenWithValue(tokens,    y);    Token.containsTokenWithValue(tokens,  S);  Token.containsTokenWithValue(tokens,  y);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
254	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  S))  {  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  S))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M)&&!Token.containsTokenWithValue(tokens,  S))  {  if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  S))  {  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	if(!Token.containsTokenWithValue(tokens,    M)&&!Token.containsTokenWithValue(tokens,    S))    {    if(!Token.containsTokenWithValue(tokens,  H)&&!Token.containsTokenWithValue(tokens,  S))  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
255	[BUG]  [BUGGY]  Token.containsTokenWithValue(tokens,  M)  {  months  +=  end.get(Calendar.YEAR);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Token.containsTokenWithValue(tokens,  M)  {  months  +=  end.get(Calendar.YEAR);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Token.containsTokenWithValue(tokens,  M)  {  months  +=  end.get(Calendar.YEAR);	  Token.containsTokenWithValue(tokens,    M)    {    months    +=    12    *    tokens.get(Calendar.YEAR);    	non-compiled	[CE]  ';'  expected	47	None	replace
256	[BUG]  [BUGGY]  Integer  months  =  tokens.get(Calendar.MONTH);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.get(Calendar.MONTH);  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.get(Calendar.MONTH);	  Integer    months    =    tokens.get(YEAR);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
257	[BUG]  [BUGGY]  Integer  months  =  tokens.indexOf(',')+  1;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      minutes  -=  reduceAndCorrect(start,  end,  Calendar.MINUTE,  minutes);  hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {      [BUGGY]  Integer  months  =  tokens.indexOf(',')+  1;  [BUGGY]      if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	330	330	1	replace	Integer  months  =  tokens.indexOf(',')+  1;	  Integer    months    =    tokens.size()    +    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
