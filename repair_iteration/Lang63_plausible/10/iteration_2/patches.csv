bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Years  +=  365  *  years;  [CE]  cannot  find  symbol  Years  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Years  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Years  +=  365  *  years;	  months    +=    365    *    years;    Years    +=    365    *    years;    	non-compiled	[CE]  cannot  find  symbol  Years	78	None	replace
2	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  +=  365  *  years;	  months    +=    365    *    years;    Years    +=    365    *    years;    	compilable	  [FE]  ComparisonFailure  	78	2	replace
3	[BUG]  [BUGGY]  years  +=  365  *  years;  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  365  *  years;	  months    +=    365    *    years;    Years    +=    365    *    years;    	compilable	  [FE]  ComparisonFailure  	78	2	replace
4	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  365  *  months;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  +=  365  *  months;	  months    +=    365    *    years;    Years    +=    365    *    years;    	compilable	  [FE]  ComparisonFailure  	78	2	replace
5	[BUG]  [BUGGY]  years  +=  365  *  months;  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  365  *  months;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  365  *  months;	  months    +=    365    *    years;    Years    +=    365    *    years;    	compilable	  [FE]  ComparisonFailure  	78	2	replace
6	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  +=  365  *  days;	  months    +=    365    *    years;    Years    +=    365    *    years;    	compilable	  [FE]  ComparisonFailure  	78	2	replace
7	[BUG]  [BUGGY]  years  +=  365  *  days;  [FE]  ComparisonFailure  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  365  *  days;	  months    +=    365    *    years;    Years    +=    365    *    years;    	compilable	  [FE]  ComparisonFailure  	78	2	replace
8	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  3  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  3  *  hours;	  months    +=    365    *    hours;    	compilable	  [FE]  ComparisonFailure  	191	2	replace
9	[BUG]  [BUGGY]  months  +=  3  *  hours;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  3  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  3  *  hours;	  months    +=    365    *    hours;    	compilable	  [FE]  ComparisonFailure  	191	2	replace
10	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  Days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Days	246	None	replace
11	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [CE]  cannot  find  symbol  Days  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  Days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Days	246	None	replace
12	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [CE]  cannot  find  symbol  Months  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	241	None	replace
13	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [CE]  cannot  find  symbol  Hours  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Hours	241	None	replace
14	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Hours  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Hours	241	None	replace
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	64	2	replace
16	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	64	2	replace
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	64	2	replace
18	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	64	2	replace
19	[BUG]  [BUGGY]  value  +=  start.get(Calendar.YEAR);  [CE]  cannot  find  symbol  value  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  value  +=  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	value  +=  start.get(Calendar.YEAR);	  y    +=    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol  value	139	None	replace
20	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  +=  start.get(Calendar.YEAR);	  y    +=    start.get(Calendar.YEAR);    	compilable	  [FE]  ComparisonFailure  	139	2	replace
21	[BUG]  [BUGGY]  days  +=  start.get(Calendar.YEAR);  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  +=  start.get(Calendar.YEAR);	  y    +=    start.get(Calendar.YEAR);    	compilable	  [FE]  ComparisonFailure  	139	2	replace
22	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
23	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
24	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
25	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
26	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
27	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
28	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
29	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
30	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [CE]  cannot  find  symbol  Days  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	non-compiled	[CE]  cannot  find  symbol  Days	29	None	add
31	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
32	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
33	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	non-compiled	[CE]  cannot  find  symbol  Days	156	None	add
34	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
35	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
36	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
37	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
38	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
39	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
40	[BUG]  [BUGGY]  s  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [CE]  cannot  assign  a  value  to  final  variable  s  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  s  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	s  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);	  y    +=    start.get(Calendar.YEAR)-    end.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  s	186	None	replace
41	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	221	2	replace
42	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	221	2	replace
43	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	221	2	replace
44	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	221	2	replace
45	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  +=  365  *  years;	  months    +=    365    *    years;    days    +=    365    *    years;    	compilable	  [FE]  ComparisonFailure  	77	2	replace
46	[BUG]  [BUGGY]  days  +=  365  *  years;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  +=  365  *  years;	  months    +=    365    *    years;    days    +=    365    *    years;    	compilable	  [FE]  ComparisonFailure  	77	2	replace
47	[BUG]  [BUGGY]  days  +=  365  *  YEARS;  [CE]  cannot  find  symbol  YEARS  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  365  *  YEARS;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  +=  365  *  YEARS;	  months    +=    365    *    years;    days    +=    365    *    years;    	non-compiled	[CE]  cannot  find  symbol  YEARS	77	None	replace
48	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  365  *  months;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  +=  365  *  months;	  months    +=    365    *    years;    days    +=    365    *    years;    	compilable	  [FE]  ComparisonFailure  	77	2	replace
49	[BUG]  [BUGGY]  days  +=  365  *  months;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  365  *  months;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  +=  365  *  months;	  months    +=    365    *    years;    days    +=    365    *    years;    	compilable	  [FE]  ComparisonFailure  	77	2	replace
50	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  365  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  +=  365  *  hours;	  months    +=    365    *    years;    days    +=    365    *    years;    	compilable	  [FE]  ComparisonFailure  	77	2	replace
51	[BUG]  [BUGGY]  days  +=  365  *  hours;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  365  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  +=  365  *  hours;	  months    +=    365    *    years;    days    +=    365    *    years;    	compilable	  [FE]  ComparisonFailure  	77	2	replace
52	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [CE]  cannot  find  symbol  Months  [FE]                        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  Months    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	95	None	replace
53	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  [CE]  cannot  find  symbol  Months  [FE]                          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);	  Months    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	95	None	replace
54	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  [CE]  cannot  find  symbol  Months  [FE]                            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);	  Months    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	95	None	replace
55	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	210	2	replace
56	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	210	2	replace
57	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	227	1	add
58	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	227	1	add
59	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	227	1	add
60	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	227	1	add
61	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Month  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  ';'  expected	227	None	add
62	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	227	2	add
63	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	227	2	add
64	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	227	1	add
65	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	227	1	add
66	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
67	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
68	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
69	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
70	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Years  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	42	None	add
71	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
72	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
73	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
74	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
75	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
76	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
77	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
78	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
79	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
80	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
81	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	52	None	add
82	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	165	1	add
83	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	165	1	add
84	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	non-compiled	[CE]  cannot  find  symbol  Days	165	None	add
85	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	165	1	add
86	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	165	1	add
87	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	165	1	add
88	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	165	1	add
89	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	165	1	add
90	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	165	1	add
91	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  +=  12  *  years  +  1;	  months    +=    12    *    years    +    1;    years    +=    12    *    years    +    1;    	compilable	  [FE]  ComparisonFailure  	128	2	replace
92	[BUG]  [BUGGY]  years  +=  12  *  years  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  12  *  years  +  1;	  months    +=    12    *    years    +    1;    years    +=    12    *    years    +    1;    	compilable	  [FE]  ComparisonFailure  	128	2	replace
93	[BUG]  [BUGGY]  years  +=  12  *  YEARS  +  1;  [CE]  cannot  find  symbol  YEARS  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  12  *  YEARS  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  12  *  YEARS  +  1;	  months    +=    12    *    years    +    1;    years    +=    12    *    years    +    1;    	non-compiled	[CE]  cannot  find  symbol  YEARS	128	None	replace
94	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Hours  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    minutes);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Hours	171	None	replace
95	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [CE]  cannot  find  symbol  Hours  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    	non-compiled	[CE]  cannot  find  symbol  Hours	23	None	replace
96	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days  +  1);  [CE]  cannot  find  symbol  Hours  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days  +  1);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days  +  1);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    	non-compiled	[CE]  cannot  find  symbol  Hours	23	None	replace
97	[BUG]  [BUGGY]  Months  +=  12  *  365;  [CE]  cannot  find  symbol  Months  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  +=  12  *  365;	  months    +=    12    *    365;    Months    +=    12    *    365;    	non-compiled	[CE]  cannot  find  symbol  Months	145	None	replace
98	[BUG]  [BUGGY]  Monaten  +=  12  *  365;  [CE]  cannot  find  symbol  Monaten  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Monaten  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Monaten  +=  12  *  365;	  months    +=    12    *    365;    Months    +=    12    *    365;    	non-compiled	[CE]  cannot  find  symbol  Monaten	145	None	replace
99	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  7  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  7  *  days;	  months    +=    12    *    days;    months    +=    12    *    days;    	compilable	  [FE]  ComparisonFailure  	111	2	replace
100	[BUG]  [BUGGY]  months  +=  7  *  days;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  7  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  7  *  days;	  months    +=    12    *    days;    months    +=    12    *    days;    	compilable	  [FE]  ComparisonFailure  	111	2	replace
101	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	5	2	replace
102	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	5	2	replace
103	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	5	2	replace
104	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	5	2	replace
105	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	5	2	replace
106	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	5	2	replace
107	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	237	1	add
108	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	237	1	add
109	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	237	1	add
110	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	237	1	add
111	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,	  	non-compiled	[CE]  ')'  expected	237	None	add
112	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	237	1	add
113	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	237	1	add
114	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	237	1	add
115	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	237	1	add
116	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	          days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    	non-compiled	[CE]  cannot  find  symbol  Days	39	None	replace
117	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	          days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    	compilable	  [FE]  ComparisonFailure  	39	2	replace
118	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	          days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    	compilable	  [FE]  ComparisonFailure  	39	2	replace
119	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	          days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    	compilable	  [FE]  ComparisonFailure  	39	2	replace
120	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	          days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    	compilable	  [FE]  ComparisonFailure  	39	2	replace
121	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  12;	  months    +=    12    *    24;    	compilable	  [FE]  ComparisonFailure  	150	2	replace
122	[BUG]  [BUGGY]  months  +=  12;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12;	  months    +=    12    *    24;    	compilable	  [FE]  ComparisonFailure  	150	2	replace
123	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    	compilable	  [FE]  ComparisonFailure  	107	2	replace
124	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    	compilable	  [FE]  ComparisonFailure  	107	2	replace
125	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	61	2	replace
126	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	61	2	replace
127	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	61	2	replace
128	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	61	2	replace
129	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	243	1	add
130	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	243	1	add
131	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	243	1	add
132	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	243	1	add
133	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  ';'  expected	243	None	add
134	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	243	1	add
135	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	243	1	add
136	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	243	1	add
137	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	243	1	add
138	[BUG]  [BUGGY]  Month  month  =  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  month  =  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  month  =  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);	  month    +=    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
139	[BUG]  [BUGGY]  Month  endMillis  =  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  endMillis  =  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  endMillis  =  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);	  month    +=    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
140	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	32	2	replace
141	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	32	2	replace
142	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	32	2	replace
143	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	32	2	replace
144	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	30	2	replace
145	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	30	2	replace
146	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        years        +        1;        days    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	130	2	add
147	[BUG]  [BUGGY]  months    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        years        +        1;        days    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	130	2	add
148	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        years        +        1;        days    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	130	2	add
149	[BUG]  [BUGGY]  months    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        years        +        1;        days    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	130	2	add
150	[BUG]  [BUGGY]  months    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;  Month  months  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;  Month  months  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        years        +        1;        days    +=    12    *    years    +    1;    Month  months  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;	  	non-compiled	[CE]  ';'  expected	130	None	add
151	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        years        +        1;        days    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	130	2	add
152	[BUG]  [BUGGY]  months    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        years        +        1;        days    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	130	2	add
153	[BUG]  [BUGGY]  months    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;  Years  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  [CE]  cannot  find  symbol  Years  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;  Years  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        years        +        1;        days    +=    12    *    years    +    1;    Years  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Years	130	None	add
154	[BUG]  [BUGGY]  months  +=  12  *  M,  y;  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  M,  y;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  M,  y;	  months    +=    12    *    M;    	non-compiled	[CE]  ';'  expected	214	None	replace
155	[BUG]  [BUGGY]  months  +=  12  *  M  -  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  M  -  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  M  -  1;	  months    +=    12    *    M;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	214	None	replace
156	[BUG]  [BUGGY]  months  +=  24  *  M,  y;  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  M,  y;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  M,  y;	  months    +=    24    *    M;    	non-compiled	[CE]  ';'  expected	208	None	replace
157	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    months  +=  12  *  days;  months  +=  12  *  days;  months  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        days;        months    +=    12    *    days;    months  +=  12  *  days;  months  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	110	1	add
158	[BUG]  [BUGGY]  months    +=    12    *    days;    months  +=  12  *  days;  months  +=  12  *  days;  months  +=  12  *  days;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    months  +=  12  *  days;  months  +=  12  *  days;  months  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        days;        months    +=    12    *    days;    months  +=  12  *  days;  months  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	110	1	add
159	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    months  +=  12  *  days;  years  +=  12  *  days;  months  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        days;        months    +=    12    *    days;    years  +=  12  *  days;  months  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	110	1	add
160	[BUG]  [BUGGY]  months    +=    12    *    days;    months  +=  12  *  days;  years  +=  12  *  days;  months  +=  12  *  days;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    months  +=  12  *  days;  years  +=  12  *  days;  months  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        days;        months    +=    12    *    days;    years  +=  12  *  days;  months  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	110	1	add
161	[BUG]  [BUGGY]  months    +=    12    *    days;    months  +=  12  *  days;  Month  months  +=  12  *  days;  months  +=  12  *  days;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    months  +=  12  *  days;  Month  months  +=  12  *  days;  months  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        days;        months    +=    12    *    days;    Month  months  +=  12  *  days;  months  +=  12  *  days;	  	non-compiled	[CE]  ';'  expected	110	None	add
162	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    months  +=  12  *  days;  days  +=  12  *  days;  months  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        days;        months    +=    12    *    days;    days  +=  12  *  days;  months  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	110	1	add
163	[BUG]  [BUGGY]  months    +=    12    *    days;    months  +=  12  *  days;  days  +=  12  *  days;  months  +=  12  *  days;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    months  +=  12  *  days;  days  +=  12  *  days;  months  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        days;        months    +=    12    *    days;    days  +=  12  *  days;  months  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	110	1	add
164	[BUG]  [BUGGY]  months    +=    12    *    days;    months  +=  12  *  days;  Months  +=  12  *  days;  months  +=  12  *  days;  [CE]  cannot  find  symbol  Months  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    months  +=  12  *  days;  Months  +=  12  *  days;  months  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        days;        months    +=    12    *    days;    Months  +=  12  *  days;  months  +=  12  *  days;	  	non-compiled	[CE]  cannot  find  symbol  Months	110	None	add
165	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    months  +=  365  *  years;  months  +=  365  *  years;  months  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        365        *        years;        months    +=    365    *    years;    months  +=  365  *  years;  months  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	71	2	add
166	[BUG]  [BUGGY]  months    +=    365    *    years;    months  +=  365  *  years;  months  +=  365  *  years;  months  +=  365  *  years;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    months  +=  365  *  years;  months  +=  365  *  years;  months  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        365        *        years;        months    +=    365    *    years;    months  +=  365  *  years;  months  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	71	2	add
167	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    months  +=  365  *  years;  years  +=  365  *  years;  months  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        365        *        years;        months    +=    365    *    years;    years  +=  365  *  years;  months  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	71	2	add
168	[BUG]  [BUGGY]  months    +=    365    *    years;    months  +=  365  *  years;  years  +=  365  *  years;  months  +=  365  *  years;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    months  +=  365  *  years;  years  +=  365  *  years;  months  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        365        *        years;        months    +=    365    *    years;    years  +=  365  *  years;  months  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	71	2	add
169	[BUG]  [BUGGY]  months    +=    365    *    years;    months  +=  365  *  years;  Months  +=  365  *  years;  months  +=  365  *  years;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    months  +=  365  *  years;  Months  +=  365  *  years;  months  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        365        *        years;        months    +=    365    *    years;    Months  +=  365  *  years;  months  +=  365  *  years;	  	non-compiled	[CE]  cannot  find  symbol  Months	71	None	add
170	[BUG]  [BUGGY]  months    +=    365    *    years;    months  +=  365  *  years;  Month  months  +=  365  *  years;  months  +=  365  *  years;  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    months  +=  365  *  years;  Month  months  +=  365  *  years;  months  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        365        *        years;        months    +=    365    *    years;    Month  months  +=  365  *  years;  months  +=  365  *  years;	  	non-compiled	[CE]  ';'  expected	71	None	add
171	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    months  +=  365  *  years;  days  +=  365  *  years;  months  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        365        *        years;        months    +=    365    *    years;    days  +=  365  *  years;  months  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	71	2	add
172	[BUG]  [BUGGY]  months    +=    365    *    years;    months  +=  365  *  years;  days  +=  365  *  years;  months  +=  365  *  years;  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    months  +=  365  *  years;  days  +=  365  *  years;  months  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        365        *        years;        months    +=    365    *    years;    days  +=  365  *  years;  months  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	71	2	add
173	[BUG]  [BUGGY]  Month  end  =  tokens.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  tokens.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  tokens.get(Calendar.MONTH)-  start.get(Calendar.MONTH);	  Month    end    =    start.get(Calendar.MONTH)-    end.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  find  symbol	226	None	replace
174	[BUG]  [BUGGY]  Month  end  =  m.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  m.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  m.get(Calendar.MONTH)-  start.get(Calendar.MONTH);	  Month    end    =    start.get(Calendar.MONTH)-    end.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  find  symbol	226	None	replace
175	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	253	1	add
176	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	253	1	add
177	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	253	None	add
178	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	253	1	add
179	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	253	1	add
180	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	253	2	add
181	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	253	2	add
182	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	253	1	add
183	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	253	1	add
184	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  days;  months  +=  24  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    24    *    days;    months  +=  24  *  days;	  	compilable	  [FE]  ComparisonFailure  	80	1	add
185	[BUG]  [BUGGY]  months  +=  24  *  days;  months  +=  24  *  days;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  days;  months  +=  24  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    days;    months  +=  24  *  days;	  	compilable	  [FE]  ComparisonFailure  	80	1	add
186	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  days;  years  +=  24  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    24    *    days;    years  +=  24  *  days;	  	compilable	  [FE]  ComparisonFailure  	80	1	add
187	[BUG]  [BUGGY]  months  +=  24  *  days;  years  +=  24  *  days;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  days;  years  +=  24  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    days;    years  +=  24  *  days;	  	compilable	  [FE]  ComparisonFailure  	80	1	add
188	[BUG]  [BUGGY]  months  +=  24  *  days;  Months  +=  24  *  days;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  days;  Months  +=  24  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    days;    Months  +=  24  *  days;	  	non-compiled	[CE]  cannot  find  symbol  Months	80	None	add
189	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  days;  days  +=  24  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    24    *    days;    days  +=  24  *  days;	  	compilable	  [FE]  ComparisonFailure  	80	1	add
190	[BUG]  [BUGGY]  months  +=  24  *  days;  days  +=  24  *  days;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  days;  days  +=  24  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    days;    days  +=  24  *  days;	  	compilable	  [FE]  ComparisonFailure  	80	1	add
191	[BUG]  [BUGGY]  months  +=  24  *  days;  Month  months  +=  24  *  days;  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  days;  Month  months  +=  24  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    days;    Month  months  +=  24  *  days;	  	non-compiled	[CE]  ';'  expected	80	None	add
192	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	2	2	replace
193	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	2	2	replace
194	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  hours;  months  +=  24  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    24    *    hours;    months  +=  24  *  hours;	  	compilable	  [FE]  ComparisonFailure  	206	1	add
195	[BUG]  [BUGGY]  months  +=  24  *  hours;  months  +=  24  *  hours;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  hours;  months  +=  24  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    hours;    months  +=  24  *  hours;	  	compilable	  [FE]  ComparisonFailure  	206	1	add
196	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  hours;  years  +=  24  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    24    *    hours;    years  +=  24  *  hours;	  	compilable	  [FE]  ComparisonFailure  	206	1	add
197	[BUG]  [BUGGY]  months  +=  24  *  hours;  years  +=  24  *  hours;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  hours;  years  +=  24  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    hours;    years  +=  24  *  hours;	  	compilable	  [FE]  ComparisonFailure  	206	1	add
198	[BUG]  [BUGGY]  months  +=  24  *  hours;  Months  +=  24  *  hours;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  hours;  Months  +=  24  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    hours;    Months  +=  24  *  hours;	  	non-compiled	[CE]  cannot  find  symbol  Months	206	None	add
199	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  hours;  days  +=  24  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    24    *    hours;    days  +=  24  *  hours;	  	compilable	  [FE]  ComparisonFailure  	206	1	add
200	[BUG]  [BUGGY]  months  +=  24  *  hours;  days  +=  24  *  hours;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  hours;  days  +=  24  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    hours;    days  +=  24  *  hours;	  	compilable	  [FE]  ComparisonFailure  	206	1	add
201	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  hours;  hours  +=  24  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    24    *    hours;    hours  +=  24  *  hours;	  	compilable	  [FE]  ComparisonFailure  	206	1	add
202	[BUG]  [BUGGY]  months  +=  24  *  hours;  hours  +=  24  *  hours;  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  hours;  hours  +=  24  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    hours;    hours  +=  24  *  hours;	  	compilable	  [FE]  ComparisonFailure  	206	1	add
203	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  years  +  1;  months  +=  365  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    365    *    years    +    1;    months  +=  365  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	56	2	add
204	[BUG]  [BUGGY]  months  +=  365  *  years  +  1;  months  +=  365  *  years  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  years  +  1;  months  +=  365  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    years    +    1;    months  +=  365  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	56	2	add
205	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  years  +  1;  years  +=  365  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    365    *    years    +    1;    years  +=  365  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	56	2	add
206	[BUG]  [BUGGY]  months  +=  365  *  years  +  1;  years  +=  365  *  years  +  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  years  +  1;  years  +=  365  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    years    +    1;    years  +=  365  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	56	2	add
207	[BUG]  [BUGGY]  months  +=  365  *  years  +  1;  Months  +=  365  *  years  +  1;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  years  +  1;  Months  +=  365  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    years    +    1;    Months  +=  365  *  years  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Months	56	None	add
208	[BUG]  [BUGGY]  months  +=  365  *  years  +  1;  Month  months  +=  365  *  years  +  1;  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  years  +  1;  Month  months  +=  365  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    years    +    1;    Month  months  +=  365  *  years  +  1;	  	non-compiled	[CE]  ';'  expected	56	None	add
209	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  years  +  1;  days  +=  365  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    365    *    years    +    1;    days  +=  365  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	56	2	add
210	[BUG]  [BUGGY]  months  +=  365  *  years  +  1;  days  +=  365  *  years  +  1;  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  years  +  1;  days  +=  365  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    years    +    1;    days  +=  365  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	56	2	add
211	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	179	2	replace
212	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	179	2	replace
213	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	179	2	replace
214	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	179	2	replace
215	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [CE]  cannot  find  symbol  Months  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);	  Months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	93	None	replace
216	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Months  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  Months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	93	None	replace
217	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [CE]  cannot  find  symbol  Months  [FE]                        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  Months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	93	None	replace
218	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  hours;  months  +=  12  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    hours;    months  +=  12  *  hours;	  	compilable	  [FE]  ComparisonFailure  	198	1	add
219	[BUG]  [BUGGY]  months  +=  12  *  hours;  months  +=  12  *  hours;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  hours;  months  +=  12  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    hours;    months  +=  12  *  hours;	  	compilable	  [FE]  ComparisonFailure  	198	1	add
220	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  hours;  years  +=  12  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    hours;    years  +=  12  *  hours;	  	compilable	  [FE]  ComparisonFailure  	198	1	add
221	[BUG]  [BUGGY]  months  +=  12  *  hours;  years  +=  12  *  hours;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  hours;  years  +=  12  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    hours;    years  +=  12  *  hours;	  	compilable	  [FE]  ComparisonFailure  	198	1	add
222	[BUG]  [BUGGY]  months  +=  12  *  hours;  Months  +=  12  *  hours;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  hours;  Months  +=  12  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    hours;    Months  +=  12  *  hours;	  	non-compiled	[CE]  cannot  find  symbol  Months	198	None	add
223	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  hours;  days  +=  12  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    hours;    days  +=  12  *  hours;	  	compilable	  [FE]  ComparisonFailure  	198	1	add
224	[BUG]  [BUGGY]  months  +=  12  *  hours;  days  +=  12  *  hours;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  hours;  days  +=  12  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    hours;    days  +=  12  *  hours;	  	compilable	  [FE]  ComparisonFailure  	198	1	add
225	[BUG]  [BUGGY]  months  +=  12  *  hours;  Years  +=  12  *  hours;  [CE]  cannot  find  symbol  Years  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  hours;  Years  +=  12  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    hours;    Years  +=  12  *  hours;	  	non-compiled	[CE]  cannot  find  symbol  Years	198	None	add
226	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
227	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
228	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
229	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
230	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
231	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
232	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
233	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
234	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
235	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
236	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);	  months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	244	2	replace
237	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);	  months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	244	2	replace
238	[BUG]  [BUGGY]  m  +=  end.get(Calendar.YEAR);  [CE]  cannot  assign  a  value  to  final  variable  m  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  m  +=  end.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	m  +=  end.get(Calendar.YEAR);	  value    +=    end.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  m	140	None	replace
239	[BUG]  [BUGGY]  ValueUtils.copyValue(end,  value);  [CE]  cannot  find  symbol  value  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.copyValue(end,  value);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.copyValue(end,  value);	  value    +=    end.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol  value	140	None	replace
240	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
241	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
242	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
243	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
244	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
245	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
246	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	65	None	add
247	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
248	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
249	[BUG]  [BUGGY]  month.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  month.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	month.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);	  year    +=    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  not  a  statement	232	None	replace
250	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	106	2	add
251	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	106	2	add
252	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	non-compiled	[CE]  cannot  find  symbol  Days	106	None	add
253	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	106	2	add
254	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	106	2	add
255	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	106	2	add
256	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	106	2	add
257	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	106	2	add
258	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	106	2	add
259	[BUG]  [BUGGY]  Month  months  +=  12  *  365;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  months  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  months  +=  12  *  365;	  months    +=    12    *    365;    Month    months    +=    12    *    365;    	non-compiled	[CE]  ';'  expected	148	None	replace
260	[BUG]  [BUGGY]  Monate  +=  12  *  365;  [CE]  cannot  find  symbol  Monate  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Monate  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Monate  +=  12  *  365;	  months    +=    12    *    365;    Month    months    +=    12    *    365;    	non-compiled	[CE]  cannot  find  symbol  Monate	148	None	replace
261	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    	compilable	  [FE]  ComparisonFailure  	238	2	replace
262	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    	compilable	  [FE]  ComparisonFailure  	238	2	replace
263	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    	compilable	  [FE]  ComparisonFailure  	238	2	replace
264	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    	compilable	  [FE]  ComparisonFailure  	238	2	replace
265	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    	compilable	  [FE]  ComparisonFailure  	238	2	replace
266	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    	compilable	  [FE]  ComparisonFailure  	238	2	replace
267	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	201	1	add
268	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	201	1	add
269	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	201	None	add
270	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	201	1	add
271	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	201	1	add
272	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	201	1	add
273	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	201	1	add
274	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	201	1	add
275	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	201	1	add
276	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  values);  [CE]  cannot  find  symbol  values  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  values);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  values);	          days    +=    end.get(Calendar.HOUR_OF_DAY,    y);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  values	35	None	replace
277	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  this.days);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  this.days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  this.days);	          days    +=    end.get(Calendar.HOUR_OF_DAY,    y);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	35	None	replace
278	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  +=  12  *  years  +  1;	  months    +=    12    *    years    +    1;    days    +=    12    *    years    +    1;    	compilable	  [FE]  ComparisonFailure  	131	2	replace
279	[BUG]  [BUGGY]  days  +=  12  *  years  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  +=  12  *  years  +  1;	  months    +=    12    *    years    +    1;    days    +=    12    *    years    +    1;    	compilable	  [FE]  ComparisonFailure  	131	2	replace
280	[BUG]  [BUGGY]  days  +=  12  *  YEARS  +  1;  [CE]  cannot  find  symbol  YEARS  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  12  *  YEARS  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  +=  12  *  YEARS  +  1;	  months    +=    12    *    years    +    1;    days    +=    12    *    years    +    1;    	non-compiled	[CE]  cannot  find  symbol  YEARS	131	None	replace
281	[BUG]  [BUGGY]  Days  +=  12  *  years  +  1;  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Days  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  +=  12  *  years  +  1;	  months    +=    12    *    years    +    1;    days    +=    12    *    years    +    1;    	non-compiled	[CE]  cannot  find  symbol  Days	131	None	replace
282	[BUG]  [BUGGY]  Years  +=  12  *  days;  [CE]  cannot  find  symbol  Years  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Years  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Years  +=  12  *  days;	  months    +=    12    *    days;    Years    +=    12    *    days;    	non-compiled	[CE]  cannot  find  symbol  Years	215	None	replace
283	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  +=  12  *  days;	  months    +=    12    *    days;    Years    +=    12    *    days;    	compilable	  [FE]  ComparisonFailure  	215	2	replace
284	[BUG]  [BUGGY]  years  +=  12  *  days;  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  12  *  days;	  months    +=    12    *    days;    Years    +=    12    *    days;    	compilable	  [FE]  ComparisonFailure  	215	2	replace
285	[BUG]  [BUGGY]  Months  +=  12  *  days;  [CE]  cannot  find  symbol  Months  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  +=  12  *  days;	  months    +=    12    *    days;    Years    +=    12    *    days;    	non-compiled	[CE]  cannot  find  symbol  Months	215	None	replace
286	[BUG]  [BUGGY]  Months  +=  365  *  years;  [CE]  cannot  find  symbol  Months  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  +=  365  *  years;	  months    +=    365    *    years;    Months    +=    365    *    years;    	non-compiled	[CE]  cannot  find  symbol  Months	75	None	replace
287	[BUG]  [BUGGY]  Months  +=  365  *  YEARS;  [CE]  cannot  find  symbol  Months  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  +=  365  *  YEARS;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  +=  365  *  YEARS;	  months    +=    365    *    years;    Months    +=    365    *    years;    	non-compiled	[CE]  cannot  find  symbol  Months	75	None	replace
288	[BUG]  [BUGGY]  Months  +=  365  *  months;  [CE]  cannot  find  symbol  Months  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  +=  365  *  months;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  +=  365  *  months;	  months    +=    365    *    years;    Months    +=    365    *    years;    	non-compiled	[CE]  cannot  find  symbol  Months	75	None	replace
289	[BUG]  [BUGGY]  Month  months  +=  12  *  days;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  months  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  months  +=  12  *  days;	  months    +=    12    *    days;    Month    months    +=    12    *    days;    	non-compiled	[CE]  ';'  expected	117	None	replace
290	[BUG]  [BUGGY]  Month  months  +=  12  *  Days;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  months  +=  12  *  Days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  months  +=  12  *  Days;	  months    +=    12    *    days;    Month    months    +=    12    *    days;    	non-compiled	[CE]  ';'  expected	117	None	replace
291	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  years  /  2;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  12  *  years  /  2;	  months    +=    12    *    years    /    1;    	compilable	  [FE]  ComparisonFailure  	153	2	replace
292	[BUG]  [BUGGY]  months  +=  12  *  years  /  2;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  years  /  2;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  years  /  2;	  months    +=    12    *    years    /    1;    	compilable	  [FE]  ComparisonFailure  	153	2	replace
293	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  /  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  12  *  days  /  1;	  months    +=    12    *    years    /    1;    	compilable	  [FE]  ComparisonFailure  	153	2	replace
294	[BUG]  [BUGGY]  months  +=  12  *  days  /  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  /  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  days  /  1;	  months    +=    12    *    years    /    1;    	compilable	  [FE]  ComparisonFailure  	153	2	replace
295	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  years  /  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  365  *  years  /  1;	  months    +=    12    *    years    /    1;    	compilable	  [FE]  ComparisonFailure  	153	2	replace
296	[BUG]  [BUGGY]  months  +=  365  *  years  /  1;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  years  /  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  years  /  1;	  months    +=    12    *    years    /    1;    	compilable	  [FE]  ComparisonFailure  	153	2	replace
297	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  Days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	194	None	replace
298	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [CE]  cannot  find  symbol  Months  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  Days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	194	None	replace
299	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	197	2	replace
300	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	197	2	replace
301	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        years        +        1;        months    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	125	2	add
302	[BUG]  [BUGGY]  months    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        years        +        1;        months    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	125	2	add
303	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        years        +        1;        months    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	125	2	add
304	[BUG]  [BUGGY]  months    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        years        +        1;        months    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	125	2	add
305	[BUG]  [BUGGY]  months    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  Month  months  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  Month  months  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        years        +        1;        months    +=    12    *    years    +    1;    Month  months  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;	  	non-compiled	[CE]  ';'  expected	125	None	add
306	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        years        +        1;        months    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	125	2	add
307	[BUG]  [BUGGY]  months    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        years        +        1;        months    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	125	2	add
308	[BUG]  [BUGGY]  months    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  Months  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  [CE]  cannot  find  symbol  Months  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  Months  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        years        +        1;        months    +=    12    *    years    +    1;    Months  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Months	125	None	add
309	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);	  days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    	compilable	  [FE]  ComparisonFailure  	212	2	replace
310	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);	  days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    	compilable	  [FE]  ComparisonFailure  	212	2	replace
311	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  [CE]  cannot  find  symbol  YEARS  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);	  days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    	non-compiled	[CE]  cannot  find  symbol  YEARS	212	None	replace
312	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  days;  months  +=  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    365    *    days;    months  +=  365  *  days;	  	compilable	  [FE]  ComparisonFailure  	54	1	add
313	[BUG]  [BUGGY]  months  +=  365  *  days;  months  +=  365  *  days;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  days;  months  +=  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    days;    months  +=  365  *  days;	  	compilable	  [FE]  ComparisonFailure  	54	1	add
314	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  days;  years  +=  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    365    *    days;    years  +=  365  *  days;	  	compilable	  [FE]  ComparisonFailure  	54	1	add
315	[BUG]  [BUGGY]  months  +=  365  *  days;  years  +=  365  *  days;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  days;  years  +=  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    days;    years  +=  365  *  days;	  	compilable	  [FE]  ComparisonFailure  	54	1	add
316	[BUG]  [BUGGY]  months  +=  365  *  days;  Months  +=  365  *  days;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  days;  Months  +=  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    days;    Months  +=  365  *  days;	  	non-compiled	[CE]  cannot  find  symbol  Months	54	None	add
317	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  days;  days  +=  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    365    *    days;    days  +=  365  *  days;	  	compilable	  [FE]  ComparisonFailure  	54	1	add
318	[BUG]  [BUGGY]  months  +=  365  *  days;  days  +=  365  *  days;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  days;  days  +=  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    days;    days  +=  365  *  days;	  	compilable	  [FE]  ComparisonFailure  	54	1	add
319	[BUG]  [BUGGY]  months  +=  365  *  days;  Month  months  +=  365  *  days;  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  days;  Month  months  +=  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    days;    Month  months  +=  365  *  days;	  	non-compiled	[CE]  ';'  expected	54	None	add
320	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    days  +=  365  *  years;  months  +=  365  *  years;  days  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        365        *        years;        days    +=    365    *    years;    months  +=  365  *  years;  days  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	76	2	add
321	[BUG]  [BUGGY]  months    +=    365    *    years;    days  +=  365  *  years;  months  +=  365  *  years;  days  +=  365  *  years;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    days  +=  365  *  years;  months  +=  365  *  years;  days  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        365        *        years;        days    +=    365    *    years;    months  +=  365  *  years;  days  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	76	2	add
322	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    days  +=  365  *  years;  years  +=  365  *  years;  days  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        365        *        years;        days    +=    365    *    years;    years  +=  365  *  years;  days  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	76	2	add
323	[BUG]  [BUGGY]  months    +=    365    *    years;    days  +=  365  *  years;  years  +=  365  *  years;  days  +=  365  *  years;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    days  +=  365  *  years;  years  +=  365  *  years;  days  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        365        *        years;        days    +=    365    *    years;    years  +=  365  *  years;  days  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	76	2	add
324	[BUG]  [BUGGY]  months    +=    365    *    years;    days  +=  365  *  years;  Month  months  +=  365  *  years;  days  +=  365  *  years;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    days  +=  365  *  years;  Month  months  +=  365  *  years;  days  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        365        *        years;        days    +=    365    *    years;    Month  months  +=  365  *  years;  days  +=  365  *  years;	  	non-compiled	[CE]  ';'  expected	76	None	add
325	[BUG]  [BUGGY]  months    +=    365    *    years;    days  +=  365  *  years;  Months  +=  365  *  years;  days  +=  365  *  years;  [CE]  cannot  find  symbol  Months  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    days  +=  365  *  years;  Months  +=  365  *  years;  days  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        365        *        years;        days    +=    365    *    years;    Months  +=  365  *  years;  days  +=  365  *  years;	  	non-compiled	[CE]  cannot  find  symbol  Months	76	None	add
326	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    days  +=  365  *  years;  days  +=  365  *  years;  days  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        365        *        years;        days    +=    365    *    years;    days  +=  365  *  years;  days  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	76	2	add
327	[BUG]  [BUGGY]  months    +=    365    *    years;    days  +=  365  *  years;  days  +=  365  *  years;  days  +=  365  *  years;  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    days  +=  365  *  years;  days  +=  365  *  years;  days  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        365        *        years;        days    +=    365    *    years;    days  +=  365  *  years;  days  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	76	2	add
328	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
329	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
330	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
331	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
332	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	non-compiled	[CE]  cannot  find  symbol  Days	15	None	add
333	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
334	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
335	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
336	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
337	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
338	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
339	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
340	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
341	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
342	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
343	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
344	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
345	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
346	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
347	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    365);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  ')'  expected	20	None	replace
348	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  days  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  365  *  days  +  1;	  months    +=    12    *    days    +    1;    	compilable	  [FE]  ComparisonFailure  	119	2	replace
349	[BUG]  [BUGGY]  months  +=  365  *  days  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  days  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  days  +  1;	  months    +=    12    *    days    +    1;    	compilable	  [FE]  ComparisonFailure  	119	2	replace
350	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  days  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  24  *  days  +  1;	  months    +=    12    *    days    +    1;    	compilable	  [FE]  ComparisonFailure  	119	2	replace
351	[BUG]  [BUGGY]  months  +=  24  *  days  +  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  days  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  days  +  1;	  months    +=    12    *    days    +    1;    	compilable	  [FE]  ComparisonFailure  	119	2	replace
352	[BUG]  [BUGGY]  if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAndCorrect(start,  end  [CE]  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAndCorrect(start,  end  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAndCorrect(start,  end	          if(!Token.containsTokenWithValue(tokens,    M))    {    for(int    y    =    start.get(Calendar.YEAR);    y    +=    y.get(Calendar.HOUR_OF_DAY);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  	231	None	replace
353	[BUG]  [BUGGY]  if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAnd  [CE]  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAnd  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAnd	          if(!Token.containsTokenWithValue(tokens,    M))    {    for(int    y    =    start.get(Calendar.YEAR);    y    +=    y.get(Calendar.HOUR_OF_DAY);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  	231	None	replace
354	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAndCorrect(start,  end,  [CE]  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAndCorrect(start,  end,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	if(!Token.containsTokenWithValue(tokens,  S))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAndCorrect(start,  end,	          if(!Token.containsTokenWithValue(tokens,    M))    {    for(int    y    =    start.get(Calendar.YEAR);    y    +=    y.get(Calendar.HOUR_OF_DAY);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  	231	None	replace
355	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);	          days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	34	2	replace
356	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);	          days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	34	2	replace
357	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	216	1	add
358	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	216	1	add
359	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	216	1	add
360	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	216	1	add
361	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	216	1	add
362	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	216	1	add
363	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	216	1	add
364	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	216	1	add
365	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	216	None	add
366	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
367	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
368	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
369	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
370	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
371	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
372	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
373	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
374	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	85	2	add
375	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	85	2	add
376	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  +=  12  *  365;	  months    +=    12    *    365;    years    +=    12    *    365;    	compilable	  [FE]  ComparisonFailure  	144	2	replace
377	[BUG]  [BUGGY]  years  +=  12  *  365;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  12  *  365;	  months    +=    12    *    365;    years    +=    12    *    365;    	compilable	  [FE]  ComparisonFailure  	144	2	replace
378	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  +=  12  *  365;	  months    +=    12    *    365;    years    +=    12    *    365;    	compilable	  [FE]  ComparisonFailure  	144	2	replace
379	[BUG]  [BUGGY]  days  +=  12  *  365;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  +=  12  *  365;	  months    +=    12    *    365;    years    +=    12    *    365;    	compilable	  [FE]  ComparisonFailure  	144	2	replace
380	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	28	2	replace
381	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	28	2	replace
382	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	28	2	replace
383	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	28	2	replace
384	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	28	2	replace
385	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	28	2	replace
386	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
387	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
388	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
389	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
390	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
391	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
392	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	175	None	add
393	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
394	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
395	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	43	2	replace
396	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	43	2	replace
397	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	43	2	replace
398	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	43	2	replace
399	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	43	2	replace
400	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	43	2	replace
401	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	43	2	replace
402	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	43	2	replace
403	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	251	1	add
404	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	251	1	add
405	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	251	1	add
406	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	251	1	add
407	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	non-compiled	[CE]  ';'  expected	251	None	add
408	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	251	1	add
409	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	251	1	add
410	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	non-compiled	[CE]  cannot  find  symbol	251	None	add
411	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    months  +=  12  *  365;  months  +=  12  *  365;  months  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        365;        months    +=    12    *    365;    months  +=  12  *  365;  months  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	141	2	add
412	[BUG]  [BUGGY]  months    +=    12    *    365;    months  +=  12  *  365;  months  +=  12  *  365;  months  +=  12  *  365;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    months  +=  12  *  365;  months  +=  12  *  365;  months  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        365;        months    +=    12    *    365;    months  +=  12  *  365;  months  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	141	2	add
413	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    months  +=  12  *  365;  years  +=  12  *  365;  months  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        365;        months    +=    12    *    365;    years  +=  12  *  365;  months  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	141	2	add
414	[BUG]  [BUGGY]  months    +=    12    *    365;    months  +=  12  *  365;  years  +=  12  *  365;  months  +=  12  *  365;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    months  +=  12  *  365;  years  +=  12  *  365;  months  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        365;        months    +=    12    *    365;    years  +=  12  *  365;  months  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	141	2	add
415	[BUG]  [BUGGY]  months    +=    12    *    365;    months  +=  12  *  365;  Months  +=  12  *  365;  months  +=  12  *  365;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    months  +=  12  *  365;  Months  +=  12  *  365;  months  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        365;        months    +=    12    *    365;    Months  +=  12  *  365;  months  +=  12  *  365;	  	non-compiled	[CE]  cannot  find  symbol  Months	141	None	add
416	[BUG]  [BUGGY]  months    +=    12    *    365;    months  +=  12  *  365;  Month  months  +=  12  *  365;  months  +=  12  *  365;  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    months  +=  12  *  365;  Month  months  +=  12  *  365;  months  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        365;        months    +=    12    *    365;    Month  months  +=  12  *  365;  months  +=  12  *  365;	  	non-compiled	[CE]  ';'  expected	141	None	add
417	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    months  +=  12  *  365;  days  +=  12  *  365;  months  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        365;        months    +=    12    *    365;    days  +=  12  *  365;  months  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	141	2	add
418	[BUG]  [BUGGY]  months    +=    12    *    365;    months  +=  12  *  365;  days  +=  12  *  365;  months  +=  12  *  365;  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    months  +=  12  *  365;  days  +=  12  *  365;  months  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        365;        months    +=    12    *    365;    days  +=  12  *  365;  months  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	141	2	add
419	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	254	2	replace
420	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	254	2	replace
421	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	254	2	replace
422	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	254	2	replace
423	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	254	2	replace
424	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	254	2	replace
425	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	254	2	replace
426	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	254	2	replace
427	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	4	2	replace
428	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	4	2	replace
429	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	4	2	replace
430	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	4	2	replace
431	[BUG]  [BUGGY]  value  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);  [CE]  cannot  find  symbol  value  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  value  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	value  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);	  y    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_YEAR);    	non-compiled	[CE]  cannot  find  symbol  value	180	None	replace
432	[BUG]  [BUGGY]  Month  endMillis  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  endMillis  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  endMillis  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);	  y    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_YEAR);    	non-compiled	[CE]  ';'  expected	180	None	replace
433	[BUG]  [BUGGY]  Month  endMillis  =  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  endMillis  =  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  endMillis  =  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);	  y    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_YEAR);    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
434	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    	compilable	  [FE]  ComparisonFailure  	92	2	replace
435	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    	compilable	  [FE]  ComparisonFailure  	92	2	replace
436	[BUG]  [BUGGY]  For(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  [CE]  '.class'  expected  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  For(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	For(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);	  if(!Token.containsTokenWithValue(tokens,    M))    {    for(int    y    =    start.get(Calendar.YEAR);    y    +=    y.get(Calendar.HOUR_OF_DAY);    }    	non-compiled	[CE]  '.class'  expected	205	None	replace
437	[BUG]  [BUGGY]  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  [CE]  ')'  expected  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);	  if(!Token.containsTokenWithValue(tokens,    M))    {    for(int    y    =    start.get(Calendar.YEAR);    y    +=    y.get(Calendar.HOUR_OF_DAY);    }    	non-compiled	[CE]  ')'  expected	205	None	replace
438	[BUG]  [BUGGY]  For(int  y  =  start.get(Calendar.YEAR);  y  +=  end.get(Calendar.HOUR_OF_DAY);  [CE]  '.class'  expected  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  For(int  y  =  start.get(Calendar.YEAR);  y  +=  end.get(Calendar.HOUR_OF_DAY);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	For(int  y  =  start.get(Calendar.YEAR);  y  +=  end.get(Calendar.HOUR_OF_DAY);	  if(!Token.containsTokenWithValue(tokens,    M))    {    for(int    y    =    start.get(Calendar.YEAR);    y    +=    y.get(Calendar.HOUR_OF_DAY);    }    	non-compiled	[CE]  '.class'  expected	205	None	replace
439	[BUG]  [BUGGY]  For(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  For(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	For(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  }	  if(!Token.containsTokenWithValue(tokens,    M))    {    for(int    y    =    start.get(Calendar.YEAR);    y    +=    y.get(Calendar.HOUR_OF_DAY);    }    	non-compiled	[CE]  	205	None	replace
440	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
441	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
442	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
443	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
444	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
445	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
446	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
447	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
448	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	3	None	add
449	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    days  +=  12  *  365;  months  +=  12  *  365;  days  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        365;        days    +=    12    *    365;    months  +=  12  *  365;  days  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	146	2	add
450	[BUG]  [BUGGY]  months    +=    12    *    365;    days  +=  12  *  365;  months  +=  12  *  365;  days  +=  12  *  365;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    days  +=  12  *  365;  months  +=  12  *  365;  days  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        365;        days    +=    12    *    365;    months  +=  12  *  365;  days  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	146	2	add
451	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    days  +=  12  *  365;  years  +=  12  *  365;  days  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        365;        days    +=    12    *    365;    years  +=  12  *  365;  days  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	146	2	add
452	[BUG]  [BUGGY]  months    +=    12    *    365;    days  +=  12  *  365;  years  +=  12  *  365;  days  +=  12  *  365;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    days  +=  12  *  365;  years  +=  12  *  365;  days  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        365;        days    +=    12    *    365;    years  +=  12  *  365;  days  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	146	2	add
453	[BUG]  [BUGGY]  months    +=    12    *    365;    days  +=  12  *  365;  Month  months  +=  12  *  365;  days  +=  12  *  365;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    days  +=  12  *  365;  Month  months  +=  12  *  365;  days  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        365;        days    +=    12    *    365;    Month  months  +=  12  *  365;  days  +=  12  *  365;	  	non-compiled	[CE]  ';'  expected	146	None	add
454	[BUG]  [BUGGY]  months    +=    12    *    365;    days  +=  12  *  365;  Months  +=  12  *  365;  days  +=  12  *  365;  [CE]  cannot  find  symbol  Months  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    days  +=  12  *  365;  Months  +=  12  *  365;  days  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        365;        days    +=    12    *    365;    Months  +=  12  *  365;  days  +=  12  *  365;	  	non-compiled	[CE]  cannot  find  symbol  Months	146	None	add
455	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    days  +=  12  *  365;  days  +=  12  *  365;  days  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        365;        days    +=    12    *    365;    days  +=  12  *  365;  days  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	146	2	add
456	[BUG]  [BUGGY]  months    +=    12    *    365;    days  +=  12  *  365;  days  +=  12  *  365;  days  +=  12  *  365;  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    days  +=  12  *  365;  days  +=  12  *  365;  days  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        365;        days    +=    12    *    365;    days  +=  12  *  365;  days  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	146	2	add
457	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	7	2	replace
458	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	7	2	replace
459	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	104	1	add
460	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	104	1	add
461	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	104	1	add
462	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	104	1	add
463	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	104	2	add
464	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	104	2	add
465	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	104	1	add
466	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	104	1	add
467	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    days);    Month  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  ';'  expected	104	None	add
468	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	166	2	replace
469	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	166	2	replace
470	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	218	1	add
471	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	218	1	add
472	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	218	1	add
473	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	218	1	add
474	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	218	1	add
475	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	218	1	add
476	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	218	1	add
477	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	218	1	add
478	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	218	1	add
479	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	218	1	add
480	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
481	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
482	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
483	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
484	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
485	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
486	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
487	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
488	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
489	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
490	[BUG]  [BUGGY]  years  +=  24  *  tokens;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  24  *  tokens;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  24  *  tokens;	  months    +=    24    *    years;    years    +=    24    *    years;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	99	None	replace
491	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  24  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  +=  24  *  days;	  months    +=    24    *    years;    years    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	99	2	replace
492	[BUG]  [BUGGY]  years  +=  24  *  days;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  24  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  24  *  days;	  months    +=    24    *    years;    years    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	99	2	replace
493	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  24  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  +=  24  *  hours;	  months    +=    24    *    years;    years    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	99	2	replace
494	[BUG]  [BUGGY]  years  +=  24  *  hours;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  24  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  24  *  hours;	  months    +=    24    *    years;    years    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	99	2	replace
495	[BUG]  [BUGGY]  years  +=  24  *  y;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  24  *  y;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  24  *  y;	  months    +=    24    *    years;    years    +=    24    *    years;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	99	None	replace
496	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	182	2	replace
497	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	182	2	replace
498	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	182	2	replace
499	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	182	2	replace
500	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	247	1	add
501	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	247	1	add
502	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	247	1	add
503	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	247	1	add
504	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	247	None	add
505	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	247	1	add
506	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	247	1	add
507	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	247	1	add
508	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	247	1	add
509	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  hours;  months  +=  365  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    365    *    hours;    months  +=  365  *  hours;	  	compilable	  [FE]  ComparisonFailure  	190	1	add
510	[BUG]  [BUGGY]  months  +=  365  *  hours;  months  +=  365  *  hours;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  hours;  months  +=  365  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    hours;    months  +=  365  *  hours;	  	compilable	  [FE]  ComparisonFailure  	190	1	add
511	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  hours;  years  +=  365  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    365    *    hours;    years  +=  365  *  hours;	  	compilable	  [FE]  ComparisonFailure  	190	1	add
512	[BUG]  [BUGGY]  months  +=  365  *  hours;  years  +=  365  *  hours;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  hours;  years  +=  365  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    hours;    years  +=  365  *  hours;	  	compilable	  [FE]  ComparisonFailure  	190	1	add
513	[BUG]  [BUGGY]  months  +=  365  *  hours;  Months  +=  365  *  hours;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  hours;  Months  +=  365  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    hours;    Months  +=  365  *  hours;	  	non-compiled	[CE]  cannot  find  symbol  Months	190	None	add
514	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  hours;  days  +=  365  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    365    *    hours;    days  +=  365  *  hours;	  	compilable	  [FE]  ComparisonFailure  	190	1	add
515	[BUG]  [BUGGY]  months  +=  365  *  hours;  days  +=  365  *  hours;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  hours;  days  +=  365  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    hours;    days  +=  365  *  hours;	  	compilable	  [FE]  ComparisonFailure  	190	1	add
516	[BUG]  [BUGGY]  months  +=  365  *  hours;  Month  months  +=  365  *  hours;  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  hours;  Month  months  +=  365  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    hours;    Month  months  +=  365  *  hours;	  	non-compiled	[CE]  ';'  expected	190	None	add
517	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	209	1	add
518	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	209	1	add
519	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	209	1	add
520	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	209	1	add
521	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	209	1	add
522	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	209	1	add
523	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	209	1	add
524	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	209	1	add
525	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	209	1	add
526	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	209	1	add
527	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	108	2	add
528	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	108	2	add
529	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	108	None	add
530	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	108	2	add
531	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	108	2	add
532	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	108	2	add
533	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	108	2	add
534	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	220	1	add
535	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	220	1	add
536	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	220	1	add
537	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	220	1	add
538	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	220	1	add
539	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	220	1	add
540	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	220	1	add
541	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	220	1	add
542	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	220	1	add
543	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	220	1	add
544	[BUG]  [BUGGY]  Month  endMillis  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  endMillis  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  endMillis  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);	  year    +=    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  ';'  expected	239	None	replace
545	[BUG]  [BUGGY]  Year  endMillis  =  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Year  endMillis  =  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Year  endMillis  =  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);	  year    +=    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol	239	None	replace
546	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	181	1	add
547	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	181	1	add
548	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	181	2	add
549	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	181	2	add
550	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	181	1	add
551	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	181	1	add
552	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	181	1	add
553	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	181	1	add
554	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	181	2	add
555	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	181	2	add
556	[BUG]  [BUGGY]  value  +=  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);  [CE]  cannot  find  symbol  value  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  value  +=  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	value  +=  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);	  y    +=    end.get(Calendar.YEAR)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  find  symbol  value	120	None	replace
557	[BUG]  [BUGGY]  Month  endMillis  +=  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  endMillis  +=  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  endMillis  +=  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);	  y    +=    end.get(Calendar.YEAR)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	120	None	replace
558	[BUG]  [BUGGY]  month  +=  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);  [CE]  cannot  find  symbol  month  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  month  +=  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	month  +=  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);	  y    +=    end.get(Calendar.YEAR)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  find  symbol  month	120	None	replace
559	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	177	2	replace
560	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	177	2	replace
561	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  365;  months  +=  24  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    24    *    365;    months  +=  24  *  365;	  	compilable	  [FE]  ComparisonFailure  	82	2	add
562	[BUG]  [BUGGY]  months  +=  24  *  365;  months  +=  24  *  365;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  365;  months  +=  24  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    365;    months  +=  24  *  365;	  	compilable	  [FE]  ComparisonFailure  	82	2	add
563	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  365;  years  +=  24  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    24    *    365;    years  +=  24  *  365;	  	compilable	  [FE]  ComparisonFailure  	82	2	add
564	[BUG]  [BUGGY]  months  +=  24  *  365;  years  +=  24  *  365;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  365;  years  +=  24  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    365;    years  +=  24  *  365;	  	compilable	  [FE]  ComparisonFailure  	82	2	add
565	[BUG]  [BUGGY]  months  +=  24  *  365;  Months  +=  24  *  365;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  365;  Months  +=  24  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    365;    Months  +=  24  *  365;	  	non-compiled	[CE]  cannot  find  symbol  Months	82	None	add
566	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  365;  days  +=  24  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    24    *    365;    days  +=  24  *  365;	  	compilable	  [FE]  ComparisonFailure  	82	2	add
567	[BUG]  [BUGGY]  months  +=  24  *  365;  days  +=  24  *  365;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  365;  days  +=  24  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    365;    days  +=  24  *  365;	  	compilable	  [FE]  ComparisonFailure  	82	2	add
568	[BUG]  [BUGGY]  months  +=  24  *  365;  Years  +=  24  *  365;  [CE]  cannot  find  symbol  Years  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  365;  Years  +=  24  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    365;    Years  +=  24  *  365;	  	non-compiled	[CE]  cannot  find  symbol  Years	82	None	add
569	[BUG]  [BUGGY]  Month  endMillis  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY  -  1);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  endMillis  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY  -  1);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  endMillis  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY  -  1);	  Month    endMillis    +=    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  ';'  expected	123	None	replace
570	[BUG]  [BUGGY]  Month  endMillis  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY,  y);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  endMillis  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY,  y);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  endMillis  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY,  y);	  Month    endMillis    +=    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  ';'  expected	123	None	replace
571	[BUG]  [BUGGY]  Month  endMillis  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY)+  1;  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  endMillis  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY)+  1;  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  endMillis  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY)+  1;	  Month    endMillis    +=    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  ';'  expected	123	None	replace
572	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  1;  months  +=  12  *  days  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    days    +    1;    months  +=  12  *  days  +  1;	  	compilable	  [FE]  ComparisonFailure  	118	2	add
573	[BUG]  [BUGGY]  months  +=  12  *  days  +  1;  months  +=  12  *  days  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  1;  months  +=  12  *  days  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    days    +    1;    months  +=  12  *  days  +  1;	  	compilable	  [FE]  ComparisonFailure  	118	2	add
574	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  1;  years  +=  12  *  days  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    days    +    1;    years  +=  12  *  days  +  1;	  	compilable	  [FE]  ComparisonFailure  	118	2	add
575	[BUG]  [BUGGY]  months  +=  12  *  days  +  1;  years  +=  12  *  days  +  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  1;  years  +=  12  *  days  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    days    +    1;    years  +=  12  *  days  +  1;	  	compilable	  [FE]  ComparisonFailure  	118	2	add
576	[BUG]  [BUGGY]  months  +=  12  *  days  +  1;  Months  +=  12  *  days  +  1;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  1;  Months  +=  12  *  days  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    days    +    1;    Months  +=  12  *  days  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Months	118	None	add
577	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  1;  days  +=  12  *  days  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    days    +    1;    days  +=  12  *  days  +  1;	  	compilable	  [FE]  ComparisonFailure  	118	2	add
578	[BUG]  [BUGGY]  months  +=  12  *  days  +  1;  days  +=  12  *  days  +  1;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  1;  days  +=  12  *  days  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    days    +    1;    days  +=  12  *  days  +  1;	  	compilable	  [FE]  ComparisonFailure  	118	2	add
579	[BUG]  [BUGGY]  months  +=  12  *  days  +  1;  Month  months  +=  12  *  days  +  1;  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  1;  Month  months  +=  12  *  days  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    days    +    1;    Month  months  +=  12  *  days  +  1;	  	non-compiled	[CE]  ';'  expected	118	None	add
580	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);	  	compilable	  [FE]  ComparisonFailure  	211	1	add
581	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);	  	compilable	  [FE]  ComparisonFailure  	211	1	add
582	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);	  	compilable	  [FE]  ComparisonFailure  	211	1	add
583	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);	  	compilable	  [FE]  ComparisonFailure  	211	1	add
584	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	211	1	add
585	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	211	1	add
586	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [CE]  cannot  find  symbol  Days  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	211	None	add
587	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);	  	compilable	  [FE]  ComparisonFailure  	211	1	add
588	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);	  	compilable	  [FE]  ComparisonFailure  	211	1	add
589	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    days  +=  24  *  years;  months  +=  24  *  years;  days  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        24        *        years;        days    +=    24    *    years;    months  +=  24  *  years;  days  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	101	2	add
590	[BUG]  [BUGGY]  months    +=    24    *    years;    days  +=  24  *  years;  months  +=  24  *  years;  days  +=  24  *  years;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    days  +=  24  *  years;  months  +=  24  *  years;  days  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        24        *        years;        days    +=    24    *    years;    months  +=  24  *  years;  days  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	101	2	add
591	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    days  +=  24  *  years;  years  +=  24  *  years;  days  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        24        *        years;        days    +=    24    *    years;    years  +=  24  *  years;  days  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	101	2	add
592	[BUG]  [BUGGY]  months    +=    24    *    years;    days  +=  24  *  years;  years  +=  24  *  years;  days  +=  24  *  years;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    days  +=  24  *  years;  years  +=  24  *  years;  days  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        24        *        years;        days    +=    24    *    years;    years  +=  24  *  years;  days  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	101	2	add
593	[BUG]  [BUGGY]  months    +=    24    *    years;    days  +=  24  *  years;  Month  months  +=  24  *  years;  days  +=  24  *  years;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    days  +=  24  *  years;  Month  months  +=  24  *  years;  days  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        24        *        years;        days    +=    24    *    years;    Month  months  +=  24  *  years;  days  +=  24  *  years;	  	non-compiled	[CE]  ';'  expected	101	None	add
594	[BUG]  [BUGGY]  months    +=    24    *    years;    days  +=  24  *  years;  Months  +=  24  *  years;  days  +=  24  *  years;  [CE]  cannot  find  symbol  Months  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    days  +=  24  *  years;  Months  +=  24  *  years;  days  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        24        *        years;        days    +=    24    *    years;    Months  +=  24  *  years;  days  +=  24  *  years;	  	non-compiled	[CE]  cannot  find  symbol  Months	101	None	add
595	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    days  +=  24  *  years;  days  +=  24  *  years;  days  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        24        *        years;        days    +=    24    *    years;    days  +=  24  *  years;  days  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	101	2	add
596	[BUG]  [BUGGY]  months    +=    24    *    years;    days  +=  24  *  years;  days  +=  24  *  years;  days  +=  24  *  years;  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    days  +=  24  *  years;  days  +=  24  *  years;  days  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        24        *        years;        days    +=    24    *    years;    days  +=  24  *  years;  days  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	101	2	add
597	[BUG]  [BUGGY]  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Months    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	non-compiled	[CE]  ';'  expected	183	None	replace
598	[BUG]  [BUGGY]  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Months    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	non-compiled	[CE]  ';'  expected	183	None	replace
599	[BUG]  [BUGGY]  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Months    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	non-compiled	[CE]  ';'  expected	183	None	replace
600	[BUG]  [BUGGY]  Tag  y  =  start.get(Calendar.YEAR)-  end.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Tag  y  =  start.get(Calendar.YEAR)-  end.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Tag  y  =  start.get(Calendar.YEAR)-  end.get(Calendar.HOUR_OF_DAY);	  Tag    y    =    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	234	None	replace
601	[BUG]  [BUGGY]  Tag  y  =  end.get(Calendar.YEAR)-  begin.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Tag  y  =  end.get(Calendar.YEAR)-  begin.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Tag  y  =  end.get(Calendar.YEAR)-  begin.get(Calendar.HOUR_OF_DAY);	  Tag    y    =    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	234	None	replace
602	[BUG]  [BUGGY]  Tag  y  =  end.get(Calendar.YEAR)-  this.start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Tag  y  =  end.get(Calendar.YEAR)-  this.start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Tag  y  =  end.get(Calendar.YEAR)-  this.start.get(Calendar.HOUR_OF_DAY);	  Tag    y    =    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	234	None	replace
603	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  +=  24  *  years;	  months    +=    24    *    years;    days    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	102	2	replace
604	[BUG]  [BUGGY]  days  +=  24  *  years;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  +=  24  *  years;	  months    +=    24    *    years;    days    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	102	2	replace
605	[BUG]  [BUGGY]  days  +=  24  *  YEARS;  [CE]  cannot  find  symbol  YEARS  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  24  *  YEARS;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  +=  24  *  YEARS;	  months    +=    24    *    years;    days    +=    24    *    years;    	non-compiled	[CE]  cannot  find  symbol  YEARS	102	None	replace
606	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  24  *  months;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  +=  24  *  months;	  months    +=    24    *    years;    days    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	102	2	replace
607	[BUG]  [BUGGY]  days  +=  24  *  months;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  24  *  months;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  +=  24  *  months;	  months    +=    24    *    years;    days    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	102	2	replace
608	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	48	1	add
609	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	48	1	add
610	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	48	1	add
611	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	48	1	add
612	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	48	1	add
613	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	48	1	add
614	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	48	1	add
615	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	48	1	add
616	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	48	None	add
617	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  [CE]  ')'  expected  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,	          Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    	non-compiled	[CE]  ')'  expected	172	None	replace
618	[BUG]  [BUGGY]  Month  months  +=  365  *  years;  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  months  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  months  +=  365  *  years;	  months    +=    365    *    years;    Month    months    +=    365    *    years;    	non-compiled	[CE]  ';'  expected	167	None	replace
619	[BUG]  [BUGGY]  Month  months  +=  365  *  YEARS;  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  months  +=  365  *  YEARS;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  months  +=  365  *  YEARS;	  months    +=    365    *    years;    Month    months    +=    365    *    years;    	non-compiled	[CE]  ';'  expected	167	None	replace
620	[BUG]  [BUGGY]  Month  months  +=  365  *  days;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  months  +=  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  months  +=  365  *  days;	  months    +=    365    *    years;    Month    months    +=    365    *    years;    	non-compiled	[CE]  ';'  expected	167	None	replace
621	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
622	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
623	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
624	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
625	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
626	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
627	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
628	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
629	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
630	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
631	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Months  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  Months    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Months	22	None	replace
632	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  years  /  1;  months  +=  12  *  years  /  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    years    /    1;    months  +=  12  *  years  /  1;	  	compilable	  [FE]  ComparisonFailure  	152	2	add
633	[BUG]  [BUGGY]  months  +=  12  *  years  /  1;  months  +=  12  *  years  /  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  years  /  1;  months  +=  12  *  years  /  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    years    /    1;    months  +=  12  *  years  /  1;	  	compilable	  [FE]  ComparisonFailure  	152	2	add
634	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  years  /  1;  years  +=  12  *  years  /  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    years    /    1;    years  +=  12  *  years  /  1;	  	compilable	  [FE]  ComparisonFailure  	152	2	add
635	[BUG]  [BUGGY]  months  +=  12  *  years  /  1;  years  +=  12  *  years  /  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  years  /  1;  years  +=  12  *  years  /  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    years    /    1;    years  +=  12  *  years  /  1;	  	compilable	  [FE]  ComparisonFailure  	152	2	add
636	[BUG]  [BUGGY]  months  +=  12  *  years  /  1;  Months  +=  12  *  years  /  1;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  years  /  1;  Months  +=  12  *  years  /  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    years    /    1;    Months  +=  12  *  years  /  1;	  	non-compiled	[CE]  cannot  find  symbol  Months	152	None	add
637	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  years  /  1;  days  +=  12  *  years  /  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    years    /    1;    days  +=  12  *  years  /  1;	  	compilable	  [FE]  ComparisonFailure  	152	2	add
638	[BUG]  [BUGGY]  months  +=  12  *  years  /  1;  days  +=  12  *  years  /  1;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  years  /  1;  days  +=  12  *  years  /  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    years    /    1;    days  +=  12  *  years  /  1;	  	compilable	  [FE]  ComparisonFailure  	152	2	add
639	[BUG]  [BUGGY]  months  +=  12  *  years  /  1;  Years  -=  12  *  years  /  1;  [CE]  cannot  find  symbol  Years  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  years  /  1;  Years  -=  12  *  years  /  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    years    /    1;    Years  -=  12  *  years  /  1;	  	non-compiled	[CE]  cannot  find  symbol  Years	152	None	add
640	[BUG]  [BUGGY]  value  +=  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  value  +=  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	value  +=  start.get(Calendar.HOUR_OF_DAY);	  value    +=    end.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol  value	164	None	replace
641	[BUG]  [BUGGY]  m  +=  end.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  assign  a  value  to  final  variable  m  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  m  +=  end.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	m  +=  end.get(Calendar.HOUR_OF_DAY);	  value    +=    end.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  m	164	None	replace
642	[BUG]  [BUGGY]  ValueUtils.copyValue(end,  values);  [CE]  cannot  find  symbol  values  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.copyValue(end,  values);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.copyValue(end,  values);	  value    +=    end.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol  values	164	None	replace
643	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    	compilable	  [FE]  ComparisonFailure  	88	2	replace
644	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    	compilable	  [FE]  ComparisonFailure  	88	2	replace
645	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    	compilable	  [FE]  ComparisonFailure  	88	2	replace
646	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    	compilable	  [FE]  ComparisonFailure  	88	2	replace
647	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    	compilable	  [FE]  ComparisonFailure  	88	2	replace
648	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    	compilable	  [FE]  ComparisonFailure  	88	2	replace
649	[BUG]  [BUGGY]  m  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [CE]  cannot  assign  a  value  to  final  variable  m  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  m  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	m  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);	  value    +=    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  m	121	None	replace
650	[BUG]  [BUGGY]  ValueUtils.copyValue(start,  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.copyValue(start,  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.copyValue(start,  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);	  value    +=    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  ')'  expected	121	None	replace
651	[BUG]  [BUGGY]  ValueUtils.copyValue(end,  value)-  start.get(Calendar.YEAR);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.copyValue(end,  value)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.copyValue(end,  value)-  start.get(Calendar.YEAR);	  value    +=    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  not  a  statement	121	None	replace
652	[BUG]  [BUGGY]  Years  +=  12  *  years  +  1;  [CE]  cannot  find  symbol  Years  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Years  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Years  +=  12  *  years  +  1;	  months    +=    12    *    years    +    1;    Years    +=    12    *    years    +    1;    	non-compiled	[CE]  cannot  find  symbol  Years	132	None	replace
653	[BUG]  [BUGGY]  Years  +=  12  *  YEARS  +  1;  [CE]  cannot  find  symbol  Years  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Years  +=  12  *  YEARS  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Years  +=  12  *  YEARS  +  1;	  months    +=    12    *    years    +    1;    Years    +=    12    *    years    +    1;    	non-compiled	[CE]  cannot  find  symbol  Years	132	None	replace
654	[BUG]  [BUGGY]  Days  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Days  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	          days    +=    end.get(Calendar.HOUR_OF_DAY,    M);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  ';'  expected	36	None	replace
655	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
656	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
657	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
658	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
659	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
660	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
661	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
662	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
663	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	27	None	add
664	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
665	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
666	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
667	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
668	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
669	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
670	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
671	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
672	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
673	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
674	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	157	2	replace
675	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	157	2	replace
676	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	157	2	replace
677	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	157	2	replace
678	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Months  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  Months    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Months	135	None	replace
679	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Months  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  Months    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Months	135	None	replace
680	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Months  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  Months    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Months	135	None	replace
681	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
682	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
683	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
684	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
685	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
686	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
687	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
688	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
689	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
690	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
691	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [CE]  cannot  find  symbol  Hours  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Hours	242	None	replace
692	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);  [CE]  cannot  find  symbol  Hours  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Hours	242	None	replace
693	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [CE]  cannot  find  symbol  Months  [FE]                        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	242	None	replace
694	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  Days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Days	235	None	replace
695	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days  +  1);  [CE]  cannot  find  symbol  Days  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days  +  1);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days  +  1);	  Days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Days	235	None	replace
696	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);  [CE]  cannot  find  symbol  Days  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);	  Days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Days	235	None	replace
697	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	69	1	add
698	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	69	1	add
699	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	69	1	add
700	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	69	1	add
701	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	69	1	add
702	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	69	1	add
703	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [CE]  cannot  find  symbol  Days  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	non-compiled	[CE]  cannot  find  symbol  Days	69	None	add
704	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	69	1	add
705	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	69	1	add
706	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	161	1	add
707	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	161	1	add
708	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	161	1	add
709	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	161	1	add
710	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	161	1	add
711	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	161	1	add
712	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	161	1	add
713	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	161	1	add
714	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	161	1	add
715	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	161	1	add
716	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
717	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
718	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
719	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
720	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	non-compiled	[CE]  cannot  find  symbol  Days	8	None	add
721	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
722	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
723	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
724	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
725	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    years  +=  12  *  days;  months  +=  12  *  days;  years  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        days;        years    +=    12    *    days;    months  +=  12  *  days;  years  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	112	1	add
726	[BUG]  [BUGGY]  months    +=    12    *    days;    years  +=  12  *  days;  months  +=  12  *  days;  years  +=  12  *  days;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    years  +=  12  *  days;  months  +=  12  *  days;  years  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        days;        years    +=    12    *    days;    months  +=  12  *  days;  years  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	112	1	add
727	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    years  +=  12  *  days;  years  +=  12  *  days;  years  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        days;        years    +=    12    *    days;    years  +=  12  *  days;  years  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	112	1	add
728	[BUG]  [BUGGY]  months    +=    12    *    days;    years  +=  12  *  days;  years  +=  12  *  days;  years  +=  12  *  days;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    years  +=  12  *  days;  years  +=  12  *  days;  years  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        days;        years    +=    12    *    days;    years  +=  12  *  days;  years  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	112	1	add
729	[BUG]  [BUGGY]  months    +=    12    *    days;    years  +=  12  *  days;  Month  months  +=  12  *  days;  years  +=  12  *  days;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    years  +=  12  *  days;  Month  months  +=  12  *  days;  years  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        days;        years    +=    12    *    days;    Month  months  +=  12  *  days;  years  +=  12  *  days;	  	non-compiled	[CE]  ';'  expected	112	None	add
730	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    years  +=  12  *  days;  days  +=  12  *  days;  years  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        days;        years    +=    12    *    days;    days  +=  12  *  days;  years  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	112	1	add
731	[BUG]  [BUGGY]  months    +=    12    *    days;    years  +=  12  *  days;  days  +=  12  *  days;  years  +=  12  *  days;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    years  +=  12  *  days;  days  +=  12  *  days;  years  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        days;        years    +=    12    *    days;    days  +=  12  *  days;  years  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	112	1	add
732	[BUG]  [BUGGY]  months    +=    12    *    days;    years  +=  12  *  days;  Years  +=  12  *  days;  years  +=  12  *  days;  [CE]  cannot  find  symbol  Years  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    years  +=  12  *  days;  Years  +=  12  *  days;  years  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        days;        years    +=    12    *    days;    Years  +=  12  *  days;  years  +=  12  *  days;	  	non-compiled	[CE]  cannot  find  symbol  Years	112	None	add
733	[BUG]  [BUGGY]  month  +=  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  month  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  month  +=  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	month  +=  start.get(Calendar.HOUR_OF_DAY);	  y    +=    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol  month	11	None	replace
734	[BUG]  [BUGGY]  Month  months  +=  12  *  years  +  1;  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  months  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  months  +=  12  *  years  +  1;	  months    +=    12    *    years    +    1;    Month    months    +=    12    *    years    +    1;    	non-compiled	[CE]  ';'  expected	163	None	replace
735	[BUG]  [BUGGY]  Month  months  +=  12  *  YEARS  +  1;  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  months  +=  12  *  YEARS  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  months  +=  12  *  YEARS  +  1;	  months    +=    12    *    years    +    1;    Month    months    +=    12    *    years    +    1;    	non-compiled	[CE]  ';'  expected	163	None	replace
736	[BUG]  [BUGGY]  Month  months  +=  12  *  days  +  1;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  months  +=  12  *  days  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  months  +=  12  *  days  +  1;	  months    +=    12    *    years    +    1;    Month    months    +=    12    *    years    +    1;    	non-compiled	[CE]  ';'  expected	163	None	replace
737	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	58	1	add
738	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	58	1	add
739	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	58	1	add
740	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	58	1	add
741	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	58	1	add
742	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	58	1	add
743	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	58	1	add
744	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	58	1	add
745	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	58	None	add
746	[BUG]  [BUGGY]  months  +=  12  *  YEARS  +  1;  [CE]  cannot  find  symbol  YEARS  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  YEARS  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  YEARS  +  1;	  months    +=    12    *    years    +    1;    months    +=    12    *    years    +    1;    	non-compiled	[CE]  cannot  find  symbol  YEARS	126	None	replace
747	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	38	2	add
748	[BUG]  [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	38	2	add
749	[BUG]  [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  Days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  Days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    Days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	non-compiled	[CE]  cannot  find  symbol  Days	38	None	add
750	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	38	2	add
751	[BUG]  [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	38	2	add
752	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	38	2	add
753	[BUG]  [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	38	2	add
754	[BUG]  [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,	  	non-compiled	[CE]  ')'  expected	38	None	add
755	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	47	2	replace
756	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	47	2	replace
757	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	47	2	replace
758	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	47	2	replace
759	[BUG]  [BUGGY]  m  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [CE]  cannot  assign  a  value  to  final  variable  m  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  m  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	m  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);	  value    +=    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  m	136	None	replace
760	[BUG]  [BUGGY]  ValueUtils.copyValue(end,  value)-  start.get(Calendar.MONTH);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.copyValue(end,  value)-  start.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.copyValue(end,  value)-  start.get(Calendar.MONTH);	  value    +=    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  not  a  statement	136	None	replace
761	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    years  +=  365  *  years;  months  +=  365  *  years;  years  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        365        *        years;        years    +=    365    *    years;    months  +=  365  *  years;  years  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	73	2	add
762	[BUG]  [BUGGY]  months    +=    365    *    years;    years  +=  365  *  years;  months  +=  365  *  years;  years  +=  365  *  years;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    years  +=  365  *  years;  months  +=  365  *  years;  years  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        365        *        years;        years    +=    365    *    years;    months  +=  365  *  years;  years  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	73	2	add
763	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    years  +=  365  *  years;  years  +=  365  *  years;  years  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        365        *        years;        years    +=    365    *    years;    years  +=  365  *  years;  years  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	73	2	add
764	[BUG]  [BUGGY]  months    +=    365    *    years;    years  +=  365  *  years;  years  +=  365  *  years;  years  +=  365  *  years;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    years  +=  365  *  years;  years  +=  365  *  years;  years  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        365        *        years;        years    +=    365    *    years;    years  +=  365  *  years;  years  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	73	2	add
765	[BUG]  [BUGGY]  months    +=    365    *    years;    years  +=  365  *  years;  Month  months  +=  365  *  years;  years  +=  365  *  years;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    years  +=  365  *  years;  Month  months  +=  365  *  years;  years  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        365        *        years;        years    +=    365    *    years;    Month  months  +=  365  *  years;  years  +=  365  *  years;	  	non-compiled	[CE]  ';'  expected	73	None	add
766	[BUG]  [BUGGY]  months    +=    365    *    years;    years  +=  365  *  years;  Months  +=  365  *  years;  years  +=  365  *  years;  [CE]  cannot  find  symbol  Months  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    years  +=  365  *  years;  Months  +=  365  *  years;  years  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        365        *        years;        years    +=    365    *    years;    Months  +=  365  *  years;  years  +=  365  *  years;	  	non-compiled	[CE]  cannot  find  symbol  Months	73	None	add
767	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    years  +=  365  *  years;  days  +=  365  *  years;  years  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        365        *        years;        years    +=    365    *    years;    days  +=  365  *  years;  years  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	73	2	add
768	[BUG]  [BUGGY]  months    +=    365    *    years;    years  +=  365  *  years;  days  +=  365  *  years;  years  +=  365  *  years;  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    years  +=  365  *  years;  days  +=  365  *  years;  years  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        365        *        years;        years    +=    365    *    years;    days  +=  365  *  years;  years  +=  365  *  years;	  	compilable	  [FE]  ComparisonFailure  	73	2	add
769	[BUG]  [BUGGY]  Months  +=  12  *  years  +  1;  [CE]  cannot  find  symbol  Months  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  +=  12  *  years  +  1;	  months    +=    12    *    years    +    1;    Months    +=    12    *    years    +    1;    	non-compiled	[CE]  cannot  find  symbol  Months	129	None	replace
770	[BUG]  [BUGGY]  Months  +=  12  *  YEARS  +  1;  [CE]  cannot  find  symbol  Months  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  +=  12  *  YEARS  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  +=  12  *  YEARS  +  1;	  months    +=    12    *    years    +    1;    Months    +=    12    *    years    +    1;    	non-compiled	[CE]  cannot  find  symbol  Months	129	None	replace
771	[BUG]  [BUGGY]  Months  +=  12  *  Years  +  1;  [CE]  cannot  find  symbol  Months  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  +=  12  *  Years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  +=  12  *  Years  +  1;	  months    +=    12    *    years    +    1;    Months    +=    12    *    years    +    1;    	non-compiled	[CE]  cannot  find  symbol  Months	129	None	replace
772	[BUG]  [BUGGY]  Month  months  +=  24  *  years;  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  months  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  months  +=  24  *  years;	  months    +=    24    *    years;    Month    months    +=    24    *    years;    	non-compiled	[CE]  ';'  expected	193	None	replace
773	[BUG]  [BUGGY]  Month  months  +=  24  *  days;  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  months  +=  24  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  months  +=  24  *  days;	  months    +=    24    *    years;    Month    months    +=    24    *    years;    	non-compiled	[CE]  ';'  expected	193	None	replace
774	[BUG]  [BUGGY]  Month  months  +=  24  *  YEARS;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  months  +=  24  *  YEARS;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  months  +=  24  *  YEARS;	  months    +=    24    *    years;    Month    months    +=    24    *    years;    	non-compiled	[CE]  ';'  expected	193	None	replace
775	[BUG]  [BUGGY]  Month  months  +=  24  *  y;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  months  +=  24  *  y;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  months  +=  24  *  y;	  months    +=    24    *    years;    Month    months    +=    24    *    years;    	non-compiled	[CE]  ';'  expected	193	None	replace
776	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,	          days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  ')'  expected	37	None	replace
777	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,	          days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  ')'  expected	37	None	replace
778	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,	          days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  ')'  expected	37	None	replace
779	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,	          days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  ')'  expected	37	None	replace
780	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  12  *  days  +  365  *  years;	  months    +=    12    *    days    +    365    *    days;    	compilable	  [FE]  ComparisonFailure  	188	2	replace
781	[BUG]  [BUGGY]  months  +=  12  *  days  +  365  *  years;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  days  +  365  *  years;	  months    +=    12    *    days    +    365    *    days;    	compilable	  [FE]  ComparisonFailure  	188	2	replace
782	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  365  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  12  *  days  +  365  *  hours;	  months    +=    12    *    days    +    365    *    days;    	compilable	  [FE]  ComparisonFailure  	188	2	replace
783	[BUG]  [BUGGY]  months  +=  12  *  days  +  365  *  hours;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  365  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  days  +  365  *  hours;	  months    +=    12    *    days    +    365    *    days;    	compilable	  [FE]  ComparisonFailure  	188	2	replace
784	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  365  *  days  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  12  *  days  +  365  *  days  +  1;	  months    +=    12    *    days    +    365    *    days;    	compilable	  [FE]  ComparisonFailure  	188	2	replace
785	[BUG]  [BUGGY]  months  +=  12  *  days  +  365  *  days  +  1;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  365  *  days  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  days  +  365  *  days  +  1;	  months    +=    12    *    days    +    365    *    days;    	compilable	  [FE]  ComparisonFailure  	188	2	replace
786	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	229	1	add
787	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	229	1	add
788	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	229	None	add
789	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	229	1	add
790	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	229	1	add
791	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	229	1	add
792	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	229	1	add
793	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	109	2	replace
794	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	109	2	replace
795	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	109	2	replace
796	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	109	2	replace
797	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	109	2	replace
798	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	109	2	replace
799	[BUG]  [BUGGY]  Month  end  =  start.get(Calendar.YEAR)-  end.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  start.get(Calendar.YEAR)-  end.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  start.get(Calendar.YEAR)-  end.get(Calendar.HOUR_OF_DAY);	  Month    end    =    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	233	None	replace
800	[BUG]  [BUGGY]  Month  end  =  tmp.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  tmp.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  tmp.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);	  Month    end    =    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	233	None	replace
801	[BUG]  [BUGGY]  Month  end  =  this.start.get(Calendar.YEAR)-  end.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  this.start.get(Calendar.YEAR)-  end.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  this.start.get(Calendar.YEAR)-  end.get(Calendar.HOUR_OF_DAY);	  Month    end    =    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	233	None	replace
802	[BUG]  [BUGGY]  Month  end  =  y.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  y.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  y.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);	  Month    end    =    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	233	None	replace
803	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  years  +  1;  months  +=  24  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    24    *    years    +    1;    months  +=  24  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	222	2	add
804	[BUG]  [BUGGY]  months  +=  24  *  years  +  1;  months  +=  24  *  years  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  years  +  1;  months  +=  24  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    years    +    1;    months  +=  24  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	222	2	add
805	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  years  +  1;  years  +=  24  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    24    *    years    +    1;    years  +=  24  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	222	2	add
806	[BUG]  [BUGGY]  months  +=  24  *  years  +  1;  years  +=  24  *  years  +  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  years  +  1;  years  +=  24  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    years    +    1;    years  +=  24  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	222	2	add
807	[BUG]  [BUGGY]  months  +=  24  *  years  +  1;  Months  +=  24  *  years  +  1;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  years  +  1;  Months  +=  24  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    years    +    1;    Months  +=  24  *  years  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Months	222	None	add
808	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  years  +  1;  days  +=  24  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    24    *    years    +    1;    days  +=  24  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	222	2	add
809	[BUG]  [BUGGY]  months  +=  24  *  years  +  1;  days  +=  24  *  years  +  1;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  years  +  1;  days  +=  24  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    years    +    1;    days  +=  24  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	222	2	add
810	[BUG]  [BUGGY]  months  +=  24  *  years  +  1;  Years  +=  24  *  years  +  1;  [CE]  cannot  find  symbol  Years  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  years  +  1;  Years  +=  24  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    years    +    1;    Years  +=  24  *  years  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Years	222	None	add
811	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	24	1	add
812	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	24	1	add
813	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	24	1	add
814	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	24	1	add
815	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	24	1	add
816	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	24	1	add
817	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	24	1	add
818	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	24	1	add
819	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	24	1	add
820	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	24	1	add
821	[BUG]  [BUGGY]  years  +=  365  *  tokens;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  365  *  tokens;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  365  *  tokens;	  months    +=    365    *    years;    years    +=    365    *    years;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	74	None	replace
822	[BUG]  [BUGGY]  years  +=  365  *  M;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  365  *  M;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  365  *  M;	  months    +=    365    *    years;    years    +=    365    *    years;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	74	None	replace
823	[BUG]  [BUGGY]  months  +=  365  *  M.years;  [CE]  cannot  find  symbol  years  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  M.years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  M.years;	  months    +=    365    *    M;    	non-compiled	[CE]  cannot  find  symbol  years	192	None	replace
824	[BUG]  [BUGGY]  months  +=  365  *  M,  y;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  M,  y;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  M,  y;	  months    +=    365    *    M;    	non-compiled	[CE]  ';'  expected	192	None	replace
825	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
826	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
827	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
828	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
829	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
830	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
831	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
832	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
833	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  ';'  expected	13	None	add
834	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    years  +=  12  *  365;  months  +=  12  *  365;  years  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        365;        years    +=    12    *    365;    months  +=  12  *  365;  years  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	143	2	add
835	[BUG]  [BUGGY]  months    +=    12    *    365;    years  +=  12  *  365;  months  +=  12  *  365;  years  +=  12  *  365;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    years  +=  12  *  365;  months  +=  12  *  365;  years  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        365;        years    +=    12    *    365;    months  +=  12  *  365;  years  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	143	2	add
836	[BUG]  [BUGGY]  months    +=    12    *    365;    years  +=  12  *  365;  Month  months  +=  12  *  365;  years  +=  12  *  365;  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    years  +=  12  *  365;  Month  months  +=  12  *  365;  years  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        365;        years    +=    12    *    365;    Month  months  +=  12  *  365;  years  +=  12  *  365;	  	non-compiled	[CE]  ';'  expected	143	None	add
837	[BUG]  [BUGGY]  months    +=    12    *    365;    years  +=  12  *  365;  Months  +=  12  *  365;  years  +=  12  *  365;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    years  +=  12  *  365;  Months  +=  12  *  365;  years  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        365;        years    +=    12    *    365;    Months  +=  12  *  365;  years  +=  12  *  365;	  	non-compiled	[CE]  cannot  find  symbol  Months	143	None	add
838	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    years  +=  12  *  365;  days  +=  12  *  365;  years  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        365;        years    +=    12    *    365;    days  +=  12  *  365;  years  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	143	2	add
839	[BUG]  [BUGGY]  months    +=    12    *    365;    years  +=  12  *  365;  days  +=  12  *  365;  years  +=  12  *  365;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    years  +=  12  *  365;  days  +=  12  *  365;  years  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        365;        years    +=    12    *    365;    days  +=  12  *  365;  years  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	143	2	add
840	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    years  +=  12  *  365;  years  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        365;        years    +=    12    *    365;    years  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	143	2	add
841	[BUG]  [BUGGY]  months    +=    12    *    365;    years  +=  12  *  365;  years  +=  12  *  365;  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    years  +=  12  *  365;  years  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        365;        years    +=    12    *    365;    years  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	143	2	add
842	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  month);  [CE]  cannot  find  symbol  Months  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  month);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  month);	  Months    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    	non-compiled	[CE]  cannot  find  symbol  Months	204	None	replace
843	[BUG]  [BUGGY]  value  +=  end.get(Calendar.HOUR_OF_DAY)+  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  value  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  value  +=  end.get(Calendar.HOUR_OF_DAY)+  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	value  +=  end.get(Calendar.HOUR_OF_DAY)+  start.get(Calendar.HOUR_OF_DAY);	  y    +=    end.get(Calendar.HOUR_OF_DAY)+    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol  value	12	None	replace
844	[BUG]  [BUGGY]  y  +=  start.get(Calendar.HOUR_OF_DAY)+  end.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  assign  a  value  to  final  variable  y  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  y  +=  start.get(Calendar.HOUR_OF_DAY)+  end.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	y  +=  start.get(Calendar.HOUR_OF_DAY)+  end.get(Calendar.HOUR_OF_DAY);	  y    +=    end.get(Calendar.HOUR_OF_DAY)+    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  y	12	None	replace
845	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
846	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
847	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
848	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
849	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	40	None	add
850	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
851	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
852	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
853	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
854	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  365  *  days;  months  +=  12  *  days  +  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    days    +    365    *    days;    months  +=  12  *  days  +  365  *  days;	  	compilable	  [FE]  ComparisonFailure  	187	1	add
855	[BUG]  [BUGGY]  months  +=  12  *  days  +  365  *  days;  months  +=  12  *  days  +  365  *  days;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  365  *  days;  months  +=  12  *  days  +  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    days    +    365    *    days;    months  +=  12  *  days  +  365  *  days;	  	compilable	  [FE]  ComparisonFailure  	187	1	add
856	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  365  *  days;  years  +=  12  *  days  +  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    days    +    365    *    days;    years  +=  12  *  days  +  365  *  days;	  	compilable	  [FE]  ComparisonFailure  	187	1	add
857	[BUG]  [BUGGY]  months  +=  12  *  days  +  365  *  days;  years  +=  12  *  days  +  365  *  days;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  365  *  days;  years  +=  12  *  days  +  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    days    +    365    *    days;    years  +=  12  *  days  +  365  *  days;	  	compilable	  [FE]  ComparisonFailure  	187	1	add
858	[BUG]  [BUGGY]  months  +=  12  *  days  +  365  *  days;  Months  +=  12  *  days  +  365  *  days;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  365  *  days;  Months  +=  12  *  days  +  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    days    +    365    *    days;    Months  +=  12  *  days  +  365  *  days;	  	non-compiled	[CE]  cannot  find  symbol  Months	187	None	add
859	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  365  *  days;  days  +=  12  *  days  +  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    days    +    365    *    days;    days  +=  12  *  days  +  365  *  days;	  	compilable	  [FE]  ComparisonFailure  	187	1	add
860	[BUG]  [BUGGY]  months  +=  12  *  days  +  365  *  days;  days  +=  12  *  days  +  365  *  days;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  365  *  days;  days  +=  12  *  days  +  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    days    +    365    *    days;    days  +=  12  *  days  +  365  *  days;	  	compilable	  [FE]  ComparisonFailure  	187	1	add
861	[BUG]  [BUGGY]  months  +=  12  *  days  +  365  *  days;  Month  months  +=  12  *  days  +  365  *  days;  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  365  *  days;  Month  months  +=  12  *  days  +  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    days    +    365    *    days;    Month  months  +=  12  *  days  +  365  *  days;	  	non-compiled	[CE]  ';'  expected	187	None	add
862	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
863	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
864	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
865	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
866	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
867	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
868	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
869	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
870	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
871	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
872	[BUG]  [BUGGY]  Day  end  =  tokens.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Day  end  =  tokens.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Day  end  =  tokens.get(Calendar.HOUR_OF_DAY);	  Day    end    =    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
873	[BUG]  [BUGGY]  Day  end  =  m.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Day  end  =  m.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Day  end  =  m.get(Calendar.HOUR_OF_DAY);	  Day    end    =    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
874	[BUG]  [BUGGY]  Day  end  =  this.start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Day  end  =  this.start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Day  end  =  this.start.get(Calendar.HOUR_OF_DAY);	  Day    end    =    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
875	[BUG]  [BUGGY]  Day  end  =  tmp.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Day  end  =  tmp.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Day  end  =  tmp.get(Calendar.HOUR_OF_DAY);	  Day    end    =    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
876	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    months  +=  24  *  years;  months  +=  24  *  years;  months  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        24        *        years;        months    +=    24    *    years;    months  +=  24  *  years;  months  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	96	2	add
877	[BUG]  [BUGGY]  months    +=    24    *    years;    months  +=  24  *  years;  months  +=  24  *  years;  months  +=  24  *  years;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    months  +=  24  *  years;  months  +=  24  *  years;  months  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        24        *        years;        months    +=    24    *    years;    months  +=  24  *  years;  months  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	96	2	add
878	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    months  +=  24  *  years;  years  +=  24  *  years;  months  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        24        *        years;        months    +=    24    *    years;    years  +=  24  *  years;  months  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	96	2	add
879	[BUG]  [BUGGY]  months    +=    24    *    years;    months  +=  24  *  years;  years  +=  24  *  years;  months  +=  24  *  years;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    months  +=  24  *  years;  years  +=  24  *  years;  months  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        24        *        years;        months    +=    24    *    years;    years  +=  24  *  years;  months  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	96	2	add
880	[BUG]  [BUGGY]  months    +=    24    *    years;    months  +=  24  *  years;  Months  +=  24  *  years;  months  +=  24  *  years;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    months  +=  24  *  years;  Months  +=  24  *  years;  months  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        24        *        years;        months    +=    24    *    years;    Months  +=  24  *  years;  months  +=  24  *  years;	  	non-compiled	[CE]  cannot  find  symbol  Months	96	None	add
881	[BUG]  [BUGGY]  months    +=    24    *    years;    months  +=  24  *  years;  Month  months  +=  24  *  years;  months  +=  24  *  years;  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    months  +=  24  *  years;  Month  months  +=  24  *  years;  months  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        24        *        years;        months    +=    24    *    years;    Month  months  +=  24  *  years;  months  +=  24  *  years;	  	non-compiled	[CE]  ';'  expected	96	None	add
882	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    months  +=  24  *  years;  days  +=  24  *  years;  months  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        24        *        years;        months    +=    24    *    years;    days  +=  24  *  years;  months  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	96	2	add
883	[BUG]  [BUGGY]  months    +=    24    *    years;    months  +=  24  *  years;  days  +=  24  *  years;  months  +=  24  *  years;  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    months  +=  24  *  years;  days  +=  24  *  years;  months  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        24        *        years;        months    +=    24    *    years;    days  +=  24  *  years;  months  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	96	2	add
884	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_MONTH,  months);  [CE]  cannot  find  symbol  HOUR_OF_MONTH  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_MONTH,  months);	  months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	non-compiled	[CE]  cannot  find  symbol  HOUR_OF_MONTH	228	None	replace
885	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        years        +        1;        years    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	127	2	add
886	[BUG]  [BUGGY]  months    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        years        +        1;        years    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	127	2	add
887	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        years        +        1;        years    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	127	2	add
888	[BUG]  [BUGGY]  months    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        years        +        1;        years    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	127	2	add
889	[BUG]  [BUGGY]  months    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  Month  months  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  Month  months  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        years        +        1;        years    +=    12    *    years    +    1;    Month  months  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;	  	non-compiled	[CE]  ';'  expected	127	None	add
890	[BUG]  [BUGGY]  months    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  Years  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  [CE]  cannot  find  symbol  Years  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  Years  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        years        +        1;        years    +=    12    *    years    +    1;    Years  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Years	127	None	add
891	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        years        +        1;        years    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	127	2	add
892	[BUG]  [BUGGY]  months    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  days  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        years        +        1;        years    +=    12    *    years    +    1;    days  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	127	2	add
893	[BUG]  [BUGGY]  y  +=  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.YEAR);  [CE]  cannot  assign  a  value  to  final  variable  y  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  y  +=  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	y  +=  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.YEAR);	  y    +=    start.get(Calendar.YEAR)-    end.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  y	124	None	replace
894	[BUG]  [BUGGY]  value  +=  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.YEAR);  [CE]  cannot  find  symbol  value  [FE]                        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  value  +=  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	value  +=  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.YEAR);	  y    +=    start.get(Calendar.YEAR)-    end.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol  value	124	None	replace
895	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);	  y    +=    start.get(Calendar.YEAR)-    end.get(Calendar.HOUR_OF_DAY);    	compilable	  [FE]  ComparisonFailure  	124	2	replace
896	[BUG]  [BUGGY]  years  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [FE]  ComparisonFailure  [FE]                          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);	  y    +=    start.get(Calendar.YEAR)-    end.get(Calendar.HOUR_OF_DAY);    	compilable	  [FE]  ComparisonFailure  	124	2	replace
897	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  12  *  months;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  +=  12  *  months;	  months    +=    12    *    days;    years    +=    12    *    days;    	compilable	  [FE]  ComparisonFailure  	113	2	replace
898	[BUG]  [BUGGY]  years  +=  12  *  months;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  12  *  months;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  12  *  months;	  months    +=    12    *    days;    years    +=    12    *    days;    	compilable	  [FE]  ComparisonFailure  	113	2	replace
899	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  [CE]  ')'  expected  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,	          Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    	non-compiled	[CE]  ')'  expected	173	None	replace
900	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,	          Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    	non-compiled	[CE]  ')'  expected	173	None	replace
901	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months,  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months,	          Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    	non-compiled	[CE]  ')'  expected	173	None	replace
902	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,	          Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    	non-compiled	[CE]  ')'  expected	173	None	replace
903	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	90	1	add
904	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	90	1	add
905	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	90	1	add
906	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	90	1	add
907	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	90	1	add
908	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	90	1	add
909	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	90	1	add
910	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	90	1	add
911	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	90	1	add
912	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	90	1	add
913	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    days  +=  12  *  days;  months  +=  12  *  days;  days  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        days;        days    +=    12    *    days;    months  +=  12  *  days;  days  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	115	1	add
914	[BUG]  [BUGGY]  months    +=    12    *    days;    days  +=  12  *  days;  months  +=  12  *  days;  days  +=  12  *  days;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    days  +=  12  *  days;  months  +=  12  *  days;  days  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        days;        days    +=    12    *    days;    months  +=  12  *  days;  days  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	115	1	add
915	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    days  +=  12  *  days;  years  +=  12  *  days;  days  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        days;        days    +=    12    *    days;    years  +=  12  *  days;  days  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	115	1	add
916	[BUG]  [BUGGY]  months    +=    12    *    days;    days  +=  12  *  days;  years  +=  12  *  days;  days  +=  12  *  days;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    days  +=  12  *  days;  years  +=  12  *  days;  days  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        days;        days    +=    12    *    days;    years  +=  12  *  days;  days  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	115	1	add
917	[BUG]  [BUGGY]  months    +=    12    *    days;    days  +=  12  *  days;  Month  months  +=  12  *  days;  days  +=  12  *  days;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    days  +=  12  *  days;  Month  months  +=  12  *  days;  days  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        days;        days    +=    12    *    days;    Month  months  +=  12  *  days;  days  +=  12  *  days;	  	non-compiled	[CE]  ';'  expected	115	None	add
918	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    days  +=  12  *  days;  days  +=  12  *  days;  days  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        days;        days    +=    12    *    days;    days  +=  12  *  days;  days  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	115	1	add
919	[BUG]  [BUGGY]  months    +=    12    *    days;    days  +=  12  *  days;  days  +=  12  *  days;  days  +=  12  *  days;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    days  +=  12  *  days;  days  +=  12  *  days;  days  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        days;        days    +=    12    *    days;    days  +=  12  *  days;  days  +=  12  *  days;	  	compilable	  [FE]  ComparisonFailure  	115	1	add
920	[BUG]  [BUGGY]  months    +=    12    *    days;    days  +=  12  *  days;  Months  +=  12  *  days;  days  +=  12  *  days;  [CE]  cannot  find  symbol  Months  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    days  +=  12  *  days;  Months  +=  12  *  days;  days  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        days;        days    +=    12    *    days;    Months  +=  12  *  days;  days  +=  12  *  days;	  	non-compiled	[CE]  cannot  find  symbol  Months	115	None	add
921	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	159	1	add
922	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	159	1	add
923	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	159	1	add
924	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	159	1	add
925	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	159	1	add
926	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	159	1	add
927	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	159	1	add
928	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	159	1	add
929	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	159	1	add
930	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	159	1	add
931	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Months  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Months	151	None	replace
932	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  tokens.length;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  365  *  tokens.length;	  months    +=    365    *    tokens;    	compilable	  [FE]  ComparisonFailure  	189	2	replace
933	[BUG]  [BUGGY]  months  +=  365  *  tokens.length;  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  tokens.length;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  tokens.length;	  months    +=    365    *    tokens;    	compilable	  [FE]  ComparisonFailure  	189	2	replace
934	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	18	2	replace
935	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	18	2	replace
936	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	18	2	replace
937	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	18	2	replace
938	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [CE]  cannot  find  symbol  YEARS  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	non-compiled	[CE]  cannot  find  symbol  YEARS	18	None	replace
939	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	86	2	replace
940	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	86	2	replace
941	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
942	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
943	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
944	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
945	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
946	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
947	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
948	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
949	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
950	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
951	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	91	2	replace
952	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	91	2	replace
953	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	91	2	replace
954	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	91	2	replace
955	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	91	2	replace
956	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	91	2	replace
957	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	249	1	add
958	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	249	1	add
959	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	249	1	add
960	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	249	1	add
961	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	249	1	add
962	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	249	1	add
963	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	249	1	add
964	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	249	1	add
965	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	249	1	add
966	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	249	1	add
967	[BUG]  [BUGGY]  Years  +=  12  *  365;  [CE]  cannot  find  symbol  Years  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Years  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Years  +=  12  *  365;	  months    +=    12    *    365;    Years    +=    12    *    365;    	non-compiled	[CE]  cannot  find  symbol  Years	195	None	replace
968	[BUG]  [BUGGY]  Months  +=  12  *  Days;  [CE]  cannot  find  symbol  Months  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  +=  12  *  Days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  +=  12  *  Days;	  months    +=    12    *    days;    Months    +=    12    *    days;    	non-compiled	[CE]  cannot  find  symbol  Months	114	None	replace
969	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  +=  12  *  days;	  months    +=    12    *    days;    Months    +=    12    *    days;    	compilable	  [FE]  ComparisonFailure  	114	2	replace
970	[BUG]  [BUGGY]  days  +=  12  *  days;  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  +=  12  *  days;	  months    +=    12    *    days;    Months    +=    12    *    days;    	compilable	  [FE]  ComparisonFailure  	114	2	replace
971	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	67	1	add
972	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	67	1	add
973	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	67	1	add
974	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	67	1	add
975	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	non-compiled	[CE]  cannot  find  symbol  Days	67	None	add
976	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	67	1	add
977	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	67	1	add
978	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [CE]  cannot  find  symbol  Days  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	non-compiled	[CE]  cannot  find  symbol  Days	67	None	add
979	[BUG]  [BUGGY]  Years  +=  24  *  years;  [CE]  cannot  find  symbol  Years  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Years  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Years  +=  24  *  years;	  months    +=    24    *    years;    Years    +=    24    *    years;    	non-compiled	[CE]  cannot  find  symbol  Years	103	None	replace
980	[BUG]  [BUGGY]  Years  +=  24  *  days;  [CE]  cannot  find  symbol  Years  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Years  +=  24  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Years  +=  24  *  days;	  months    +=    24    *    years;    Years    +=    24    *    years;    	non-compiled	[CE]  cannot  find  symbol  Years	103	None	replace
981	[BUG]  [BUGGY]  Month  end  =  tmp.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  tmp.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  tmp.get(Calendar.MONTH)-  start.get(Calendar.MONTH);	  Month    end    =    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
982	[BUG]  [BUGGY]  Month  end  =  this.start.get(Calendar.MONTH)-  end.get(Calendar.MONTH);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  this.start.get(Calendar.MONTH)-  end.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  this.start.get(Calendar.MONTH)-  end.get(Calendar.MONTH);	  Month    end    =    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
983	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  12  *  365;  days  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  +=  12  *  365;  days  +=  12  *  365;	  months    +=    12    *    365;    days    +=    12    *    365;    	compilable	  [FE]  ComparisonFailure  	147	2	replace
984	[BUG]  [BUGGY]  years  +=  12  *  365;  days  +=  12  *  365;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  12  *  365;  days  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  12  *  365;  days  +=  12  *  365;	  months    +=    12    *    365;    days    +=    12    *    365;    	compilable	  [FE]  ComparisonFailure  	147	2	replace
985	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
986	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
987	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
988	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
989	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
990	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
991	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
992	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
993	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
994	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
995	[BUG]  [BUGGY]  months  +=  24  *  DateTimeConstants.MILLIS_PER_DAY  -  1;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  DateTimeConstants.MILLIS_PER_DAY  -  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  DateTimeConstants.MILLIS_PER_DAY  -  1;	  months    +=    24    *    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	79	None	replace
996	[BUG]  [BUGGY]  months  +=  24  *  DateTimeConstants.MILLIS_PER_DAY  +  1;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  DateTimeConstants.MILLIS_PER_DAY  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  DateTimeConstants.MILLIS_PER_DAY  +  1;	  months    +=    24    *    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	79	None	replace
997	[BUG]  [BUGGY]  months  +=  24  *  DateTimeConstants.MILLIS_PER_DAY  /  2;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  DateTimeConstants.MILLIS_PER_DAY  /  2;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  DateTimeConstants.MILLIS_PER_DAY  /  2;	  months    +=    24    *    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	79	None	replace
998	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  12  *  months;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  +=  12  *  months;	  months    +=    12    *    days;    days    +=    12    *    days;    	compilable	  [FE]  ComparisonFailure  	116	2	replace
999	[BUG]  [BUGGY]  days  +=  12  *  months;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  12  *  months;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  +=  12  *  months;	  months    +=    12    *    days;    days    +=    12    *    days;    	compilable	  [FE]  ComparisonFailure  	116	2	replace
1000	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  12  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  +=  12  *  hours;	  months    +=    12    *    days;    days    +=    12    *    days;    	compilable	  [FE]  ComparisonFailure  	116	2	replace
1001	[BUG]  [BUGGY]  days  +=  12  *  hours;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  12  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  +=  12  *  hours;	  months    +=    12    *    days;    days    +=    12    *    days;    	compilable	  [FE]  ComparisonFailure  	116	2	replace
1002	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
1003	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
1004	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
1005	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
1006	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [CE]  cannot  find  symbol  Years  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    Years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	non-compiled	[CE]  cannot  find  symbol  Years	17	None	add
1007	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
1008	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
1009	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
1010	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
1011	[BUG]  [BUGGY]  Month  value  =  start.get(Calendar.MONTH)-  end.get(Calendar.MONTH);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  value  =  start.get(Calendar.MONTH)-  end.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  value  =  start.get(Calendar.MONTH)-  end.get(Calendar.MONTH);	  Month    value    =    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  find  symbol	225	None	replace
1012	[BUG]  [BUGGY]  Month  value  =  m.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  value  =  m.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  value  =  m.get(Calendar.MONTH)-  start.get(Calendar.MONTH);	  Month    value    =    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  find  symbol	225	None	replace
1013	[BUG]  [BUGGY]  Month  value  =  end.get(Calendar.MONTH)-  m.get(Calendar.MONTH);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  value  =  end.get(Calendar.MONTH)-  m.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  value  =  end.get(Calendar.MONTH)-  m.get(Calendar.MONTH);	  Month    value    =    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  find  symbol	225	None	replace
1014	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  2;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  24  *  2;	  months    +=    24    *    365;    	compilable	  [FE]  ComparisonFailure  	83	1	replace
1015	[BUG]  [BUGGY]  months  +=  24  *  2;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  2;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  2;	  months    +=    24    *    365;    	compilable	  [FE]  ComparisonFailure  	83	1	replace
1016	[BUG]  [BUGGY]  value  +=  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  value  +=  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	value  +=  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);	  y    +=    end.get(Calendar.HOUR_OF_DAY)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol  value	10	None	replace
1017	[BUG]  [BUGGY]  y  +=  start.get(Calendar.HOUR_OF_DAY)-  end.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  assign  a  value  to  final  variable  y  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  y  +=  start.get(Calendar.HOUR_OF_DAY)-  end.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	y  +=  start.get(Calendar.HOUR_OF_DAY)-  end.get(Calendar.HOUR_OF_DAY);	  y    +=    end.get(Calendar.HOUR_OF_DAY)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  y	10	None	replace
1018	[BUG]  [BUGGY]  Y  +=  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  Y  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Y  +=  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Y  +=  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);	  y    +=    end.get(Calendar.HOUR_OF_DAY)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol  Y	10	None	replace
1019	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	154	1	add
1020	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	154	1	add
1021	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	154	1	add
1022	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	154	1	add
1023	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	154	1	add
1024	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	154	1	add
1025	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	154	None	add
1026	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	154	1	add
1027	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	154	1	add
1028	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  2  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  2  *  days;	  months    +=    365    *    days;    	compilable	  [FE]  ComparisonFailure  	55	2	replace
1029	[BUG]  [BUGGY]  months  +=  2  *  days;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  2  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  2  *  days;	  months    +=    365    *    days;    	compilable	  [FE]  ComparisonFailure  	55	2	replace
1030	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    	compilable	  [FE]  ComparisonFailure  	250	2	replace
1031	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    	compilable	  [FE]  ComparisonFailure  	250	2	replace
1032	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days  +  1);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days  +  1);	  days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	230	2	replace
1033	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days  +  1);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days  +  1);	  days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	230	2	replace
1034	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	33	1	add
1035	[BUG]  [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	33	1	add
1036	[BUG]  [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    Days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	33	None	add
1037	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    years  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	33	1	add
1038	[BUG]  [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    years  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	33	1	add
1039	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	33	1	add
1040	[BUG]  [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	33	1	add
1041	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
1042	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
1043	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
1044	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
1045	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Days	196	None	add
1046	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
1047	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
1048	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [CE]  cannot  find  symbol  Days  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	non-compiled	[CE]  cannot  find  symbol  Days	196	None	add
1049	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1050	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1051	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1052	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1053	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1054	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1055	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1056	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1057	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	60	None	add
1058	[BUG]  [BUGGY]  value  +=  end.get(Calendar.MONTH)-  start.get(Calendar.YEAR);  [CE]  cannot  find  symbol  value  [FE]                        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  value  +=  end.get(Calendar.MONTH)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	value  +=  end.get(Calendar.MONTH)-  start.get(Calendar.YEAR);	  y    +=    end.get(Calendar.MONTH)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol  value	138	None	replace
1059	[BUG]  [BUGGY]  Month  endMillis  +=  end.get(Calendar.MONTH)-  start.get(Calendar.YEAR);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  endMillis  +=  end.get(Calendar.MONTH)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  endMillis  +=  end.get(Calendar.MONTH)-  start.get(Calendar.YEAR);	  y    +=    end.get(Calendar.MONTH)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  ';'  expected	138	None	replace
1060	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,	  Months    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  ')'  expected	19	None	replace
1061	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,	  Months    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  ')'  expected	19	None	replace
1062	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  days  -=  reduceAndCorrect(start,  end,  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  days  -=  reduceAndCorrect(start,  end,  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  days  -=  reduceAndCorrect(start,  end,	  Months    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  ')'  expected	19	None	replace
1063	[BUG]  [BUGGY]  Month  end  =  start.get(Calendar.YEAR)-  end.get(Calendar.YEAR);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  start.get(Calendar.YEAR)-  end.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  start.get(Calendar.YEAR)-  end.get(Calendar.YEAR);	  Month    end    =    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol	240	None	replace
1064	[BUG]  [BUGGY]  Month  end  =  tokens.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  tokens.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  tokens.get(Calendar.YEAR)-  start.get(Calendar.YEAR);	  Month    end    =    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol	240	None	replace
1065	[BUG]  [BUGGY]  Month  end  =  tmp.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  tmp.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  tmp.get(Calendar.YEAR)-  start.get(Calendar.YEAR);	  Month    end    =    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol	240	None	replace
1066	[BUG]  [BUGGY]  Month  end  =  y.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  y.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  y.get(Calendar.YEAR)-  start.get(Calendar.YEAR);	  Month    end    =    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol	240	None	replace
1067	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	252	2	replace
1068	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	252	2	replace
1069	[BUG]  [BUGGY]  ValueUtils.copyValue(start,  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.copyValue(start,  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.copyValue(start,  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);	  value    +=    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  ')'  expected	122	None	replace
1070	[BUG]  [BUGGY]  m  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  assign  a  value  to  final  variable  m  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  m  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	m  +=  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);	  value    +=    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  m	122	None	replace
1071	[BUG]  [BUGGY]  ValueUtils.copyValue(end,  values,  value)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.copyValue(end,  values,  value)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.copyValue(end,  values,  value)-  start.get(Calendar.HOUR_OF_DAY);	  value    +=    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  not  a  statement	122	None	replace
1072	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  [CE]  cannot  find  symbol  Hours  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    	non-compiled	[CE]  cannot  find  symbol  Hours	203	None	replace
1073	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    years  +=  24  *  years;  months  +=  24  *  years;  years  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        24        *        years;        years    +=    24    *    years;    months  +=  24  *  years;  years  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	98	2	add
1074	[BUG]  [BUGGY]  months    +=    24    *    years;    years  +=  24  *  years;  months  +=  24  *  years;  years  +=  24  *  years;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    years  +=  24  *  years;  months  +=  24  *  years;  years  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        24        *        years;        years    +=    24    *    years;    months  +=  24  *  years;  years  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	98	2	add
1075	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    years  +=  24  *  years;  years  +=  24  *  years;  years  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        24        *        years;        years    +=    24    *    years;    years  +=  24  *  years;  years  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	98	2	add
1076	[BUG]  [BUGGY]  months    +=    24    *    years;    years  +=  24  *  years;  years  +=  24  *  years;  years  +=  24  *  years;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    years  +=  24  *  years;  years  +=  24  *  years;  years  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        24        *        years;        years    +=    24    *    years;    years  +=  24  *  years;  years  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	98	2	add
1077	[BUG]  [BUGGY]  months    +=    24    *    years;    years  +=  24  *  years;  Months  +=  24  *  years;  years  +=  24  *  years;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    years  +=  24  *  years;  Months  +=  24  *  years;  years  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        24        *        years;        years    +=    24    *    years;    Months  +=  24  *  years;  years  +=  24  *  years;	  	non-compiled	[CE]  cannot  find  symbol  Months	98	None	add
1078	[BUG]  [BUGGY]  months    +=    24    *    years;    years  +=  24  *  years;  Month  months  +=  24  *  years;  years  +=  24  *  years;  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    years  +=  24  *  years;  Month  months  +=  24  *  years;  years  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        24        *        years;        years    +=    24    *    years;    Month  months  +=  24  *  years;  years  +=  24  *  years;	  	non-compiled	[CE]  ';'  expected	98	None	add
1079	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    years  +=  24  *  years;  days  +=  24  *  years;  years  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        24        *        years;        years    +=    24    *    years;    days  +=  24  *  years;  years  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	98	2	add
1080	[BUG]  [BUGGY]  months    +=    24    *    years;    years  +=  24  *  years;  days  +=  24  *  years;  years  +=  24  *  years;  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    years  +=  24  *  years;  days  +=  24  *  years;  years  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        24        *        years;        years    +=    24    *    years;    days  +=  24  *  years;  years  +=  24  *  years;	  	compilable	  [FE]  ComparisonFailure  	98	2	add
1081	[BUG]  [BUGGY]  months  +=  24  *  DateTimeConstants.MILLIS_PER_SECOND  +  1;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  DateTimeConstants.MILLIS_PER_SECOND  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  DateTimeConstants.MILLIS_PER_SECOND  +  1;	  months    +=    24    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	84	None	replace
1082	[BUG]  [BUGGY]  months  +=  24  *  DateTimeConstants.MILLIS_PER_SECOND  -  1;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  DateTimeConstants.MILLIS_PER_SECOND  -  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  DateTimeConstants.MILLIS_PER_SECOND  -  1;	  months    +=    24    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	84	None	replace
1083	[BUG]  [BUGGY]  months  +=  24  *  DateTimeConstants.MILLIS_PER_SECOND  /  2;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  DateTimeConstants.MILLIS_PER_SECOND  /  2;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  DateTimeConstants.MILLIS_PER_SECOND  /  2;	  months    +=    24    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	84	None	replace
1084	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  24;  months  +=  12  *  24;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    24;    months  +=  12  *  24;	  	compilable	  [FE]  ComparisonFailure  	149	2	add
1085	[BUG]  [BUGGY]  months  +=  12  *  24;  months  +=  12  *  24;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  24;  months  +=  12  *  24;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    24;    months  +=  12  *  24;	  	compilable	  [FE]  ComparisonFailure  	149	2	add
1086	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  24;  years  +=  12  *  24;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    24;    years  +=  12  *  24;	  	compilable	  [FE]  ComparisonFailure  	149	2	add
1087	[BUG]  [BUGGY]  months  +=  12  *  24;  years  +=  12  *  24;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  24;  years  +=  12  *  24;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    24;    years  +=  12  *  24;	  	compilable	  [FE]  ComparisonFailure  	149	2	add
1088	[BUG]  [BUGGY]  months  +=  12  *  24;  Months  +=  12  *  24;  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  24;  Months  +=  12  *  24;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    24;    Months  +=  12  *  24;	  	non-compiled	[CE]  cannot  find  symbol  Months	149	None	add
1089	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  24;  days  +=  12  *  24;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    +=    12    *    24;    days  +=  12  *  24;	  	compilable	  [FE]  ComparisonFailure  	149	2	add
1090	[BUG]  [BUGGY]  months  +=  12  *  24;  days  +=  12  *  24;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  24;  days  +=  12  *  24;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    24;    days  +=  12  *  24;	  	compilable	  [FE]  ComparisonFailure  	149	2	add
1091	[BUG]  [BUGGY]  months  +=  12  *  24;  Month  months  +=  12  *  24;  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  24;  Month  months  +=  12  *  24;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    24;    Month  months  +=  12  *  24;	  	non-compiled	[CE]  ';'  expected	149	None	add
1092	[BUG]  [BUGGY]  Months  +=  24  *  years;  [CE]  cannot  find  symbol  Months  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  +=  24  *  years;	  months    +=    24    *    years;    Months    +=    24    *    years;    	non-compiled	[CE]  cannot  find  symbol  Months	100	None	replace
1093	[BUG]  [BUGGY]  Months  +=  24  *  YEARS;  [CE]  cannot  find  symbol  Months  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  +=  24  *  YEARS;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  +=  24  *  YEARS;	  months    +=    24    *    years;    Months    +=    24    *    years;    	non-compiled	[CE]  cannot  find  symbol  Months	100	None	replace
1094	[BUG]  [BUGGY]  Months  +=  24  *  months;  [CE]  cannot  find  symbol  Months  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  +=  24  *  months;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  +=  24  *  months;	  months    +=    24    *    years;    Months    +=    24    *    years;    	non-compiled	[CE]  cannot  find  symbol  Months	100	None	replace
1095	[BUG]  [BUGGY]  Months  +=  24  *  days;  [CE]  cannot  find  symbol  Months  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  +=  24  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  +=  24  *  days;	  months    +=    24    *    years;    Months    +=    24    *    years;    	non-compiled	[CE]  cannot  find  symbol  Months	100	None	replace
1096	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	2	2	replace
1097	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	2	2	replace
1098	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);	  	non-compiled	[CE]  cannot  find  symbol  Days	211	None	add
1099	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	211	1	add
1100	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	211	1	add
1101	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	non-compiled	[CE]  ';'  expected	106	None	add
1102	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	66	2	replace
1103	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	66	2	replace
1104	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	66	2	replace
1105	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	66	2	replace
1106	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	66	2	replace
1107	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	66	2	replace
1108	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	59	2	replace
1109	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	59	2	replace
1110	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	160	2	replace
1111	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	160	2	replace
1112	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	160	2	replace
1113	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	160	2	replace
1114	[BUG]  [BUGGY]  months    +=    24    *    years;    years  +=  24  *  years;  Years  +=  24  *  years;  years  +=  24  *  years;  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    years  +=  24  *  years;  Years  +=  24  *  years;  years  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        24        *        years;        years    +=    24    *    years;    Years  +=  24  *  years;  years  +=  24  *  years;	  	non-compiled	[CE]  cannot  find  symbol  Years	98	None	add
1115	[BUG]  [BUGGY]  months  +=  12  *  M.years;  [CE]  cannot  find  symbol  years  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  M.years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  M.years;	  months    +=    12    *    M;    	non-compiled	[CE]  cannot  find  symbol  years	214	None	replace
1116	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Months  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    365);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Months	170	None	replace
1117	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);  [CE]  cannot  find  symbol  Hours  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    365);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Hours	170	None	replace
1118	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [CE]  cannot  find  symbol  Hours  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    365);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Hours	170	None	replace
1119	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  years  /  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  24  *  years  /  1;	  months    +=    24    *    years    +    1;    	compilable	  [FE]  ComparisonFailure  	223	2	replace
1120	[BUG]  [BUGGY]  months  +=  24  *  years  /  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  years  /  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  years  /  1;	  months    +=    24    *    years    +    1;    	compilable	  [FE]  ComparisonFailure  	223	2	replace
1121	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
1122	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
1123	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
1124	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
1125	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    days);    	compilable	  [FE]  ComparisonFailure  	105	2	replace
1126	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    days);    	compilable	  [FE]  ComparisonFailure  	105	2	replace
1127	[BUG]  [BUGGY]  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    days);    	non-compiled	[CE]  ';'  expected	105	None	replace
1128	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	4	2	replace
1129	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	4	2	replace
1130	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  dayOfMonths);  [CE]  cannot  find  symbol  Days  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  dayOfMonths);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  dayOfMonths);	  Days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Days	235	None	replace
1131	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Days	41	None	replace
1132	[BUG]  [BUGGY]  Tage  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Tage  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Tage  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Tage  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	          days    +=    end.get(Calendar.HOUR_OF_DAY,    M);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Tage	36	None	replace
1133	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    	compilable	  [FE]  ComparisonFailure  	238	2	replace
1134	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    	compilable	  [FE]  ComparisonFailure  	238	2	replace
1135	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    	compilable	  [FE]  ComparisonFailure  	238	2	replace
1136	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    	compilable	  [FE]  ComparisonFailure  	238	2	replace
1137	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	30	2	replace
1138	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	30	2	replace
1139	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	177	2	replace
1140	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	177	2	replace
1141	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Months  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	177	None	replace
1142	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  24  *  months;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  +=  24  *  months;	  months    +=    24    *    years;    years    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	99	2	replace
1143	[BUG]  [BUGGY]  years  +=  24  *  months;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  24  *  months;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  24  *  months;	  months    +=    24    *    years;    years    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	99	2	replace
1144	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	non-compiled	[CE]  cannot  find  symbol  Days	16	None	replace
1145	[BUG]  [BUGGY]  y  +=  start.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  assign  a  value  to  final  variable  y  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  y  +=  start.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	y  +=  start.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);	  y    +=    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  y	11	None	replace
1146	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end  [CE]  ')'  expected  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end	          Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    	non-compiled	[CE]  ')'  expected	172	None	replace
1147	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	50	None	add
1148	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	50	None	add
1149	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
1150	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
1151	[BUG]  [BUGGY]  months  +=  12  *  24;  Years  +=  12  *  24;  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  24;  Years  +=  12  *  24;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    24;    Years  +=  12  *  24;	  	non-compiled	[CE]  cannot  find  symbol  Years	149	None	add
1152	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  }  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	if(!Token.containsTokenWithValue(tokens,  S))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  }	  if(!Token.containsTokenWithValue(tokens,    M))    {    for(int    y    =    start.get(Calendar.YEAR);    y    +=    y.get(Calendar.HOUR_OF_DAY);    }    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
1153	[BUG]  [BUGGY]  months  +=  24  *  hours;  Month  months  +=  24  *  hours;  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  hours;  Month  months  +=  24  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    hours;    Month  months  +=  24  *  hours;	  	non-compiled	[CE]  ';'  expected	206	None	add
1154	[BUG]  [BUGGY]  months  +=  24  *  hours;  Years  +=  24  *  hours;  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  hours;  Years  +=  24  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    hours;    Years  +=  24  *  hours;	  	non-compiled	[CE]  cannot  find  symbol  Years	206	None	add
1155	[BUG]  [BUGGY]  Month  end  =  tokens.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  tokens.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  tokens.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);	  Month    end    =    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	233	None	replace
1156	[BUG]  [BUGGY]  Month  end  =  m.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  m.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  m.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);	  Month    end    =    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	233	None	replace
1157	[BUG]  [BUGGY]  months  +=  24  *  365;  Month  months  +=  24  *  365;  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  365;  Month  months  +=  24  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    365;    Month  months  +=  24  *  365;	  	non-compiled	[CE]  ';'  expected	82	None	add
1158	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Hours  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    minutes);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Hours	200	None	replace
1159	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	247	1	add
1160	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	247	1	add
1161	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	247	None	add
1162	[BUG]  [BUGGY]  months  +=  365  *  tokens.toString();  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  tokens.toString();  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  tokens.toString();	  months    +=    365    *    tokens;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	189	None	replace
1163	[BUG]  [BUGGY]  Monate  +=  365  *  tokens.length;  [CE]  cannot  find  symbol  Monate  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Monate  +=  365  *  tokens.length;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Monate  +=  365  *  tokens.length;	  months    +=    365    *    tokens;    	non-compiled	[CE]  cannot  find  symbol  Monate	189	None	replace
1164	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	non-compiled	[CE]  ';'  expected	156	None	add
1165	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
1166	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
1167	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    	non-compiled	[CE]  cannot  find  symbol  Days	212	None	replace
1168	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	38	2	add
1169	[BUG]  [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	38	2	add
1170	[BUG]  [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  Days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  Days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    Days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	38	None	add
1171	[BUG]  [BUGGY]  Month  endMillis  +=  start.get(Calendar.YEAR)-  end.get(Calendar.HOUR_OF_DAY);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  endMillis  +=  start.get(Calendar.YEAR)-  end.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  endMillis  +=  start.get(Calendar.YEAR)-  end.get(Calendar.HOUR_OF_DAY);	  Month    endMillis    +=    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  ';'  expected	123	None	replace
1172	[BUG]  [BUGGY]  Month  endMillis  =  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  endMillis  =  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  endMillis  =  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);	  Month    endMillis    +=    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
1173	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Months  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  cannot  find  symbol  Months	227	None	add
1174	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
1175	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
1176	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
1177	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
1178	[BUG]  [BUGGY]  months    +=    365    *    years;    months  +=  365  *  years;  Years  +=  365  *  years;  months  +=  365  *  years;  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    months  +=  365  *  years;  Years  +=  365  *  years;  months  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        365        *        years;        months    +=    365    *    years;    Years  +=  365  *  years;  months  +=  365  *  years;	  	non-compiled	[CE]  cannot  find  symbol  Years	71	None	add
1179	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	28	2	replace
1180	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	28	2	replace
1181	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	67	1	add
1182	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	67	1	add
1183	[BUG]  [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Tage  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Tage  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Tage  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    Tage  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Tage	33	None	add
1184	[BUG]  [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Tagen  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Tagen  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Tagen  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    Tagen  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Tagen	33	None	add
1185	[BUG]  [BUGGY]  days  +=  365  *  tokens;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  365  *  tokens;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  +=  365  *  tokens;	  months    +=    365    *    years;    days    +=    365    *    years;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	77	None	replace
1186	[BUG]  [BUGGY]  months  +=  365  *  years;  days  +=  365  *  M;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  years;  days  +=  365  *  M;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  years;  days  +=  365  *  M;	  months    +=    365    *    years;    days    +=    365    *    years;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	77	None	replace
1187	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Days	197	None	replace
1188	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	197	2	replace
1189	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	197	2	replace
1190	[BUG]  [BUGGY]  Monate  +=  12  *  years  +  1;  [CE]  cannot  find  symbol  Monate  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Monate  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Monate  +=  12  *  years  +  1;	  months    +=    12    *    years    +    1;    Month    months    +=    12    *    years    +    1;    	non-compiled	[CE]  cannot  find  symbol  Monate	163	None	replace
1191	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  hours  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  365  *  hours  +  1;	  months    +=    365    *    years    +    1;    	compilable	  [FE]  ComparisonFailure  	57	2	replace
1192	[BUG]  [BUGGY]  months  +=  365  *  hours  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  hours  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  hours  +  1;	  months    +=    365    *    years    +    1;    	compilable	  [FE]  ComparisonFailure  	57	2	replace
1193	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	non-compiled	[CE]  cannot  find  symbol  Days	69	None	add
1194	[BUG]  [BUGGY]  y  +=  start.get(Calendar.MONTH)-  end.get(Calendar.YEAR);  [CE]  cannot  assign  a  value  to  final  variable  y  [FE]                        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  y  +=  start.get(Calendar.MONTH)-  end.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	y  +=  start.get(Calendar.MONTH)-  end.get(Calendar.YEAR);	  y    +=    end.get(Calendar.MONTH)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  y	138	None	replace
1195	[BUG]  [BUGGY]  months    +=    12    *    365;    days  +=  12  *  365;  Monate  +=  12  *  365;  days  +=  12  *  365;  [CE]  cannot  find  symbol  Monate  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    days  +=  12  *  365;  Monate  +=  12  *  365;  days  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        365;        days    +=    12    *    365;    Monate  +=  12  *  365;  days  +=  12  *  365;	  	non-compiled	[CE]  cannot  find  symbol  Monate	146	None	add
1196	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
1197	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
1198	[BUG]  [BUGGY]  M  value  +=  end.get(Calendar.HOUR_OF_DAY);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  M  value  +=  end.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	M  value  +=  end.get(Calendar.HOUR_OF_DAY);	  value    +=    end.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  ';'  expected	164	None	replace
1199	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [CE]  cannot  find  symbol  Months  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	89	None	replace
1200	[BUG]  [BUGGY]  months  +=  12  *  days  +  365  *  M;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  365  *  M;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  days  +  365  *  M;	  months    +=    12    *    days    +    365    *    days;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	188	None	replace
1201	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
1202	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
1203	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
1204	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
1205	[BUG]  [BUGGY]  months    +=    365    *    years;    years  +=  365  *  years;  Years  +=  365  *  years;  years  +=  365  *  years;  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    years  +=  365  *  years;  Years  +=  365  *  years;  years  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        365        *        years;        years    +=    365    *    years;    Years  +=  365  *  years;  years  +=  365  *  years;	  	non-compiled	[CE]  cannot  find  symbol  Years	73	None	add
1206	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	165	1	add
1207	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	165	1	add
1208	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	non-compiled	[CE]  ';'  expected	165	None	add
1209	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	165	1	add
1210	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	165	1	add
1211	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	24	None	add
1212	[BUG]  [BUGGY]  months  +=  12  *  365;  days  +=  12  *  y;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  365;  days  +=  12  *  y;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  365;  days  +=  12  *  y;	  months    +=    12    *    365;    days    +=    12    *    365;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	147	None	replace
1213	[BUG]  [BUGGY]  months  +=  365  *  days;  Years  +=  365  *  years;  [CE]  cannot  find  symbol  Years  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  days;  Years  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  days;  Years  +=  365  *  years;	  months    +=    365    *    years;    Years    +=    365    *    years;    	non-compiled	[CE]  cannot  find  symbol  Years	78	None	replace
1214	[BUG]  [BUGGY]  months  +=  365  *  years;  Years  +=  365  *  days;  [CE]  cannot  find  symbol  Years  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  years;  Years  +=  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  years;  Years  +=  365  *  days;	  months    +=    365    *    years;    Years    +=    365    *    years;    	non-compiled	[CE]  cannot  find  symbol  Years	78	None	replace
1215	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Months  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	non-compiled	[CE]  cannot  find  symbol  Months	7	None	replace
1216	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	7	2	replace
1217	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	7	2	replace
1218	[BUG]  [BUGGY]  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	non-compiled	[CE]  ';'  expected	252	None	replace
1219	[BUG]  [BUGGY]  Tag  y  =  end.get(Calendar.YEAR)-  start,  end.get(Calendar.HOUR_OF_DAY);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Tag  y  =  end.get(Calendar.YEAR)-  start,  end.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Tag  y  =  end.get(Calendar.YEAR)-  start,  end.get(Calendar.HOUR_OF_DAY);	  Tag    y    =    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  ';'  expected	234	None	replace
1220	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	46	None	add
1221	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
1222	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
1223	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	46	None	add
1224	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  12  *  365;  months  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  +=  12  *  365;  months  +=  12  *  365;	  months    +=    12    *    365;    months    +=    12    *    365;    	compilable	  [FE]  ComparisonFailure  	142	2	replace
1225	[BUG]  [BUGGY]  years  +=  12  *  365;  months  +=  12  *  365;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  12  *  365;  months  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  12  *  365;  months  +=  12  *  365;	  months    +=    12    *    365;    months    +=    12    *    365;    	compilable	  [FE]  ComparisonFailure  	142	2	replace
1226	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  365  *  365;	  months    +=    12    *    365;    months    +=    12    *    365;    	compilable	  [FE]  ComparisonFailure  	142	2	replace
1227	[BUG]  [BUGGY]  months  +=  365  *  365;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  365;	  months    +=    12    *    365;    months    +=    12    *    365;    	compilable	  [FE]  ComparisonFailure  	142	2	replace
1228	[BUG]  [BUGGY]  months  +=  12  *  years  /  1;  Years  +=  12  *  years  /  1;  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  years  /  1;  Years  +=  12  *  years  /  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    years    /    1;    Years  +=  12  *  years  /  1;	  	non-compiled	[CE]  cannot  find  symbol  Years	152	None	add
1229	[BUG]  [BUGGY]  ValueUtils.copyValue(value,  start,  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.copyValue(value,  start,  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.copyValue(value,  start,  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);	  y    +=    start.get(Calendar.YEAR)-    end.get(Calendar.YEAR);    	non-compiled	[CE]  ')'  expected	186	None	replace
1230	[BUG]  [BUGGY]  Month  months  +=  24  *  hours;  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  months  +=  24  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  months  +=  24  *  hours;	  months    +=    24    *    years;    Month    months    +=    24    *    years;    	non-compiled	[CE]  ';'  expected	193	None	replace
1231	[BUG]  [BUGGY]  Tagen  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Tagen  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Tagen  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Tagen  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	          days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Tagen	34	None	replace
1232	[BUG]  [BUGGY]  Month  value  =  tokens.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  value  =  tokens.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  value  =  tokens.get(Calendar.MONTH)-  start.get(Calendar.MONTH);	  Month    value    =    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  find  symbol	225	None	replace
1233	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	non-compiled	[CE]  ';'  expected	253	None	add
1234	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	253	None	add
1235	[BUG]  [BUGGY]  y  +=  start.get(Calendar.MONTH)-  end.get(Calendar.DAY_OF_YEAR);  [CE]  cannot  assign  a  value  to  final  variable  y  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  y  +=  start.get(Calendar.MONTH)-  end.get(Calendar.DAY_OF_YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	y  +=  start.get(Calendar.MONTH)-  end.get(Calendar.DAY_OF_YEAR);	  y    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_YEAR);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  y	180	None	replace
1236	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  [CE]  cannot  find  symbol  Days  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_YEAR,  days);	  Days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Days	246	None	replace
1237	[BUG]  [BUGGY]  months  +=  24  *  years  +  1;  Month  months  +=  24  *  years  +  1;  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  years  +  1;  Month  months  +=  24  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    years    +    1;    Month  months  +=  24  *  years  +  1;	  	non-compiled	[CE]  ';'  expected	222	None	add
1238	[BUG]  [BUGGY]  if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  months  -=  reduce  [CE]  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  months  -=  reduce  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  months  -=  reduce	          if(!Token.containsTokenWithValue(tokens,    M))    {    for(int    y    =    start.get(Calendar.YEAR);    y    +=    y.get(Calendar.HOUR_OF_DAY);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  	231	None	replace
1239	[BUG]  [BUGGY]  if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY  [CE]  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY	          if(!Token.containsTokenWithValue(tokens,    M))    {    for(int    y    =    start.get(Calendar.YEAR);    y    +=    y.get(Calendar.HOUR_OF_DAY);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  	231	None	replace
1240	[BUG]  [BUGGY]  !Token.containsTokenWithValue(tokens,  S))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAnd  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  !Token.containsTokenWithValue(tokens,  S))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAnd  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	!Token.containsTokenWithValue(tokens,  S))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  y.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAnd	          if(!Token.containsTokenWithValue(tokens,    M))    {    for(int    y    =    start.get(Calendar.YEAR);    y    +=    y.get(Calendar.HOUR_OF_DAY);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  not  a  statement	231	None	replace
1241	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  Days  +=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  Days  +=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    Days  +=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	201	None	add
1242	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1243	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1244	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Months  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Months	60	None	add
1245	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
1246	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
1247	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	40	None	add
1248	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
1249	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
1250	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	non-compiled	[CE]  cannot  find  symbol  Days	157	None	replace
1251	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  +=  24  *  years;	  months    +=    24    *    years;    Years    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	103	2	replace
1252	[BUG]  [BUGGY]  years  +=  24  *  years;  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  24  *  years;	  months    +=    24    *    years;    Years    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	103	2	replace
1253	[BUG]  [BUGGY]  ValueUtils.copyValue(value,  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.copyValue(value,  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.copyValue(value,  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);	  value    +=    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  ')'  expected	121	None	replace
1254	[BUG]  [BUGGY]  M  value  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  M  value  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	M  value  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);	  value    +=    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  ';'  expected	121	None	replace
1255	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  years;  days  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  365  *  years;  days  +=  24  *  years;	  months    +=    24    *    years;    days    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	102	2	replace
1256	[BUG]  [BUGGY]  months  +=  365  *  years;  days  +=  24  *  years;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  years;  days  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  years;  days  +=  24  *  years;	  months    +=    24    *    years;    days    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	102	2	replace
1257	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [CE]  cannot  find  symbol  Months  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    	non-compiled	[CE]  cannot  find  symbol  Months	92	None	replace
1258	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [CE]  cannot  find  symbol  Months  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    	non-compiled	[CE]  cannot  find  symbol  Months	92	None	replace
1259	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	non-compiled	[CE]  cannot  find  symbol  Days	68	None	replace
1260	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
1261	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
1262	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	6	None	add
1263	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	6	None	add
1264	[BUG]  [BUGGY]  Monate  +=  12  *  days;  [CE]  cannot  find  symbol  Monate  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Monate  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Monate  +=  12  *  days;	  months    +=    12    *    days;    Month    months    +=    12    *    days;    	non-compiled	[CE]  cannot  find  symbol  Monate	117	None	replace
1265	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	58	1	add
1266	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	58	1	add
1267	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Months  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Months	58	None	add
1268	[BUG]  [BUGGY]  Monate  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Monate  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Monate  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Monate  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Monate	14	None	replace
1269	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
1270	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
1271	[BUG]  [BUGGY]  Month  end  =  m.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  m.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  m.get(Calendar.YEAR)-  start.get(Calendar.YEAR);	  Month    end    =    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol	240	None	replace
1272	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	220	1	add
1273	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	220	1	add
1274	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	220	1	add
1275	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	220	1	add
1276	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	220	None	add
1277	[BUG]  [BUGGY]  years  +=  24  *  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  24  *  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  24  *  DateTimeConstants.MILLIS_PER_SECOND;	  months    +=    24    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	84	None	replace
1278	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	44	None	add
1279	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
1280	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
1281	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  ';'  expected	209	None	add
1282	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	209	1	add
1283	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	209	1	add
1284	[BUG]  [BUGGY]  months  +=  365  *  years  +  1;  Years  +=  365  *  years  +  1;  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  years  +  1;  Years  +=  365  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    years    +    1;    Years  +=  365  *  years  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Years	56	None	add
1285	[BUG]  [BUGGY]  y  +=  start.get(Calendar.YEAR)-  end.get(Calendar.MONTH);  [CE]  cannot  assign  a  value  to  final  variable  y  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  y  +=  start.get(Calendar.YEAR)-  end.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	y  +=  start.get(Calendar.YEAR)-  end.get(Calendar.MONTH);	  y    +=    end.get(Calendar.YEAR)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  y	120	None	replace
1286	[BUG]  [BUGGY]  ValueUtils.copyValue(value,  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.copyValue(value,  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.copyValue(value,  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);	  value    +=    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  ')'  expected	122	None	replace
1287	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	8	None	add
1288	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
1289	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
1290	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	8	None	add
1291	[BUG]  [BUGGY]  months    +=    365    *    years;    days  +=  365  *  years;  Years  +=  365  *  years;  days  +=  365  *  years;  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    365    *    years;    days  +=  365  *  years;  Years  +=  365  *  years;  days  +=  365  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        365        *        years;        days    +=    365    *    years;    Years  +=  365  *  years;  days  +=  365  *  years;	  	non-compiled	[CE]  cannot  find  symbol  Years	76	None	add
1292	[BUG]  [BUGGY]  months  +=  365  *  S;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  S;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  S;	  months    +=    365    *    M;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	192	None	replace
1293	[BUG]  [BUGGY]  months  +=  365  *  M.months;  [CE]  cannot  find  symbol  months  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  M.months;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  M.months;	  months    +=    365    *    M;    	non-compiled	[CE]  cannot  find  symbol  months	192	None	replace
1294	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	249	1	add
1295	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	249	1	add
1296	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	249	1	add
1297	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	249	1	add
1298	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	249	None	add
1299	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	64	2	replace
1300	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	64	2	replace
1301	[BUG]  [BUGGY]  ValueUtils.copyValue(value,  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.copyValue(value,  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.copyValue(value,  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);	  value    +=    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  ')'  expected	136	None	replace
1302	[BUG]  [BUGGY]  ValueUtils.copyValue(start,  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.copyValue(start,  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.copyValue(start,  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);	  value    +=    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  ')'  expected	136	None	replace
1303	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
1304	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
1305	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
1306	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
1307	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	87	None	add
1308	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [CE]  cannot  find  symbol  Days  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	87	None	add
1309	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
1310	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
1311	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  ';'  expected	196	None	add
1312	[BUG]  [BUGGY]  months  +=  365  *  days;  Years  +=  365  *  days;  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  days;  Years  +=  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    days;    Years  +=  365  *  days;	  	non-compiled	[CE]  cannot  find  symbol  Years	54	None	add
1313	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  years  +  1;  days  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  365  *  years  +  1;  days  +=  12  *  years  +  1;	  months    +=    12    *    years    +    1;    days    +=    12    *    years    +    1;    	compilable	  [FE]  ComparisonFailure  	131	2	replace
1314	[BUG]  [BUGGY]  months  +=  365  *  years  +  1;  days  +=  12  *  years  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  years  +  1;  days  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  years  +  1;  days  +=  12  *  years  +  1;	  months    +=    12    *    years    +    1;    days    +=    12    *    years    +    1;    	compilable	  [FE]  ComparisonFailure  	131	2	replace
1315	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	237	None	add
1316	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.H  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.H  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.H	  	non-compiled	[CE]  ')'  expected	237	None	add
1317	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	237	1	add
1318	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	237	1	add
1319	[BUG]  [BUGGY]  months    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  Monate  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  [CE]  cannot  find  symbol  Monate  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    months  +=  12  *  years  +  1;  Monate  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        years        +        1;        months    +=    12    *    years    +    1;    Monate  +=  12  *  years  +  1;  months  +=  12  *  years  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Monate	125	None	add
1320	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	218	1	add
1321	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	218	1	add
1322	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	218	None	add
1323	[BUG]  [BUGGY]  months    +=    12    *    days;    days  +=  12  *  days;  Days  +=  12  *  days;  days  +=  12  *  days;  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    days  +=  12  *  days;  Days  +=  12  *  days;  days  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        days;        days    +=    12    *    days;    Days  +=  12  *  days;  days  +=  12  *  days;	  	non-compiled	[CE]  cannot  find  symbol  Days	115	None	add
1324	[BUG]  [BUGGY]  Year  end  =  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Year  end  =  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Year  end  =  end.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);	  year    +=    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	232	None	replace
1325	[BUG]  [BUGGY]  ValueUtils.copyValue(value,  end.get(Calendar.YEAR));  [CE]  cannot  find  symbol  value  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.copyValue(value,  end.get(Calendar.YEAR));  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.copyValue(value,  end.get(Calendar.YEAR));	  value    +=    end.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol  value	140	None	replace
1326	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  HOUR_OF_DAY);  [CE]  cannot  find  symbol  Hours  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  HOUR_OF_DAY);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    	non-compiled	[CE]  cannot  find  symbol  Hours	203	None	replace
1327	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
1328	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
1329	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
1330	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
1331	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
1332	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
1333	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days;  days  +=  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  12  *  days;  days  +=  365  *  days;	  months    +=    12    *    days;    days    +=    12    *    days;    	compilable	  [FE]  ComparisonFailure  	116	2	replace
1334	[BUG]  [BUGGY]  months  +=  12  *  days;  days  +=  365  *  days;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days;  days  +=  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  days;  days  +=  365  *  days;	  months    +=    12    *    days;    days    +=    12    *    days;    	compilable	  [FE]  ComparisonFailure  	116	2	replace
1335	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  days;  days  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  365  *  days;  days  +=  12  *  days;	  months    +=    12    *    days;    days    +=    12    *    days;    	compilable	  [FE]  ComparisonFailure  	116	2	replace
1336	[BUG]  [BUGGY]  months  +=  365  *  days;  days  +=  12  *  days;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  days;  days  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  days;  days  +=  12  *  days;	  months    +=    12    *    days;    days    +=    12    *    days;    	compilable	  [FE]  ComparisonFailure  	116	2	replace
1337	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Months  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Months	243	None	add
1338	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  days;  years  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  365  *  days;  years  +=  12  *  days;	  months    +=    12    *    days;    years    +=    12    *    days;    	compilable	  [FE]  ComparisonFailure  	113	2	replace
1339	[BUG]  [BUGGY]  months  +=  365  *  days;  years  +=  12  *  days;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  days;  years  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  days;  years  +=  12  *  days;	  months    +=    12    *    days;    years    +=    12    *    days;    	compilable	  [FE]  ComparisonFailure  	113	2	replace
1340	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
1341	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
1342	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
1343	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
1344	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	178	None	add
1345	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
1346	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
1347	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]            ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	178	None	add
1348	[BUG]  [BUGGY]  Monaten  +=  12  *  days;  [CE]  cannot  find  symbol  Monaten  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Monaten  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Monaten  +=  12  *  days;	  months    +=    12    *    days;    Months    +=    12    *    days;    	non-compiled	[CE]  cannot  find  symbol  Monaten	114	None	replace
1349	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,	          days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  ')'  expected	37	None	replace
1350	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,	          days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  ')'  expected	37	None	replace
1351	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	251	1	add
1352	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	251	1	add
1353	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Month  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  ';'  expected	251	None	add
1354	[BUG]  [BUGGY]  months    +=    24    *    years;    days  +=  24  *  years;  Years  +=  24  *  years;  days  +=  24  *  years;  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    24    *    years;    days  +=  24  *  years;  Years  +=  24  *  years;  days  +=  24  *  years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        24        *        years;        days    +=    24    *    years;    Years  +=  24  *  years;  days  +=  24  *  years;	  	non-compiled	[CE]  cannot  find  symbol  Years	101	None	add
1355	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  Days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    Days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	229	None	add
1356	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Months  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  Months    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Months	22	None	replace
1357	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Months  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  Months    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Months	22	None	replace
1358	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  Months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Months  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  Months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    days);    Months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  cannot  find  symbol  Months	104	None	add
1359	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	104	1	add
1360	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	104	1	add
1361	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
1362	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
1363	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	85	None	add
1364	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
1365	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
1366	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
1367	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
1368	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  minutes);  [CE]  cannot  find  symbol  Hours  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  minutes);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  minutes);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    minutes);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Hours	168	None	replace
1369	[BUG]  [BUGGY]  Day  end  =  this.timezone.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Day  end  =  this.timezone.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Day  end  =  this.timezone.get(Calendar.HOUR_OF_DAY);	  Day    end    =    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
1370	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Months  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  Days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	194	None	replace
1371	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Hours  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  Days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	non-compiled	[CE]  cannot  find  symbol  Hours	194	None	replace
1372	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
1373	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
1374	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        years        +        1;        years    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	127	2	add
1375	[BUG]  [BUGGY]  months    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        years        +        1;        years    +=    12    *    years    +    1;    years  +=  12  *  years  +  1;  years  +=  12  *  years  +  1;	  	compilable	  [FE]  ComparisonFailure  	127	2	add
1376	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
1377	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
1378	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	52	None	add
1379	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
1380	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
1381	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  YEARS);  [CE]  cannot  find  symbol  Months  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  YEARS);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  YEARS);	  Months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	93	None	replace
1382	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [CE]  cannot  find  symbol  Months  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    Days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	non-compiled	[CE]  cannot  find  symbol  Months	26	None	replace
1383	[BUG]  [BUGGY]  months  +=  365  *  hours;  Years  +=  365  *  hours;  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  hours;  Years  +=  365  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    365    *    hours;    Years  +=  365  *  hours;	  	non-compiled	[CE]  cannot  find  symbol  Years	190	None	add
1384	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Months  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  Months    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Months	135	None	replace
1385	[BUG]  [BUGGY]  months  +=  12  *  hours;  Month  months  +=  12  *  hours;  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  hours;  Month  months  +=  12  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    hours;    Month  months  +=  12  *  hours;	  	non-compiled	[CE]  ';'  expected	198	None	add
1386	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	181	None	add
1387	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	181	1	add
1388	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	181	1	add
1389	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	181	None	add
1390	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  [CE]  cannot  find  symbol  Hours  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Hours	241	None	replace
1391	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    years  +=  12  *  365;  years  +=  12  *  365;  years  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months        +=        12        *        365;        years    +=    12    *    365;    years  +=  12  *  365;  years  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	143	2	add
1392	[BUG]  [BUGGY]  months    +=    12    *    365;    years  +=  12  *  365;  years  +=  12  *  365;  years  +=  12  *  365;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    years  +=  12  *  365;  years  +=  12  *  365;  years  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        365;        years    +=    12    *    365;    years  +=  12  *  365;  years  +=  12  *  365;	  	compilable	  [FE]  ComparisonFailure  	143	2	add
1393	[BUG]  [BUGGY]  months    +=    12    *    365;    years  +=  12  *  365;  Years  +=  12  *  365;  years  +=  12  *  365;  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    years  +=  12  *  365;  Years  +=  12  *  365;  years  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        365;        years    +=    12    *    365;    Years  +=  12  *  365;  years  +=  12  *  365;	  	non-compiled	[CE]  cannot  find  symbol  Years	143	None	add
1394	[BUG]  [BUGGY]  Year  end  =  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Year  end  =  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Year  end  =  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);	  year    +=    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol	239	None	replace
1395	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);	  year    +=    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	compilable	  [FE]  ComparisonFailure  	239	2	replace
1396	[BUG]  [BUGGY]  years  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  end.get(Calendar.YEAR)-  start.get(Calendar.YEAR);	  year    +=    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	compilable	  [FE]  ComparisonFailure  	239	2	replace
1397	[BUG]  [BUGGY]  months    +=    12    *    days;    months  +=  12  *  days;  Monate  +=  12  *  days;  months  +=  12  *  days;  [CE]  cannot  find  symbol  Monate  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    days;    months  +=  12  *  days;  Monate  +=  12  *  days;  months  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        days;        months    +=    12    *    days;    Monate  +=  12  *  days;  months  +=  12  *  days;	  	non-compiled	[CE]  cannot  find  symbol  Monate	110	None	add
1398	[BUG]  [BUGGY]  ValueUtils.copyValue(value,  start.get(Calendar.YEAR));  [CE]  cannot  find  symbol  value  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.copyValue(value,  start.get(Calendar.YEAR));  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.copyValue(value,  start.get(Calendar.YEAR));	  y    +=    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol  value	139	None	replace
1399	[BUG]  [BUGGY]  months  +=  24  *  M.years;  [CE]  cannot  find  symbol  years  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  M.years;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  M.years;	  months    +=    24    *    M;    	non-compiled	[CE]  cannot  find  symbol  years	208	None	replace
1400	[BUG]  [BUGGY]  months  +=  24  *  M  -  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  M  -  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  M  -  1;	  months    +=    24    *    M;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	208	None	replace
1401	[BUG]  [BUGGY]  months  +=  24  *  y;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  y;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  y;	  months    +=    24    *    M;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	208	None	replace
1402	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	1	None	add
1403	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	1	None	add
1404	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  12  *  months  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  +=  12  *  months  +  1;	  months    +=    12    *    years    +    1;    years    +=    12    *    years    +    1;    	compilable	  [FE]  ComparisonFailure  	128	2	replace
1405	[BUG]  [BUGGY]  years  +=  12  *  months  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  12  *  months  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  12  *  months  +  1;	  months    +=    12    *    years    +    1;    years    +=    12    *    years    +    1;    	compilable	  [FE]  ComparisonFailure  	128	2	replace
1406	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	154	None	add
1407	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	48	None	add
1408	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	48	1	add
1409	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	48	1	add
1410	[BUG]  [BUGGY]  months    +=    12    *    365;    months  +=  12  *  365;  Monate  +=  12  *  365;  months  +=  12  *  365;  [CE]  cannot  find  symbol  Monate  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    months  +=  12  *  365;  Monate  +=  12  *  365;  months  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        365;        months    +=    12    *    365;    Monate  +=  12  *  365;  months  +=  12  *  365;	  	non-compiled	[CE]  cannot  find  symbol  Monate	141	None	add
1411	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  [CE]  cannot  find  symbol  Hours  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Hours	242	None	replace
1412	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  365);  days  -=  reduceAndCorrect(start,  end,	  Months    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  ')'  expected	19	None	replace
1413	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	non-compiled	[CE]  cannot  find  symbol  Days	15	None	add
1414	[BUG]  [BUGGY]  Month  month  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  month  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  month  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH);	  month    +=    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	137	None	replace
1415	[BUG]  [BUGGY]  month  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH  -  1);  [CE]  cannot  find  symbol  month  [FE]                        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  month  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH  -  1);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	month  +=  end.get(Calendar.MONTH)-  start.get(Calendar.MONTH  -  1);	  month    +=    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  find  symbol  month	137	None	replace
1416	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  years  *  2;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  12  *  years  *  2;	  months    +=    12    *    years    /    1;    	compilable	  [FE]  ComparisonFailure  	153	2	replace
1417	[BUG]  [BUGGY]  months  +=  12  *  years  *  2;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  years  *  2;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  years  *  2;	  months    +=    12    *    years    /    1;    	compilable	  [FE]  ComparisonFailure  	153	2	replace
1418	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  /  2;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  12  *  days  /  2;	  months    +=    12    *    years    /    1;    	compilable	  [FE]  ComparisonFailure  	153	2	replace
1419	[BUG]  [BUGGY]  months  +=  12  *  days  /  2;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  /  2;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  days  /  2;	  months    +=    12    *    years    /    1;    	compilable	  [FE]  ComparisonFailure  	153	2	replace
1420	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	216	1	add
1421	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	216	1	add
1422	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	90	1	add
1423	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	90	1	add
1424	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	90	None	add
1425	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	non-compiled	[CE]  cannot  find  symbol  Days	161	None	add
1426	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	161	1	add
1427	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	161	1	add
1428	[BUG]  [BUGGY]  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Months    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	non-compiled	[CE]  ';'  expected	183	None	replace
1429	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
1430	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
1431	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
1432	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
1433	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	159	1	add
1434	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	159	1	add
1435	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	159	1	add
1436	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	159	1	add
1437	[BUG]  [BUGGY]  ValueUtils.copyValue(value,  start,  y);  [CE]  cannot  find  symbol  value  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.copyValue(value,  start,  y);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.copyValue(value,  start,  y);	  y    +=    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol  value	139	None	replace
1438	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
1439	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
1440	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
1441	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
1442	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
1443	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
1444	[BUG]  [BUGGY]  years  +=  365  *  YEARS;  [CE]  cannot  find  symbol  YEARS  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  365  *  YEARS;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  365  *  YEARS;	  months    +=    365    *    years;    years    +=    365    *    years;    	non-compiled	[CE]  cannot  find  symbol  YEARS	74	None	replace
1445	[BUG]  [BUGGY]  Month  months  +=  12  *  hours;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  months  +=  12  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  months  +=  12  *  hours;	  months    +=    12    *    days;    Month    months    +=    12    *    days;    	non-compiled	[CE]  ';'  expected	117	None	replace
1446	[BUG]  [BUGGY]  Month  months  +=  12  *  M;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  months  +=  12  *  M;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  months  +=  12  *  M;	  months    +=    12    *    365;    Month    months    +=    12    *    365;    	non-compiled	[CE]  ';'  expected	148	None	replace
1447	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days  +  1);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days  +  1);	  days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    	compilable	  [FE]  ComparisonFailure  	202	2	replace
1448	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days  +  1);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days  +  1);	  days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    	compilable	  [FE]  ComparisonFailure  	202	2	replace
1449	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	220	1	add
1450	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	220	1	add
1451	[BUG]  [BUGGY]  ValueUtils.copyValue(value,  end,  values);  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.copyValue(value,  end,  values);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.copyValue(value,  end,  values);	  value    +=    end.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol  value	164	None	replace
1452	[BUG]  [BUGGY]  Month  end  =  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);	  y    +=    end.get(Calendar.HOUR_OF_DAY)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
1453	[BUG]  [BUGGY]  year  +=  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  year  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  year  +=  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	year  +=  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);	  y    +=    end.get(Calendar.HOUR_OF_DAY)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol  year	10	None	replace
1454	[BUG]  [BUGGY]  Tag  value  =  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Tag  value  =  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Tag  value  =  end.get(Calendar.HOUR_OF_DAY)-  start.get(Calendar.HOUR_OF_DAY);	  y    +=    end.get(Calendar.HOUR_OF_DAY)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
1455	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);	          days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	34	2	replace
1456	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);	          days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	34	2	replace
1457	[BUG]  [BUGGY]  ValueUtils.setValue(value,  end,  Calendar.MONTH)-  start.get(Calendar.MONTH);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.setValue(value,  end,  Calendar.MONTH)-  start.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.setValue(value,  end,  Calendar.MONTH)-  start.get(Calendar.MONTH);	  value    +=    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  not  a  statement	136	None	replace
1458	[BUG]  [BUGGY]  ValueUtils.saveValue(end,  values,  m)-  start.get(Calendar.MONTH);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.saveValue(end,  values,  m)-  start.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.saveValue(end,  values,  m)-  start.get(Calendar.MONTH);	  value    +=    end.get(Calendar.MONTH)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  not  a  statement	136	None	replace
1459	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [CE]  cannot  find  symbol  Months  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	238	None	replace
1460	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	66	2	replace
1461	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    	compilable	  [FE]  ComparisonFailure  	66	2	replace
1462	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  [CE]  ')'  expected  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,	          Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    	non-compiled	[CE]  ')'  expected	173	None	replace
1463	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	90	1	add
1464	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	90	1	add
1465	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	90	1	add
1466	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  +=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	90	1	add
1467	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  11  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  11  *  years  +  1;	  months    +=    12    *    years    +    1;    months    +=    12    *    years    +    1;    	compilable	  [FE]  ComparisonFailure  	126	2	replace
1468	[BUG]  [BUGGY]  months  +=  11  *  years  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  11  *  years  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  11  *  years  +  1;	  months    +=    12    *    years    +    1;    months    +=    12    *    years    +    1;    	compilable	  [FE]  ComparisonFailure  	126	2	replace
1469	[BUG]  [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [CE]  cannot  find  symbol  Days  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  cannot  find  symbol  Days	177	None	replace
1470	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;	  months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	244	2	replace
1471	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;	  months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	244	2	replace
1472	[BUG]  [BUGGY]  months  +=  24  *  DateTimeConstants.HOUR_OF_DAY;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  DateTimeConstants.HOUR_OF_DAY;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  DateTimeConstants.HOUR_OF_DAY;	  months    +=    24    *    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	79	None	replace
1473	[BUG]  [BUGGY]  months  +=  365  *  tokens.trim();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  tokens.trim();  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  tokens.trim();	  months    +=    365    *    tokens;    	non-compiled	[CE]  cannot  find  symbol	189	None	replace
1474	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
1475	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
1476	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
1477	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
1478	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
1479	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
1480	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
1481	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	178	1	add
1482	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
1483	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
1484	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
1485	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	156	1	add
1486	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
1487	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
1488	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
1489	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
1490	[BUG]  [BUGGY]  months  +=  365  *  YEARS  +  1;  [CE]  cannot  find  symbol  YEARS  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  YEARS  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  YEARS  +  1;	  months    +=    365    *    years    +    1;    	non-compiled	[CE]  cannot  find  symbol  YEARS	57	None	replace
1491	[BUG]  [BUGGY]  Months  +=  24  *  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  cannot  find  symbol  Months  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  +=  24  *  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  +=  24  *  DateTimeConstants.MILLIS_PER_SECOND;	  months    +=    24    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  cannot  find  symbol  Months	84	None	replace
1492	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	106	2	add
1493	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	106	2	add
1494	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	106	2	add
1495	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);	  	compilable	  [FE]  ComparisonFailure  	106	2	add
1496	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	218	1	add
1497	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	218	1	add
1498	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	218	1	add
1499	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	218	1	add
1500	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	161	1	add
1501	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	161	1	add
1502	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	161	1	add
1503	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	161	1	add
1504	[BUG]  [BUGGY]  for(int  y  =  start.get(Calendar.YEAR);  y  +=  end.get(Calendar.HOUR_OF_DAY);  [CE]  ')'  expected  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  for(int  y  =  start.get(Calendar.YEAR);  y  +=  end.get(Calendar.HOUR_OF_DAY);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	for(int  y  =  start.get(Calendar.YEAR);  y  +=  end.get(Calendar.HOUR_OF_DAY);	  if(!Token.containsTokenWithValue(tokens,    M))    {    for(int    y    =    start.get(Calendar.YEAR);    y    +=    y.get(Calendar.HOUR_OF_DAY);    }    	non-compiled	[CE]  ')'  expected	205	None	replace
1505	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
1506	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
1507	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
1508	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
1509	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
1510	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
1511	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
1512	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	46	1	add
1513	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Months  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  +=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days    +=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	non-compiled	[CE]  cannot  find  symbol  Months	91	None	replace
1514	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
1515	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
1516	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
1517	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
1518	[BUG]  [BUGGY]  Month  end  =  s.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  s.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  s.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);	  Month    end    =    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	233	None	replace
1519	[BUG]  [BUGGY]  Month  end  =  this.years.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  this.years.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  this.years.get(Calendar.YEAR)-  start.get(Calendar.HOUR_OF_DAY);	  Month    end    =    end.get(Calendar.YEAR)-    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	233	None	replace
1520	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1521	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1522	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1523	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1524	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1525	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1526	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1527	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	60	1	add
1528	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [CE]  cannot  find  symbol  Months  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    	non-compiled	[CE]  cannot  find  symbol  Months	254	None	replace
1529	[BUG]  [BUGGY]  days  +=  365  *  M;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  365  *  M;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  +=  365  *  M;	  months    +=    365    *    years;    days    +=    365    *    years;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	77	None	replace
1530	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	32	2	replace
1531	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	32	2	replace
1532	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  365  *  seconds;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  12  *  days  +  365  *  seconds;	  months    +=    12    *    days    +    365    *    days;    	compilable	  [FE]  ComparisonFailure  	188	2	replace
1533	[BUG]  [BUGGY]  months  +=  12  *  days  +  365  *  seconds;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  365  *  seconds;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  days  +  365  *  seconds;	  months    +=    12    *    days    +    365    *    days;    	compilable	  [FE]  ComparisonFailure  	188	2	replace
1534	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  365  *  minutes;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  12  *  days  +  365  *  minutes;	  months    +=    12    *    days    +    365    *    days;    	compilable	  [FE]  ComparisonFailure  	188	2	replace
1535	[BUG]  [BUGGY]  months  +=  12  *  days  +  365  *  minutes;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  365  *  minutes;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  12  *  days  +  365  *  minutes;	  months    +=    12    *    days    +    365    *    days;    	compilable	  [FE]  ComparisonFailure  	188	2	replace
1536	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
1537	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
1538	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
1539	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
1540	[BUG]  [BUGGY]  Months  +=  365  *  days;  [CE]  cannot  find  symbol  Months  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  +=  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  +=  365  *  days;	  months    +=    365    *    years;    Months    +=    365    *    years;    	non-compiled	[CE]  cannot  find  symbol  Months	75	None	replace
1541	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  YEARS  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  YEARS	42	None	add
1542	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	159	1	add
1543	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	159	1	add
1544	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	159	1	add
1545	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	159	1	add
1546	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
1547	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
1548	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
1549	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	85	1	add
1550	[BUG]  [BUGGY]  Days  +=  12  *  days;  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Days  +=  12  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Days  +=  12  *  days;	  months    +=    12    *    days;    days    +=    12    *    days;    	non-compiled	[CE]  cannot  find  symbol  Days	116	None	replace
1551	[BUG]  [BUGGY]  Month  end  =  end.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  end.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  end.get(Calendar.HOUR_OF_DAY);	  y    +=    start.get(Calendar.YEAR)-    end.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1552	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
1553	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
1554	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
1555	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
1556	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
1557	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	87	2	add
1558	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	165	1	add
1559	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	165	1	add
1560	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	58	1	add
1561	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	58	1	add
1562	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	58	1	add
1563	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	58	1	add
1564	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	58	1	add
1565	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	58	1	add
1566	[BUG]  [BUGGY]  Month  end  =  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);	  y    +=    end.get(Calendar.YEAR)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
1567	[BUG]  [BUGGY]  year  +=  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);  [CE]  cannot  find  symbol  year  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  year  +=  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	year  +=  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);	  y    +=    end.get(Calendar.YEAR)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  cannot  find  symbol  year	120	None	replace
1568	[BUG]  [BUGGY]  Month  y  +=  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  y  +=  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  y  +=  end.get(Calendar.YEAR)-  start.get(Calendar.MONTH);	  y    +=    end.get(Calendar.YEAR)-    start.get(Calendar.MONTH);    	non-compiled	[CE]  ';'  expected	120	None	replace
1569	[BUG]  [BUGGY]  Month  end  =  end.get(Calendar.MONTH)-  start.get(Calendar.YEAR);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  end.get(Calendar.MONTH)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  end.get(Calendar.MONTH)-  start.get(Calendar.YEAR);	  y    +=    end.get(Calendar.MONTH)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
1570	[BUG]  [BUGGY]  year  +=  end.get(Calendar.MONTH)-  start.get(Calendar.YEAR);  [CE]  cannot  find  symbol  year  [FE]                          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  year  +=  end.get(Calendar.MONTH)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	year  +=  end.get(Calendar.MONTH)-  start.get(Calendar.YEAR);	  y    +=    end.get(Calendar.MONTH)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol  year	138	None	replace
1571	[BUG]  [BUGGY]  ValueUtils.copyValue(value,  end.get(Calendar.MONTH)-  start.get(Calendar.YEAR);  [CE]  ')'  expected  [FE]                            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.copyValue(value,  end.get(Calendar.MONTH)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.copyValue(value,  end.get(Calendar.MONTH)-  start.get(Calendar.YEAR);	  y    +=    end.get(Calendar.MONTH)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  ')'  expected	138	None	replace
1572	[BUG]  [BUGGY]  Years  +=  365  *  YEARS;  [CE]  cannot  find  symbol  Years  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Years  +=  365  *  YEARS;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Years  +=  365  *  YEARS;	  months    +=    365    *    years;    Years    +=    365    *    years;    	non-compiled	[CE]  cannot  find  symbol  Years	78	None	replace
1573	[BUG]  [BUGGY]  Years  +=  365  *  M;  [CE]  cannot  find  symbol  Years  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Years  +=  365  *  M;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Years  +=  365  *  M;	  months    +=    365    *    years;    Years    +=    365    *    years;    	non-compiled	[CE]  cannot  find  symbol  Years	78	None	replace
1574	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [CE]  cannot  find  symbol  YEARS  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  YEARS);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	non-compiled	[CE]  cannot  find  symbol  YEARS	17	None	add
1575	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
1576	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	44	1	add
1577	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Months  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Months	44	None	add
1578	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
1579	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
1580	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
1581	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
1582	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
1583	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	50	1	add
1584	[BUG]  [BUGGY]  Month  end  =  starting.get(Calendar.YEAR)-  end.get(Calendar.YEAR);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  starting.get(Calendar.YEAR)-  end.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  starting.get(Calendar.YEAR)-  end.get(Calendar.YEAR);	  Month    end    =    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol	240	None	replace
1585	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	249	1	add
1586	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	249	1	add
1587	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	249	1	add
1588	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	249	1	add
1589	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);	  	compilable	  [FE]  ComparisonFailure  	249	1	add
1590	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);	  	compilable	  [FE]  ComparisonFailure  	249	1	add
1591	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	154	1	add
1592	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	154	1	add
1593	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	154	1	add
1594	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	154	1	add
1595	[BUG]  [BUGGY]  Month  end  =  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);	  y    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_YEAR);    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
1596	[BUG]  [BUGGY]  year  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);  [CE]  cannot  find  symbol  year  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  year  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	year  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);	  y    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_YEAR);    	non-compiled	[CE]  cannot  find  symbol  year	180	None	replace
1597	[BUG]  [BUGGY]  Month  value  =  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  value  =  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  value  =  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_YEAR);	  y    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_YEAR);    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
1598	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	237	1	add
1599	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	237	1	add
1600	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	237	1	add
1601	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  	compilable	  [FE]  ComparisonFailure  	237	1	add
1602	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);	  	compilable	  [FE]  ComparisonFailure  	237	1	add
1603	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);	  	compilable	  [FE]  ComparisonFailure  	237	1	add
1604	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  hours  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  24  *  hours  +  1;	  months    +=    24    *    hours;    	compilable	  [FE]  ComparisonFailure  	207	2	replace
1605	[BUG]  [BUGGY]  months  +=  24  *  hours  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  hours  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  24  *  hours  +  1;	  months    +=    24    *    hours;    	compilable	  [FE]  ComparisonFailure  	207	2	replace
1606	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  H);  [CE]  cannot  find  symbol  Hours  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  H);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  H);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    	non-compiled	[CE]  cannot  find  symbol  Hours	203	None	replace
1607	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
1608	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
1609	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
1610	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	196	1	add
1611	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	253	1	add
1612	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	253	1	add
1613	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	253	2	add
1614	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	253	2	add
1615	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	253	1	add
1616	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        months    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  days);	  	compilable	  [FE]  ComparisonFailure  	253	1	add
1617	[BUG]  [BUGGY]  Month  end  =  end.get(Calendar.HOUR_OF_DAY)+  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  end  =  end.get(Calendar.HOUR_OF_DAY)+  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  end  =  end.get(Calendar.HOUR_OF_DAY)+  start.get(Calendar.HOUR_OF_DAY);	  y    +=    end.get(Calendar.HOUR_OF_DAY)+    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
1618	[BUG]  [BUGGY]  Tag  y  =  end.get(Calendar.HOUR_OF_DAY)+  start.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Tag  y  =  end.get(Calendar.HOUR_OF_DAY)+  start.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Tag  y  =  end.get(Calendar.HOUR_OF_DAY)+  start.get(Calendar.HOUR_OF_DAY);	  y    +=    end.get(Calendar.HOUR_OF_DAY)+    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
1619	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
1620	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
1621	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
1622	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
1623	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
1624	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
1625	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
1626	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	65	1	add
1627	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
1628	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
1629	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
1630	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
1631	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	247	1	add
1632	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	247	1	add
1633	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	247	1	add
1634	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	247	1	add
1635	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	247	1	add
1636	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	247	1	add
1637	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Months  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Months	251	None	add
1638	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [CE]  cannot  find  symbol  Months  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	non-compiled	[CE]  cannot  find  symbol  Months	251	None	add
1639	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	216	1	add
1640	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	216	1	add
1641	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	216	1	add
1642	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	216	1	add
1643	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	216	1	add
1644	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	216	1	add
1645	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	216	1	add
1646	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	216	1	add
1647	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,	  Months    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    days    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  ')'  expected	19	None	replace
1648	[BUG]  [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    365);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  ')'  expected	20	None	replace
1649	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    365);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  ')'  expected	20	None	replace
1650	[BUG]  [BUGGY]  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Months  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Months    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	non-compiled	[CE]  ';'  expected	183	None	replace
1651	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
1652	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
1653	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
1654	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	52	1	add
1655	[BUG]  [BUGGY]  Month  months  +=  365  *  hours;  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month  months  +=  365  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month  months  +=  365  *  hours;	  months    +=    365    *    years;    Month    months    +=    365    *    years;    	non-compiled	[CE]  ';'  expected	167	None	replace
1656	[BUG]  [BUGGY]  months    +=    12    *    365;    months  +=  12  *  365;  Monaten  +=  12  *  365;  months  +=  12  *  365;  [CE]  cannot  find  symbol  Monaten  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months    +=    12    *    365;    months  +=  12  *  365;  Monaten  +=  12  *  365;  months  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months        +=        12        *        365;        months    +=    12    *    365;    Monaten  +=  12  *  365;  months  +=  12  *  365;	  	non-compiled	[CE]  cannot  find  symbol  Monaten	141	None	add
1657	[BUG]  [BUGGY]  Month.DAY_OF_DAY  +=  end.get(Calendar.HOUR_OF_DAY);  [CE]  cannot  find  symbol  Month  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Month.DAY_OF_DAY  +=  end.get(Calendar.HOUR_OF_DAY);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Month.DAY_OF_DAY  +=  end.get(Calendar.HOUR_OF_DAY);	  y    +=    start.get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  cannot  find  symbol  Month	11	None	replace
1658	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	181	1	add
1659	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	181	1	add
1660	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Months  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.DAY_OF_MONTH,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.YEAR,        months);        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  cannot  find  symbol  Months	181	None	add
1661	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Months  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Months	13	None	add
1662	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	109	2	replace
1663	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	109	2	replace
1664	[BUG]  [BUGGY]  ValueUtils.setValue(value,  end,  Calendar.YEAR)-  start.get(Calendar.YEAR);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.setValue(value,  end,  Calendar.YEAR)-  start.get(Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.setValue(value,  end,  Calendar.YEAR)-  start.get(Calendar.YEAR);	  value    +=    end.get(Calendar.YEAR)-    start.get(Calendar.YEAR);    	non-compiled	[CE]  not  a  statement	121	None	replace
1665	[BUG]  [BUGGY]  Years  +=  24  *  YEARS;  [CE]  cannot  find  symbol  Years  [FE]                ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Years  +=  24  *  YEARS;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Years  +=  24  *  YEARS;	  months    +=    24    *    years;    Years    +=    24    *    years;    	non-compiled	[CE]  cannot  find  symbol  Years	103	None	replace
1666	[BUG]  [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  minutes);  [CE]  cannot  find  symbol  Hours  [FE]              ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  minutes);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	Hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  minutes);	  Hours    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    	non-compiled	[CE]  cannot  find  symbol  Hours	23	None	replace
1667	[BUG]  [BUGGY]  months  +=  12  *  days  +  1;  Years  +=  12  *  days  +  1;  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  1;  Years  +=  12  *  days  +  1;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    days    +    1;    Years  +=  12  *  days  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Years	118	None	add
1668	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
1669	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
1670	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
1671	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
1672	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
1673	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
1674	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
1675	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	175	1	add
1676	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
1677	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
1678	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
1679	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        years);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
1680	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	48	1	add
1681	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	48	1	add
1682	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	48	1	add
1683	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	48	1	add
1684	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
1685	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	63	1	add
1686	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Months  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        hours);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        months);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Months	63	None	add
1687	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	24	1	add
1688	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	24	1	add
1689	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	24	1	add
1690	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	24	1	add
1691	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	24	1	add
1692	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	24	1	add
1693	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
1694	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
1695	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
1696	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
1697	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
1698	[BUG]  [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days        -=        reduceAndCorrect(start,        end,        Calendar.HOUR_OF_DAY,        days);        months        -=        reduceAndCorrect(start,        end,        Calendar.MONTH,        hours);        days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
1699	[BUG]  [BUGGY]  y  +=  end.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAndCorrect(start,  end,  [CE]  ')'  expected  [FE]        ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  y  +=  end.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAndCorrect(start,  end,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	y  +=  end.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAndCorrect(start,  end,	          if(!Token.containsTokenWithValue(tokens,    M))    {    for(int    y    =    start.get(Calendar.YEAR);    y    +=    y.get(Calendar.HOUR_OF_DAY);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  ')'  expected	231	None	replace
1700	[BUG]  [BUGGY]  if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  end.get(Calendar.HOUR_OF_DAY);  months  -=  reduce  [CE]  [FE]          ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  end.get(Calendar.HOUR_OF_DAY);  months  -=  reduce  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  end.get(Calendar.HOUR_OF_DAY);  months  -=  reduce	          if(!Token.containsTokenWithValue(tokens,    M))    {    for(int    y    =    start.get(Calendar.YEAR);    y    +=    y.get(Calendar.HOUR_OF_DAY);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  	231	None	replace
1701	[BUG]  [BUGGY]  if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  end.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAndCorrect(start,  [CE]  [FE]            ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  end.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAndCorrect(start,  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	if(padWithZeros)  {  if(!Token.containsTokenWithValue(tokens,  M))  {  for(int  y  =  start.get(Calendar.YEAR);  y  +=  end.get(Calendar.HOUR_OF_DAY);  months  -=  reduceAndCorrect(start,	          if(!Token.containsTokenWithValue(tokens,    M))    {    for(int    y    =    start.get(Calendar.YEAR);    y    +=    y.get(Calendar.HOUR_OF_DAY);    months    -=    reduceAndCorrect(start,    end,    	non-compiled	[CE]  	231	None	replace
1702	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  start.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  +=  start.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	33	1	add
1703	[BUG]  [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  start.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]          days  +=  end.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  days  +=  start.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	                days    +=    end.get(Calendar.HOUR_OF_DAY);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    days  +=  start.get(Calendar.HOUR_OF_DAY);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	33	1	add
1704	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
1705	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    months);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	40	1	add
1706	[BUG]  [BUGGY]  months  +=  12  *  days  +  365  *  days;  Years  +=  12  *  days  +  365  *  days;  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  12  *  days  +  365  *  days;  Years  +=  12  *  days  +  365  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    12    *    days    +    365    *    days;    Years  +=  12  *  days  +  365  *  days;	  	non-compiled	[CE]  cannot  find  symbol  Years	187	None	add
1707	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	217	2	replace
1708	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  hours);	          days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    days    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    days);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    	compilable	  [FE]  ComparisonFailure  	217	2	replace
1709	[BUG]  [BUGGY]  ValueUtils.copyValue(value,  end,  Calendar.YEAR);  [CE]  cannot  find  symbol  value  [FE]                  ComparisonFailure      [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  ValueUtils.copyValue(value,  end,  Calendar.YEAR);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	ValueUtils.copyValue(value,  end,  Calendar.YEAR);	  value    +=    end.get(Calendar.YEAR);    	non-compiled	[CE]  cannot  find  symbol  value	140	None	replace
1710	[BUG]  [BUGGY]  years  +=  24  *  YEARS;  [CE]  cannot  find  symbol  YEARS  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  +=  24  *  YEARS;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  +=  24  *  YEARS;	  months    +=    24    *    years;    years    +=    24    *    years;    	non-compiled	[CE]  cannot  find  symbol  YEARS	99	None	replace
1711	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  365;  days  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	months  +=  365  *  365;  days  +=  12  *  365;	  months    +=    12    *    365;    days    +=    12    *    365;    	compilable	  [FE]  ComparisonFailure  	147	2	replace
1712	[BUG]  [BUGGY]  months  +=  365  *  365;  days  +=  12  *  365;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  365  *  365;  days  +=  12  *  365;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months  +=  365  *  365;  days  +=  12  *  365;	  months    +=    12    *    365;    days    +=    12    *    365;    	compilable	  [FE]  ComparisonFailure  	147	2	replace
1713	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	43	2	replace
1714	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  months);	  years    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    years);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	43	2	replace
1715	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	211	1	add
1716	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	211	1	add
1717	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Months  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  hours);  Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    hours);    Months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Months	209	None	add
1718	[BUG]  [BUGGY]  months  +=  24  *  days;  Years  +=  24  *  days;  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  months  +=  24  *  days;  Years  +=  24  *  days;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	months    +=    24    *    days;    Years  +=  24  *  days;	  	non-compiled	[CE]  cannot  find  symbol  Years	80	None	add
1719	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	69	1	add
1720	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    hours);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	69	1	add
1721	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);	  	compilable	  [FE]  ComparisonFailure  	201	1	add
1722	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);	  	compilable	  [FE]  ComparisonFailure  	201	1	add
1723	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    days  +=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	201	1	add
1724	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  days  +=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);  [BUGGY]      months  +=  12  *  years;  years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days    -=    reduceAndCorrect(start,    end,    Calendar.HOUR_OF_DAY,    days);    days  +=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  days);	  	compilable	  [FE]  ComparisonFailure  	201	1	add
1725	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  24  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	add	days  +=  24  *  hours;	  months    +=    24    *    years;    days    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	102	2	replace
1726	[BUG]  [BUGGY]  days  +=  24  *  hours;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      hours  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  hours);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {      [BUGGY]  days  +=  24  *  hours;  [BUGGY]      years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	331	331	1	replace	days  +=  24  *  hours;	  months    +=    24    *    years;    days    +=    24    *    years;    	compilable	  [FE]  ComparisonFailure  	102	2	replace
