bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  false)  {  super.enable(f);  }  if(_cfgUnqNames  ==  false)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(_cfgUnqNames    ==    false)    {    super.enable(f);    }    if(_cfgUnqNames  ==  false)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	47	1	add
2	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  false)  {  super.enable(f);  }  if(_cfgUnqNames  ==  false)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  false)  {  super.enable(f);  }  if(_cfgUnqNames  ==  false)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames    ==    false)    {    super.enable(f);    }    if(_cfgUnqNames  ==  false)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	47	1	add
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  false)  {  super.enable(f);  }  if(_cfgUnqNames!=  false)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(_cfgUnqNames    ==    false)    {    super.enable(f);    }    if(_cfgUnqNames!=  false)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	47	1	add
4	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  false)  {  super.enable(f);  }  if(_cfgUnqNames!=  false)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  false)  {  super.enable(f);  }  if(_cfgUnqNames!=  false)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames    ==    false)    {    super.enable(f);    }    if(_cfgUnqNames!=  false)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	47	1	add
5	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  false)  {  super.enable(f);  }  if(_cfgUnqNames  >=  false)  {  super.enable(f);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  false)  {  super.enable(f);  }  if(_cfgUnqNames  >=  false)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames    ==    false)    {    super.enable(f);    }    if(_cfgUnqNames  >=  false)  {  super.enable(f);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	47	None	add
6	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  false)  {  super.enable(f);  }  if(_cfgUnqNames  ==  true)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(_cfgUnqNames    ==    false)    {    super.enable(f);    }    if(_cfgUnqNames  ==  true)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	47	1	add
7	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  false)  {  super.enable(f);  }  if(_cfgUnqNames  ==  true)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  false)  {  super.enable(f);  }  if(_cfgUnqNames  ==  true)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames    ==    false)    {    super.enable(f);    }    if(_cfgUnqNames  ==  true)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	47	1	add
8	[BUG]  [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(f);  [CE]  type  JsonGeneratorImpl  does  not  take  parameters  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(f);	  _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    	non-compiled	[CE]  type  JsonGeneratorImpl  does  not  take  parameters	37	None	replace
9	[BUG]  [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(f.getMask());  [CE]  type  JsonGeneratorImpl  does  not  take  parameters  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(f.getMask());  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(f.getMask());	  _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    	non-compiled	[CE]  type  JsonGeneratorImpl  does  not  take  parameters	37	None	replace
10	[BUG]  [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(f.getClass());  [CE]  type  JsonGeneratorImpl  does  not  take  parameters  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(f.getClass());  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(f.getClass());	  _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    	non-compiled	[CE]  type  JsonGeneratorImpl  does  not  take  parameters	37	None	replace
11	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(f  ==  null)  {  super.enable(f);  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  if(f  ==  null)  {  super.enable(f);  }	  if(f    ==    null)    {    super.enable(f);    }    if(f!=    null)    {    super.enable(f);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
12	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  if(f  ==  null)  {  super.enable(f);  }  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames!=  null)  {  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames!=  null)  {  if(f  ==  null)  {  super.enable(f);  }	  if(f    ==    null)    {    super.enable(f);    }    if(f!=    null)    {    super.enable(f);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
13	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(f!=  null)  {  super.enable(f);  }  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  if(f!=  null)  {  super.enable(f);  }	  if(f    ==    null)    {    super.enable(f);    }    if(f!=    null)    {    super.enable(f);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
14	[BUG]  [BUGGY]  _cfgUnqNames  =  _cfgUnqNames.get(f,  _maximumNonEscapedChar);  [CE]  boolean  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  _cfgUnqNames.get(f,  _maximumNonEscapedChar);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  _cfgUnqNames.get(f,  _maximumNonEscapedChar);	  _cfgUnqNames    =    _cfgUnqNames.get(f);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	43	None	replace
15	[BUG]  [BUGGY]  _cfgUnqNames  =  _cfgUnqNames.get(f,  _rootValueSeparator);  [CE]  boolean  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  _cfgUnqNames.get(f,  _rootValueSeparator);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  _cfgUnqNames.get(f,  _rootValueSeparator);	  _cfgUnqNames    =    _cfgUnqNames.get(f);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	43	None	replace
16	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
17	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
18	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
19	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
20	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
21	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
22	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
23	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
24	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
25	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
26	[BUG]  [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl(f);  [CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._cfgUnqNames  =  new  JsonGeneratorImpl(f);	  this._cfgUnqNames    =    new    JsonGeneratorImpl();    	non-compiled	[CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated	64	None	replace
27	[BUG]  [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl(f.getMask());  [CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl(f.getMask());  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._cfgUnqNames  =  new  JsonGeneratorImpl(f.getMask());	  this._cfgUnqNames    =    new    JsonGeneratorImpl();    	non-compiled	[CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated	64	None	replace
28	[BUG]  [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl(f.getModule());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl(f.getModule());  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._cfgUnqNames  =  new  JsonGeneratorImpl(f.getModule());	  this._cfgUnqNames    =    new    JsonGeneratorImpl();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
29	[BUG]  [BUGGY]  enable(f);  _ioContext  =  _ioContext.createChildObjectGenerator(f);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]          StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f);  _ioContext  =  _ioContext.createChildObjectGenerator(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);  _ioContext  =  _ioContext.createChildObjectGenerator(f);	  enable(f);    f    =    _ioContext.createChildObjectGenerator(f);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	61	None	replace
30	[BUG]  [BUGGY]  enable(f);  _ioContext  =  ctxt.createChildObjectGenerator(f);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]            StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f);  _ioContext  =  ctxt.createChildObjectGenerator(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);  _ioContext  =  ctxt.createChildObjectGenerator(f);	  enable(f);    f    =    _ioContext.createChildObjectGenerator(f);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	61	None	replace
31	[BUG]  [BUGGY]  f  =  _ioContext.createChildObjectGenerator(f);  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  f  =  _ioContext.createChildObjectGenerator(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	f  =  _ioContext.createChildObjectGenerator(f);	  enable(f);    f    =    _ioContext.createChildObjectGenerator(f);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
32	[BUG]  [BUGGY]  enable(f);  _cfgUnqNames  =  _ioContext.createChildObjectGenerator(f);  [CE]  cannot  find  symbol  [FE]                StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f);  _cfgUnqNames  =  _ioContext.createChildObjectGenerator(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);  _cfgUnqNames  =  _ioContext.createChildObjectGenerator(f);	  enable(f);    f    =    _ioContext.createChildObjectGenerator(f);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
33	[BUG]  [BUGGY]  if(f  ==  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]            StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  enable(f);    if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  ';'  expected	4	None	replace
34	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]              StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  enable(f);    if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  ';'  expected	4	None	replace
35	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]                StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  enable(f);    if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  ';'  expected	4	None	replace
36	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	7	None	replace
37	[BUG]  [BUGGY]  if(f  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  ';'  expected	7	None	replace
38	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _maximumNonEscapedChar  =  0;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	_maximumNonEscapedChar  =  0;	  super.enable(f);    _maximumNonEscapedChar    =    0;    	compilable	  [FE]  ComparisonFailure  	33	1	replace
39	[BUG]  [BUGGY]  _maximumNonEscapedChar  =  0;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _maximumNonEscapedChar  =  0;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_maximumNonEscapedChar  =  0;	  super.enable(f);    _maximumNonEscapedChar    =    0;    	compilable	  [FE]  ComparisonFailure  	33	1	replace
40	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f  ==  null)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }	  super.enable(f);    _maximumNonEscapedChar    =    0;    	compilable	  [FE]  ComparisonFailure  	33	1	replace
41	[BUG]  [BUGGY]  if(f  ==  null)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }	  super.enable(f);    _maximumNonEscapedChar    =    0;    	compilable	  [FE]  ComparisonFailure  	33	1	replace
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=  null)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=  null)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }	  super.enable(f);    _maximumNonEscapedChar    =    0;    	compilable	  [FE]  ComparisonFailure  	33	1	replace
43	[BUG]  [BUGGY]  if(f!=  null)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=  null)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=  null)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }	  super.enable(f);    _maximumNonEscapedChar    =    0;    	compilable	  [FE]  ComparisonFailure  	33	1	replace
44	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f  ==  null)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }	  super.enable(f);    _maximumNonEscapedChar    =    0;    	compilable	  [FE]  ComparisonFailure  	33	1	replace
45	[BUG]  [BUGGY]  if(f  ==  null)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }	  super.enable(f);    _maximumNonEscapedChar    =    0;    	compilable	  [FE]  ComparisonFailure  	33	1	replace
46	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
47	[BUG]  [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
48	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  if(f!=  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    if(f!=  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
49	[BUG]  [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  if(f!=  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  if(f!=  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    if(f!=  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
50	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  if(f  ==  null  ||  f.getMask()!=  _maximumNonEscapedChar)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    if(f  ==  null  ||  f.getMask()!=  _maximumNonEscapedChar)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
51	[BUG]  [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  if(f  ==  null  ||  f.getMask()!=  _maximumNonEscapedChar)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  if(f  ==  null  ||  f.getMask()!=  _maximumNonEscapedChar)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    if(f  ==  null  ||  f.getMask()!=  _maximumNonEscapedChar)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
52	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  if(f  ==  null  ||  f.getMask()  >=  _maximumNonEscapedChar)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    if(f  ==  null  ||  f.getMask()  >=  _maximumNonEscapedChar)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
53	[BUG]  [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  if(f  ==  null  ||  f.getMask()  >=  _maximumNonEscapedChar)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  if(f  ==  null  ||  f.getMask()  >=  _maximumNonEscapedChar)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    if(f  ==  null  ||  f.getMask()  >=  _maximumNonEscapedChar)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
54	[BUG]  [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  if(f  ==  null  ||  f.getMask()  ==  _minimumNonEscapedChar)  {  super.enable(f);  }  [CE]  cannot  find  symbol  _minimumNonEscapedChar  [FE]            ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  if(f  ==  null  ||  f.getMask()  ==  _minimumNonEscapedChar)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    if(f  ==  null  ||  f.getMask()  ==  _minimumNonEscapedChar)  {  super.enable(f);  }	  	non-compiled	[CE]  cannot  find  symbol  _minimumNonEscapedChar	66	None	add
55	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  true)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(_cfgUnqNames  ==  true)  {  super.enable(f);  }	  if(_cfgUnqNames    ==    false)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	48	1	replace
56	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  true)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  true)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  true)  {  super.enable(f);  }	  if(_cfgUnqNames    ==    false)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	48	1	replace
57	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  if(f!=  null)  {  super.enable(f);  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames!=  null)  {  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames!=  null)  {  if(f!=  null)  {  super.enable(f);  }	  if(f!=    null)    {    super.enable(f);    }    if(f    ==    null)    {    super.enable(f);    }    	non-compiled	[CE]  ';'  expected	29	None	replace
58	[BUG]  [BUGGY]  if(f  ==  null)  {  enable(f);  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]                StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  enable(f);  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  enable(f);  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  enable(f);    if(f    ==    null)    {    if(_cfgUnqNames!=    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  ';'  expected	6	None	replace
59	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  this.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    this.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
60	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  this.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  this.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    this.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
61	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  this.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  this.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    this.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  this.enable(f);  }	  	compilable	  [FE]  StackOverflowError  	68	1	add
62	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  this.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  this.enable(f);  }  [FE]  StackOverflowError  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  this.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  this.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    this.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  this.enable(f);  }	  	compilable	  [FE]  StackOverflowError  	68	1	add
63	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  this.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    this.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
64	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  this.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  this.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    this.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
65	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  this.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  >=  null)  {  this.enable(f);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  this.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  >=  null)  {  this.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    this.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  >=  null)  {  this.enable(f);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	68	None	add
66	[BUG]  [BUGGY]  _ioContext.enable(f,  _characterEscapes);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext.enable(f,  _characterEscapes);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext.enable(f,  _characterEscapes);	  _ioContext.enable(f,    _maximumNonEscapedChar);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
67	[BUG]  [BUGGY]  _ioContext.enable(f,  _maximumNonEscapedChar,  _characterEscapes);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext.enable(f,  _maximumNonEscapedChar,  _characterEscapes);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext.enable(f,  _maximumNonEscapedChar,  _characterEscapes);	  _ioContext.enable(f,    _maximumNonEscapedChar);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
68	[BUG]  [BUGGY]  _ioContext.enable(f,  _outputEscapes);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext.enable(f,  _outputEscapes);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext.enable(f,  _outputEscapes);	  _ioContext.enable(f,    _maximumNonEscapedChar);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
69	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
70	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
71	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
72	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
73	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
74	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
75	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
76	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
77	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
78	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
79	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f);    enable(f);  enable(f);  enable(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	enable(f);        enable(f);    enable(f);  enable(f);	  	compilable	  [FE]  StackOverflowError  	1	1	add
80	[BUG]  [BUGGY]  enable(f);    enable(f);  enable(f);  enable(f);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f);    enable(f);  enable(f);  enable(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);        enable(f);    enable(f);  enable(f);	  	compilable	  [FE]  StackOverflowError  	1	1	add
81	[BUG]  [BUGGY]  enable(f);    enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]      StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f);    enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);        enable(f);    if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  	non-compiled	[CE]  ';'  expected	1	None	add
82	[BUG]  [BUGGY]  enable(f);    enable(f);  if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]        StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f);    enable(f);  if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);        enable(f);    if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  	non-compiled	[CE]  ';'  expected	1	None	add
83	[BUG]  [BUGGY]  enable(f);    enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  [CE]  ';'  expected  [FE]          StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f);    enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);        enable(f);    if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }	  	non-compiled	[CE]  ';'  expected	1	None	add
84	[BUG]  [BUGGY]  enable(f);    enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  [CE]  ';'  expected  [FE]            StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f);    enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);        enable(f);    if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }	  	non-compiled	[CE]  ';'  expected	1	None	add
85	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this.enable(f);  this.enable(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	this.enable(f);    this.enable(f);	  	compilable	  [FE]  StackOverflowError  	17	1	add
86	[BUG]  [BUGGY]  this.enable(f);  this.enable(f);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this.enable(f);  this.enable(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this.enable(f);    this.enable(f);	  	compilable	  [FE]  StackOverflowError  	17	1	add
87	[BUG]  [BUGGY]  this.enable(f);  if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar()  [CE]  ';'  expected  [FE]      StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this.enable(f);  if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar()  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this.enable(f);    if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar()	  	non-compiled	[CE]  ';'  expected	17	None	add
88	[BUG]  [BUGGY]  this.enable(f);  if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  _maximumNonEscapedChar  =  f.getMinimumNonEscapedChar()  [CE]  ';'  expected  [FE]        StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this.enable(f);  if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  _maximumNonEscapedChar  =  f.getMinimumNonEscapedChar()  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this.enable(f);    if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  _maximumNonEscapedChar  =  f.getMinimumNonEscapedChar()	  	non-compiled	[CE]  ';'  expected	17	None	add
89	[BUG]  [BUGGY]  this.enable(f);  if(_cfgUnqNames  ==  null)  {  if(!_cfgUnqNames)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]          StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this.enable(f);  if(_cfgUnqNames  ==  null)  {  if(!_cfgUnqNames)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this.enable(f);    if(_cfgUnqNames  ==  null)  {  if(!_cfgUnqNames)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  	non-compiled	[CE]  ';'  expected	17	None	add
90	[BUG]  [BUGGY]  this.enable(f);  if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }  [CE]  cannot  find  symbol  [FE]            StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this.enable(f);  if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this.enable(f);    if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
91	[BUG]  [BUGGY]  if(f  ==  null)  {  enable(f);  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  false;  }  [CE]  ';'  expected  [FE]        StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  enable(f);  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  enable(f);  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  false;  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    false;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
92	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  [CE]  ';'  expected  [FE]          StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    false;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
93	[BUG]  [BUGGY]  if(f  ==  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  [CE]  ';'  expected  [FE]            StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    false;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
94	[BUG]  [BUGGY]  if(f!=  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  [CE]  ';'  expected  [FE]              StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    false;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
95	[BUG]  [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  [CE]  type  JsonGeneratorImpl  does  not  take  parameters  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();	  if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Object>();    }    	non-compiled	[CE]  type  JsonGeneratorImpl  does  not  take  parameters	10	None	replace
96	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }	  if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Object>();    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	10	None	replace
97	[BUG]  [BUGGY]  if(f  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }	  if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Object>();    }    	non-compiled	[CE]  ';'  expected	10	None	replace
98	[BUG]  [BUGGY]  _enable(f);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _enable(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_enable(f);	  Super.enable(f);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
99	[BUG]  [BUGGY]  Enabled.Feature.AUTO_EMPTY_STRING_AS_NULL_OBJECT;  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  Enabled.Feature.AUTO_EMPTY_STRING_AS_NULL_OBJECT;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	Enabled.Feature.AUTO_EMPTY_STRING_AS_NULL_OBJECT;	  Super.enable(f);    	non-compiled	[CE]  not  a  statement	19	None	replace
100	[BUG]  [BUGGY]  enable(f);  _ioContext  =  _ioContext.createChildObjectGenerator(this);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]              StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f);  _ioContext  =  _ioContext.createChildObjectGenerator(this);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);  _ioContext  =  _ioContext.createChildObjectGenerator(this);	  enable(f);    f    =    _ioContext.createChildObjectGenerator(this);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	63	None	replace
101	[BUG]  [BUGGY]  enable(f);  _ioContext  =  ctxt.createChildObjectGenerator(this);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]                StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f);  _ioContext  =  ctxt.createChildObjectGenerator(this);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);  _ioContext  =  ctxt.createChildObjectGenerator(this);	  enable(f);    f    =    _ioContext.createChildObjectGenerator(this);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	63	None	replace
102	[BUG]  [BUGGY]  enable(f);  this._ioContext  =  _ioContext.createChildObjectGenerator(this);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]                  StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f);  this._ioContext  =  _ioContext.createChildObjectGenerator(this);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);  this._ioContext  =  _ioContext.createChildObjectGenerator(this);	  enable(f);    f    =    _ioContext.createChildObjectGenerator(this);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	63	None	replace
103	[BUG]  [BUGGY]  f  =  _ioContext.createChildObjectGenerator(this);  [CE]  cannot  find  symbol  [FE]                    StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  f  =  _ioContext.createChildObjectGenerator(this);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	f  =  _ioContext.createChildObjectGenerator(this);	  enable(f);    f    =    _ioContext.createChildObjectGenerator(this);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
104	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null  &&  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f  ==  null  &&  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }	  if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	67	1	replace
105	[BUG]  [BUGGY]  if(f  ==  null  &&  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null  &&  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null  &&  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }	  if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	67	1	replace
106	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  0)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f  ==  null  ||  f.getMask()  ==  0)  {  super.enable(f);  }	  if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	67	1	replace
107	[BUG]  [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  0)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  0)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null  ||  f.getMask()  ==  0)  {  super.enable(f);  }	  if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	67	1	replace
108	[BUG]  [BUGGY]  if(_maximumNonEscapedChar  ==  0)  {  if(f  ==  null)  {  super.enable(f);  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_maximumNonEscapedChar  ==  0)  {  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_maximumNonEscapedChar  ==  0)  {  if(f  ==  null)  {  super.enable(f);  }	  if(f    ==    null)    {    super.enable(f);    }    If(f    ==    null)    {    super.enable(f);    }    	non-compiled	[CE]  ';'  expected	51	None	replace
109	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  this._maximumNonEscapedChar  =  0;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    this._maximumNonEscapedChar    =    0;    this._maximumNonEscapedChar  =  0;	  	compilable	  [FE]  ComparisonFailure  	52	1	add
110	[BUG]  [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  this._maximumNonEscapedChar  =  0;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  this._maximumNonEscapedChar  =  0;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    this._maximumNonEscapedChar    =    0;    this._maximumNonEscapedChar  =  0;	  	compilable	  [FE]  ComparisonFailure  	52	1	add
111	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  super.enable(f);  this._maximumNonEscapedChar  =  0;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    this._maximumNonEscapedChar    =    0;    super.enable(f);  this._maximumNonEscapedChar  =  0;	  	compilable	  [FE]  ComparisonFailure  	52	1	add
112	[BUG]  [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  super.enable(f);  this._maximumNonEscapedChar  =  0;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  super.enable(f);  this._maximumNonEscapedChar  =  0;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    this._maximumNonEscapedChar    =    0;    super.enable(f);  this._maximumNonEscapedChar  =  0;	  	compilable	  [FE]  ComparisonFailure  	52	1	add
113	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  _maximumNonEscapedChar  =  0;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    this._maximumNonEscapedChar    =    0;    _maximumNonEscapedChar  =  0;	  	compilable	  [FE]  ComparisonFailure  	52	1	add
114	[BUG]  [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  _maximumNonEscapedChar  =  0;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  _maximumNonEscapedChar  =  0;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    this._maximumNonEscapedChar    =    0;    _maximumNonEscapedChar  =  0;	  	compilable	  [FE]  ComparisonFailure  	52	1	add
115	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  this._maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    this._maximumNonEscapedChar    =    0;    if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  this._maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	52	1	add
116	[BUG]  [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  this._maximumNonEscapedChar  =  0;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  this._maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    this._maximumNonEscapedChar    =    0;    if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  this._maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	52	1	add
117	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    this._maximumNonEscapedChar    =    0;    if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	52	1	add
118	[BUG]  [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    this._maximumNonEscapedChar    =    0;    if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	52	1	add
119	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]          _features  |=  f.getMask();  _features  |=  f.getMask();  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	                _features    |=    f.getMask();    _features  |=  f.getMask();	  	compilable	  [FE]  ComparisonFailure  	54	1	add
120	[BUG]  [BUGGY]          _features  |=  f.getMask();  _features  |=  f.getMask();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]          _features  |=  f.getMask();  _features  |=  f.getMask();  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	                _features    |=    f.getMask();    _features  |=  f.getMask();	  	compilable	  [FE]  ComparisonFailure  	54	1	add
121	[BUG]  [BUGGY]          _features  |=  f.getMask();  int[]  features  =  f.getMask();  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]          _features  |=  f.getMask();  int[]  features  =  f.getMask();  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	                _features    |=    f.getMask();    int[]  features  =  f.getMask();	  	non-compiled	[CE]  incompatible  types	54	None	add
122	[BUG]  [BUGGY]          _features  |=  f.getMask();  _features  |=  f.getMask());  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]          _features  |=  f.getMask();  _features  |=  f.getMask());  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	                _features    |=    f.getMask();    _features  |=  f.getMask());	  	non-compiled	[CE]  ';'  expected	54	None	add
123	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f        ==        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	13	1	add
124	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	13	1	add
125	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f        ==        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	13	1	add
126	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	13	1	add
127	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.en  [CE]  not  a  statement  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.en  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.en	  	non-compiled	[CE]  not  a  statement	13	None	add
128	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f        ==        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	13	1	add
129	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	13	1	add
130	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f        ==        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	13	1	add
131	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	13	1	add
132	[BUG]  [BUGGY]  if(f  ==  null)  {  enable(f);  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [CE]  ';'  expected  [FE]              StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  enable(f);  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  enable(f);  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Object>();    }    	non-compiled	[CE]  ';'  expected	5	None	replace
133	[BUG]  [BUGGY]  if(f  ==  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [CE]  ';'  expected  [FE]                StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Object>();    }    	non-compiled	[CE]  ';'  expected	5	None	replace
134	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [CE]  ';'  expected  [FE]                  StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Object>();    }    	non-compiled	[CE]  ';'  expected	5	None	replace
135	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [CE]  ';'  expected  [FE]                    StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Object>();    }    	non-compiled	[CE]  ';'  expected	5	None	replace
136	[BUG]  [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(f);  [CE]  type  JsonGeneratorImpl  does  not  take  parameters  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(f);	  this._cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    	non-compiled	[CE]  type  JsonGeneratorImpl  does  not  take  parameters	70	None	replace
137	[BUG]  [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(f.getMask());  [CE]  type  JsonGeneratorImpl  does  not  take  parameters  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(f.getMask());  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(f.getMask());	  this._cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    	non-compiled	[CE]  type  JsonGeneratorImpl  does  not  take  parameters	70	None	replace
138	[BUG]  [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(f.getClass());  [CE]  type  JsonGeneratorImpl  does  not  take  parameters  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(f.getClass());  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(f.getClass());	  this._cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    	non-compiled	[CE]  type  JsonGeneratorImpl  does  not  take  parameters	70	None	replace
139	[BUG]  [BUGGY]  _ioContext  =  ctxt.createChildObjectContext(f);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext  =  ctxt.createChildObjectContext(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext  =  ctxt.createChildObjectContext(f);	  _ioContext    =    _ioContext.createChildObjectContext(f);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	41	None	replace
140	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  _maximumNonEscapedChar);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  _maximumNonEscapedChar);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext  =  _ioContext.createChildObjectContext(f,  _maximumNonEscapedChar);	  _ioContext    =    _ioContext.createChildObjectContext(f);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	41	None	replace
141	[BUG]  [BUGGY]  _cfgUnqNames  =  new  JsonGenerator();  [CE]  JsonGenerator  is  abstract;  cannot  be  instantiated  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  new  JsonGenerator();  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  new  JsonGenerator();	          if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGenerator();    }    	non-compiled	[CE]  JsonGenerator  is  abstract;  cannot  be  instantiated	36	None	replace
142	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGenerator();  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGenerator();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGenerator();  }	          if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGenerator();    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	36	None	replace
143	[BUG]  [BUGGY]  if(f  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGenerator();  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGenerator();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGenerator();  }	          if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGenerator();    }    	non-compiled	[CE]  ';'  expected	36	None	replace
144	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  enable(f);  }	  enable(f);    enable(f);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	2	None	replace
145	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  }  else  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]      StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  }  else  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  enable(f);  }  else  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  enable(f);    enable(f);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	2	None	replace
146	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  enable(f);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]        StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames!=  null)  {  enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames!=  null)  {  enable(f);  }	  enable(f);    enable(f);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	2	None	replace
147	[BUG]  [BUGGY]  enable(f,  _maximumNonEscapedChar,  _characterEscapes);  [CE]  no  suitable  method  found  for  enable(Feature,int,CharacterEscapes)  [FE]        StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f,  _maximumNonEscapedChar,  _characterEscapes);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f,  _maximumNonEscapedChar,  _characterEscapes);	  enable(f,    _maximumNonEscapedChar);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,int,CharacterEscapes)	23	None	replace
148	[BUG]  [BUGGY]  enable(f,  _maximumNonEscapedChar,  _cfgUnqNames);  [CE]  no  suitable  method  found  for  enable(Feature,int,boolean)  [FE]          StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f,  _maximumNonEscapedChar,  _cfgUnqNames);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f,  _maximumNonEscapedChar,  _cfgUnqNames);	  enable(f,    _maximumNonEscapedChar);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,int,boolean)	23	None	replace
149	[BUG]  [BUGGY]  enable(f,  _maximumNonEscapedChar,  _outputEscapes);  [CE]  no  suitable  method  found  for  enable(Feature,int,int[])  [FE]            StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f,  _maximumNonEscapedChar,  _outputEscapes);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f,  _maximumNonEscapedChar,  _outputEscapes);	  enable(f,    _maximumNonEscapedChar);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,int,int[])	23	None	replace
150	[BUG]  [BUGGY]  enable(f,  _maximumNonEscapedChar,  _generator);  [CE]  cannot  find  symbol  _generator  [FE]              StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f,  _maximumNonEscapedChar,  _generator);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f,  _maximumNonEscapedChar,  _generator);	  enable(f,    _maximumNonEscapedChar);    	non-compiled	[CE]  cannot  find  symbol  _generator	23	None	replace
151	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  _maximumNonEscapedChar  =  0;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    _maximumNonEscapedChar    =    0;    _maximumNonEscapedChar  =  0;	  	compilable	  [FE]  ComparisonFailure  	32	1	add
152	[BUG]  [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  _maximumNonEscapedChar  =  0;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  _maximumNonEscapedChar  =  0;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    _maximumNonEscapedChar    =    0;    _maximumNonEscapedChar  =  0;	  	compilable	  [FE]  ComparisonFailure  	32	1	add
153	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  super.enable(f);  _maximumNonEscapedChar  =  0;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    _maximumNonEscapedChar    =    0;    super.enable(f);  _maximumNonEscapedChar  =  0;	  	compilable	  [FE]  ComparisonFailure  	32	1	add
154	[BUG]  [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  super.enable(f);  _maximumNonEscapedChar  =  0;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  super.enable(f);  _maximumNonEscapedChar  =  0;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    _maximumNonEscapedChar    =    0;    super.enable(f);  _maximumNonEscapedChar  =  0;	  	compilable	  [FE]  ComparisonFailure  	32	1	add
155	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    _maximumNonEscapedChar    =    0;    if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	32	1	add
156	[BUG]  [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    _maximumNonEscapedChar    =    0;    if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	32	1	add
157	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  this.enable(f);  _maximumNonEscapedChar  =  0;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    _maximumNonEscapedChar    =    0;    this.enable(f);  _maximumNonEscapedChar  =  0;	  	compilable	  [FE]  StackOverflowError  	32	1	add
158	[BUG]  [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  this.enable(f);  _maximumNonEscapedChar  =  0;  [FE]  StackOverflowError  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  this.enable(f);  _maximumNonEscapedChar  =  0;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    _maximumNonEscapedChar    =    0;    this.enable(f);  _maximumNonEscapedChar  =  0;	  	compilable	  [FE]  StackOverflowError  	32	1	add
159	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    _maximumNonEscapedChar    =    0;    if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	32	1	add
160	[BUG]  [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    _maximumNonEscapedChar    =    0;    if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	32	1	add
161	[BUG]  [BUGGY]  _ioContext.setCurrentName(f,  _cfgUnqNames.getName());  [CE]  boolean  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext.setCurrentName(f,  _cfgUnqNames.getName());  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext.setCurrentName(f,  _cfgUnqNames.getName());	          _ioContext.setCurrentName(f.getName());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	56	None	replace
162	[BUG]  [BUGGY]  _ioContext.setCurrentName(f,  _outputEscapes.getName());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext.setCurrentName(f,  _outputEscapes.getName());  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext.setCurrentName(f,  _outputEscapes.getName());	          _ioContext.setCurrentName(f.getName());    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
163	[BUG]  [BUGGY]  _ioContext.setCurrentName(f);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext.setCurrentName(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext.setCurrentName(f);	          _ioContext.setCurrentName(f.getName());    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
164	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  super.enable(f);  this._cfgUnqNames  =  false;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    this._cfgUnqNames    =    false;    super.enable(f);  this._cfgUnqNames  =  false;	  	compilable	  [FE]  ComparisonFailure  	71	1	add
165	[BUG]  [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  super.enable(f);  this._cfgUnqNames  =  false;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  super.enable(f);  this._cfgUnqNames  =  false;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    this._cfgUnqNames    =    false;    super.enable(f);  this._cfgUnqNames  =  false;	  	compilable	  [FE]  ComparisonFailure  	71	1	add
166	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  this._cfgUnqNames  =  false;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    this._cfgUnqNames    =    false;    this._cfgUnqNames  =  false;	  	compilable	  [FE]  ComparisonFailure  	71	1	add
167	[BUG]  [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  this._cfgUnqNames  =  false;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  this._cfgUnqNames  =  false;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    this._cfgUnqNames    =    false;    this._cfgUnqNames  =  false;	  	compilable	  [FE]  ComparisonFailure  	71	1	add
168	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    this._cfgUnqNames    =    false;    if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }	  	compilable	  [FE]  ComparisonFailure  	71	1	add
169	[BUG]  [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    this._cfgUnqNames    =    false;    if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }	  	compilable	  [FE]  ComparisonFailure  	71	1	add
170	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  this._cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    this._cfgUnqNames    =    false;    if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  this._cfgUnqNames  =  false;  }	  	compilable	  [FE]  ComparisonFailure  	71	1	add
171	[BUG]  [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  this._cfgUnqNames  =  false;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  this._cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    this._cfgUnqNames    =    false;    if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  this._cfgUnqNames  =  false;  }	  	compilable	  [FE]  ComparisonFailure  	71	1	add
172	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    this._cfgUnqNames    =    false;    if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }	  	compilable	  [FE]  ComparisonFailure  	71	1	add
173	[BUG]  [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    this._cfgUnqNames    =    false;    if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }	  	compilable	  [FE]  ComparisonFailure  	71	1	add
174	[BUG]  [BUGGY]  _ioContext  =  ctxt.enable(f);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext  =  ctxt.enable(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext  =  ctxt.enable(f);	  _ioContext    =    _ioContext.enable(f);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	20	None	replace
175	[BUG]  [BUGGY]  _ioContext  =  _ioContextFactory.enable(f);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext  =  _ioContextFactory.enable(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext  =  _ioContextFactory.enable(f);	  _ioContext    =    _ioContext.enable(f);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	20	None	replace
176	[BUG]  [BUGGY]  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();	  if(f    ==    null)    {    if(_maximumNonEscapedChar!=    0)    {    _maximumNonEscapedChar    =    f.getMaximumNonEscapedChar();    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
177	[BUG]  [BUGGY]  if(f  ==  null)  {  if(_maximumNonEscapedChar!=  0)  {  _maximumNonEscapedChar  =  f.getMinimumNonEscapedChar();  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  if(_maximumNonEscapedChar!=  0)  {  _maximumNonEscapedChar  =  f.getMinimumNonEscapedChar();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  if(_maximumNonEscapedChar!=  0)  {  _maximumNonEscapedChar  =  f.getMinimumNonEscapedChar();  }	  if(f    ==    null)    {    if(_maximumNonEscapedChar!=    0)    {    _maximumNonEscapedChar    =    f.getMaximumNonEscapedChar();    }    	non-compiled	[CE]  ';'  expected	8	None	replace
178	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._maximumNonEscapedChar  =  0;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	this._maximumNonEscapedChar  =  0;	  super.enable(f);    this._maximumNonEscapedChar    =    0;    	compilable	  [FE]  ComparisonFailure  	53	1	replace
179	[BUG]  [BUGGY]  this._maximumNonEscapedChar  =  0;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._maximumNonEscapedChar  =  0;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._maximumNonEscapedChar  =  0;	  super.enable(f);    this._maximumNonEscapedChar    =    0;    	compilable	  [FE]  ComparisonFailure  	53	1	replace
180	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  super.enable(f);  this._maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f  ==  null)  {  super.enable(f);  this._maximumNonEscapedChar  =  0;  }	  super.enable(f);    this._maximumNonEscapedChar    =    0;    	compilable	  [FE]  ComparisonFailure  	53	1	replace
181	[BUG]  [BUGGY]  if(f  ==  null)  {  super.enable(f);  this._maximumNonEscapedChar  =  0;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  super.enable(f);  this._maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  super.enable(f);  this._maximumNonEscapedChar  =  0;  }	  super.enable(f);    this._maximumNonEscapedChar    =    0;    	compilable	  [FE]  ComparisonFailure  	53	1	replace
182	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=  null)  {  super.enable(f);  this._maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=  null)  {  super.enable(f);  this._maximumNonEscapedChar  =  0;  }	  super.enable(f);    this._maximumNonEscapedChar    =    0;    	compilable	  [FE]  ComparisonFailure  	53	1	replace
183	[BUG]  [BUGGY]  if(f!=  null)  {  super.enable(f);  this._maximumNonEscapedChar  =  0;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=  null)  {  super.enable(f);  this._maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=  null)  {  super.enable(f);  this._maximumNonEscapedChar  =  0;  }	  super.enable(f);    this._maximumNonEscapedChar    =    0;    	compilable	  [FE]  ComparisonFailure  	53	1	replace
184	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  super.enable(f);  this._maximumNonEscapedChar  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f  ==  null)  {  super.enable(f);  this._maximumNonEscapedChar  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super.enable(f);    this._maximumNonEscapedChar    =    0;    	compilable	  [FE]  IllegalArgumentException  	53	1	replace
185	[BUG]  [BUGGY]  if(f  ==  null)  {  super.enable(f);  this._maximumNonEscapedChar  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  super.enable(f);  this._maximumNonEscapedChar  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  super.enable(f);  this._maximumNonEscapedChar  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super.enable(f);    this._maximumNonEscapedChar    =    0;    	compilable	  [FE]  IllegalArgumentException  	53	1	replace
186	[BUG]  [BUGGY]  if(f  ==  null)  {  if(_maximumNonEscapedChar  ==  0)  {  _maximumNonEscapedChar  =  f.getMinimumNonEscapedChar();  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  if(_maximumNonEscapedChar  ==  0)  {  _maximumNonEscapedChar  =  f.getMinimumNonEscapedChar();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  if(_maximumNonEscapedChar  ==  0)  {  _maximumNonEscapedChar  =  f.getMinimumNonEscapedChar();  }	  if(f    ==    null)    {    if(_maximumNonEscapedChar    ==    0)    {    _maximumNonEscapedChar    =    f.getMaximumNonEscapedChar();    }    	non-compiled	[CE]  ';'  expected	9	None	replace
187	[BUG]  [BUGGY]  if(_ioContext.enable(f))  {  _ioContext  =  _ioContext.createChildObjectContext(f);  }  else  {  _ioContext  =  _ioContext.createChildObjectContext(f);  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_ioContext.enable(f))  {  _ioContext  =  _ioContext.createChildObjectContext(f);  }  else  {  _ioContext  =  _ioContext.createChildObjectContext(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_ioContext.enable(f))  {  _ioContext  =  _ioContext.createChildObjectContext(f);  }  else  {  _ioContext  =  _ioContext.createChildObjectContext(f);  }	  if(_ioContext.enable(f))    {    _ioContext.enable(f);    }    else    {    _ioContext    =    _ioContext.createChildObjectContext(f);    }    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
188	[BUG]  [BUGGY]  if(_ioContext.enable(f))  {  _ioContext  =  _ioContext.createChildObjectContext(f);  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_ioContext.enable(f))  {  _ioContext  =  _ioContext.createChildObjectContext(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_ioContext.enable(f))  {  _ioContext  =  _ioContext.createChildObjectContext(f);  }	  if(_ioContext.enable(f))    {    _ioContext.enable(f);    }    else    {    _ioContext    =    _ioContext.createChildObjectContext(f);    }    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
189	[BUG]  [BUGGY]  if(f  ==  null)  {  enable(f);  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  true;  }  [CE]  ';'  expected  [FE]          StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  enable(f);  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  true;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  enable(f);  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  true;  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    true;    }    	non-compiled	[CE]  ';'  expected	45	None	replace
190	[BUG]  [BUGGY]  if(f  ==  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  [CE]  ';'  expected  [FE]            StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    true;    }    	non-compiled	[CE]  ';'  expected	45	None	replace
191	[BUG]  [BUGGY]  if(f!=  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  [CE]  ';'  expected  [FE]              StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    true;    }    	non-compiled	[CE]  ';'  expected	45	None	replace
192	[BUG]  [BUGGY]  enable(f,  _ioContext,  ctxt);  [CE]  cannot  find  symbol  ctxt  [FE]            StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f,  _ioContext,  ctxt);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f,  _ioContext,  ctxt);	  enable(f,    _ioContext);    	non-compiled	[CE]  cannot  find  symbol  ctxt	25	None	replace
193	[BUG]  [BUGGY]  enable(_ioContext,  f);  [CE]  no  suitable  method  found  for  enable(IOContext,Feature)  [FE]              StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(_ioContext,  f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(_ioContext,  f);	  enable(f,    _ioContext);    	non-compiled	[CE]  no  suitable  method  found  for  enable(IOContext,Feature)	25	None	replace
194	[BUG]  [BUGGY]  enable(f,  _ioContext,  _maximumNonEscapedChar);  [CE]  no  suitable  method  found  for  enable(Feature,IOContext,int)  [FE]                StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f,  _ioContext,  _maximumNonEscapedChar);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f,  _ioContext,  _maximumNonEscapedChar);	  enable(f,    _ioContext);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,IOContext,int)	25	None	replace
195	[BUG]  [BUGGY]  enable(f,  ctxt);  [CE]  cannot  find  symbol  ctxt  [FE]                  StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f,  ctxt);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f,  ctxt);	  enable(f,    _ioContext);    	non-compiled	[CE]  cannot  find  symbol  ctxt	25	None	replace
196	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  true;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	_cfgUnqNames  =  true;	          if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    true;    }    	compilable	  [FE]  ComparisonFailure  	49	1	replace
197	[BUG]  [BUGGY]  _cfgUnqNames  =  true;  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  true;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  true;	          if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    true;    }    	compilable	  [FE]  ComparisonFailure  	49	1	replace
198	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }	          if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    true;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	49	None	replace
199	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||  f.isFeature(Feature.QUOTE_FIELD_NAMES))  {  super.enable(f);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null  ||  f.isFeature(Feature.QUOTE_FIELD_NAMES))  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null  ||  f.isFeature(Feature.QUOTE_FIELD_NAMES))  {  super.enable(f);  }	  if(f    ==    null    ||    f.isFeature(Feature.QUOTE_FIELD_NAMES))    {    super.enable(f);    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	65	None	replace
200	[BUG]  [BUGGY]  if(f  ==  null  ||  _cfgUnqNames.isFeature(Feature.QUOTE_FIELD_NAMES))  {  super.enable(f);  }  [CE]  boolean  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null  ||  _cfgUnqNames.isFeature(Feature.QUOTE_FIELD_NAMES))  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null  ||  _cfgUnqNames.isFeature(Feature.QUOTE_FIELD_NAMES))  {  super.enable(f);  }	  if(f    ==    null    ||    f.isFeature(Feature.QUOTE_FIELD_NAMES))    {    super.enable(f);    }    	non-compiled	[CE]  boolean  cannot  be  dereferenced	65	None	replace
201	[BUG]  [BUGGY]  if(f  ==  null  ||!f.isFeature(Feature.QUOTE_FIELD_NAMES))  {  super.enable(f);  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null  ||!f.isFeature(Feature.QUOTE_FIELD_NAMES))  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null  ||!f.isFeature(Feature.QUOTE_FIELD_NAMES))  {  super.enable(f);  }	  if(f    ==    null    ||    f.isFeature(Feature.QUOTE_FIELD_NAMES))    {    super.enable(f);    }    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
202	[BUG]  [BUGGY]  _cfgUnqNames  =  super.enable(f,  _maximumNonEscapedChar);  [CE]  no  suitable  method  found  for  enable(Feature,int)  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  super.enable(f,  _maximumNonEscapedChar);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  super.enable(f,  _maximumNonEscapedChar);	  _cfgUnqNames    =    super.enable(f);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,int)	40	None	replace
203	[BUG]  [BUGGY]  _cfgUnqNames  =  super.enable(f,  _ioContext);  [CE]  no  suitable  method  found  for  enable(Feature,IOContext)  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  super.enable(f,  _ioContext);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  super.enable(f,  _ioContext);	  _cfgUnqNames    =    super.enable(f);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,IOContext)	40	None	replace
204	[BUG]  [BUGGY]  _cfgUnqNames  =  super.enable(f,  _rootValueSeparator);  [CE]  no  suitable  method  found  for  enable(Feature,SerializableString)  [FE]                      ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  super.enable(f,  _rootValueSeparator);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  super.enable(f,  _rootValueSeparator);	  _cfgUnqNames    =    super.enable(f);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,SerializableString)	40	None	replace
205	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createRootContext(f);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext  =  _ioContext.createRootContext(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext  =  _ioContext.createRootContext(f);	  if(_ioContext.enable(f))    {    _ioContext.enable(f);    }    else    {    _ioContext    =    _ioContext.createRootContext(f);    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	59	None	replace
206	[BUG]  [BUGGY]  if(_ioContext.enable(f))  {  _ioContext  =  _ioContext.createRootContext(f);  }  else  {  _ioContext  =  _ioContext.createRootContext(f);  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_ioContext.enable(f))  {  _ioContext  =  _ioContext.createRootContext(f);  }  else  {  _ioContext  =  _ioContext.createRootContext(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_ioContext.enable(f))  {  _ioContext  =  _ioContext.createRootContext(f);  }  else  {  _ioContext  =  _ioContext.createRootContext(f);  }	  if(_ioContext.enable(f))    {    _ioContext.enable(f);    }    else    {    _ioContext    =    _ioContext.createRootContext(f);    }    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
207	[BUG]  [BUGGY]  if(_ioContext.enable(f))  {  _ioContext  =  _ioContext.createRootContext(f);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_ioContext.enable(f))  {  _ioContext  =  _ioContext.createRootContext(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_ioContext.enable(f))  {  _ioContext  =  _ioContext.createRootContext(f);  }	  if(_ioContext.enable(f))    {    _ioContext.enable(f);    }    else    {    _ioContext    =    _ioContext.createRootContext(f);    }    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
208	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._cfgUnqNames  =  false;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	this._cfgUnqNames  =  false;	  super.enable(f);    this._cfgUnqNames    =    false;    	compilable	  [FE]  ComparisonFailure  	72	1	replace
209	[BUG]  [BUGGY]  this._cfgUnqNames  =  false;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._cfgUnqNames  =  false;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._cfgUnqNames  =  false;	  super.enable(f);    this._cfgUnqNames    =    false;    	compilable	  [FE]  ComparisonFailure  	72	1	replace
210	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  super.enable(f);  this._cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f  ==  null)  {  super.enable(f);  this._cfgUnqNames  =  false;  }	  super.enable(f);    this._cfgUnqNames    =    false;    	compilable	  [FE]  ComparisonFailure  	72	1	replace
211	[BUG]  [BUGGY]  if(f  ==  null)  {  super.enable(f);  this._cfgUnqNames  =  false;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  super.enable(f);  this._cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  super.enable(f);  this._cfgUnqNames  =  false;  }	  super.enable(f);    this._cfgUnqNames    =    false;    	compilable	  [FE]  ComparisonFailure  	72	1	replace
212	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._cfgUnqNames  =  true;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	this._cfgUnqNames  =  true;	  super.enable(f);    this._cfgUnqNames    =    false;    	compilable	  [FE]  ComparisonFailure  	72	1	replace
213	[BUG]  [BUGGY]  this._cfgUnqNames  =  true;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._cfgUnqNames  =  true;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._cfgUnqNames  =  true;	  super.enable(f);    this._cfgUnqNames    =    false;    	compilable	  [FE]  ComparisonFailure  	72	1	replace
214	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._cfgUnqNames  =  true;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);  this._cfgUnqNames  =  true;	  super.enable(f);    this._cfgUnqNames    =    false;    	compilable	  [FE]  ComparisonFailure  	72	1	replace
215	[BUG]  [BUGGY]  super.enable(f);  this._cfgUnqNames  =  true;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._cfgUnqNames  =  true;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);  this._cfgUnqNames  =  true;	  super.enable(f);    this._cfgUnqNames    =    false;    	compilable	  [FE]  ComparisonFailure  	72	1	replace
216	[BUG]  [BUGGY]  this.enable(f,  _maximumNonEscapedChar);  [CE]  no  suitable  method  found  for  enable(Feature,int)  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this.enable(f,  _maximumNonEscapedChar);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this.enable(f,  _maximumNonEscapedChar);	  this.enable(f);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,int)	18	None	replace
217	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=  null)  {  this.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=  null)  {  this.enable(f);  }	  this.enable(f);    	compilable	  [FE]  StackOverflowError  	18	1	replace
218	[BUG]  [BUGGY]  if(f!=  null)  {  this.enable(f);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=  null)  {  this.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=  null)  {  this.enable(f);  }	  this.enable(f);    	compilable	  [FE]  StackOverflowError  	18	1	replace
219	[BUG]  [BUGGY]  enable(ctxt);  _reportUndetectableSource(f);  [CE]  cannot  find  symbol  ctxt  [FE]            StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(ctxt);  _reportUndetectableSource(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(ctxt);  _reportUndetectableSource(f);	  enable(f);    _reportUndetectableSource(f);    	non-compiled	[CE]  cannot  find  symbol  ctxt	62	None	replace
220	[BUG]  [BUGGY]  _ioContext.enable(f,  _rootValueSeparator);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext.enable(f,  _rootValueSeparator);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext.enable(f,  _rootValueSeparator);	  _ioContext.enable(f,    ctxt);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
221	[BUG]  [BUGGY]  enable(f,  _cfgUnqNames,  _maximumNonEscapedChar);  [CE]  no  suitable  method  found  for  enable(Feature,boolean,int)  [FE]          StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f,  _cfgUnqNames,  _maximumNonEscapedChar);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f,  _cfgUnqNames,  _maximumNonEscapedChar);	  enable(f,    _cfgUnqNames);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,boolean,int)	24	None	replace
222	[BUG]  [BUGGY]  enable(f,  _cfgUnqNames,  _rootValueSeparator);  [CE]  no  suitable  method  found  for  enable(Feature,boolean,SerializableString)  [FE]            StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f,  _cfgUnqNames,  _rootValueSeparator);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f,  _cfgUnqNames,  _rootValueSeparator);	  enable(f,    _cfgUnqNames);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,boolean,SerializableString)	24	None	replace
223	[BUG]  [BUGGY]  enable(f,  _rootValueSeparator,  _cfgUnqNames);  [CE]  no  suitable  method  found  for  enable(Feature,SerializableString,boolean)  [FE]              StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f,  _rootValueSeparator,  _cfgUnqNames);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f,  _rootValueSeparator,  _cfgUnqNames);	  enable(f,    _cfgUnqNames);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,SerializableString,boolean)	24	None	replace
224	[BUG]  [BUGGY]  enable(_cfgUnqNames,  f);  [CE]  no  suitable  method  found  for  enable(boolean,Feature)  [FE]                StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(_cfgUnqNames,  f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(_cfgUnqNames,  f);	  enable(f,    _cfgUnqNames);    	non-compiled	[CE]  no  suitable  method  found  for  enable(boolean,Feature)	24	None	replace
225	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _features  |=  f.getMask()  +  1;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	_features  |=  f.getMask()  +  1;	          _features    |=    f.getMask();    	compilable	  [FE]  ComparisonFailure  	55	1	replace
226	[BUG]  [BUGGY]  _features  |=  f.getMask()  +  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _features  |=  f.getMask()  +  1;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_features  |=  f.getMask()  +  1;	          _features    |=    f.getMask();    	compilable	  [FE]  ComparisonFailure  	55	1	replace
227	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _features  |=  f.getMask()  *  2;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	_features  |=  f.getMask()  *  2;	          _features    |=    f.getMask();    	compilable	  [FE]  ComparisonFailure  	55	1	replace
228	[BUG]  [BUGGY]  _features  |=  f.getMask()  *  2;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _features  |=  f.getMask()  *  2;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_features  |=  f.getMask()  *  2;	          _features    |=    f.getMask();    	compilable	  [FE]  ComparisonFailure  	55	1	replace
229	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	11	1	add
230	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	11	1	add
231	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	11	1	add
232	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	11	1	add
233	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	11	1	add
234	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	11	1	add
235	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	11	1	add
236	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	11	1	add
237	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	11	1	add
238	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	11	1	add
239	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  false;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	_cfgUnqNames  =  false;	  if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    false;    }    	compilable	  [FE]  ComparisonFailure  	46	1	replace
240	[BUG]  [BUGGY]  _cfgUnqNames  =  false;  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  false;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  false;	  if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    false;    }    	compilable	  [FE]  ComparisonFailure  	46	1	replace
241	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }	  if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    false;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	46	None	replace
242	[BUG]  [BUGGY]  if(f  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  false;  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  false;  }	  if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    false;    }    	non-compiled	[CE]  ';'  expected	46	None	replace
243	[BUG]  [BUGGY]  _ioContext  =  ctxt.getCurrentNodePointer();  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext  =  ctxt.getCurrentNodePointer();  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext  =  ctxt.getCurrentNodePointer();	  _ioContext    =    _ioContext.getCurrentNodePointer();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	42	None	replace
244	[BUG]  [BUGGY]  _ioContext  =  f.getCurrentNodePointer();  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext  =  f.getCurrentNodePointer();  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext  =  f.getCurrentNodePointer();	  _ioContext    =    _ioContext.getCurrentNodePointer();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	42	None	replace
245	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  enable(f);  _cfgUnqNames  =  super.enable(f);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]        StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames!=  null)  {  enable(f);  _cfgUnqNames  =  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames!=  null)  {  enable(f);  _cfgUnqNames  =  super.enable(f);  }	  enable(f);    _cfgUnqNames    =    super.enable(f);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	60	None	replace
246	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  _cfgUnqNames  =  super.enable(f);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]          StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  _cfgUnqNames  =  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  enable(f);  _cfgUnqNames  =  super.enable(f);  }	  enable(f);    _cfgUnqNames    =    super.enable(f);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	60	None	replace
247	[BUG]  [BUGGY]  _reportUndetectableSource(f,  _maximumNonEscapedChar);  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _reportUndetectableSource(f,  _maximumNonEscapedChar);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_reportUndetectableSource(f,  _maximumNonEscapedChar);	  _reportUndetectableSource(f);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
248	[BUG]  [BUGGY]  _reportUndetectableSource(f,  _rootValueSeparator);  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _reportUndetectableSource(f,  _rootValueSeparator);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_reportUndetectableSource(f,  _rootValueSeparator);	  _reportUndetectableSource(f);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
249	[BUG]  [BUGGY]  _reportUndetectableSource(this,  f);  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _reportUndetectableSource(this,  f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_reportUndetectableSource(this,  f);	  _reportUndetectableSource(f);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
250	[BUG]  [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl(f);  [CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  new  JsonGeneratorImpl(f);	  _cfgUnqNames    =    new    JsonGeneratorImpl();    	non-compiled	[CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated	34	None	replace
251	[BUG]  [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl(f.getMask());  [CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl(f.getMask());  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  new  JsonGeneratorImpl(f.getMask());	  _cfgUnqNames    =    new    JsonGeneratorImpl();    	non-compiled	[CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated	34	None	replace
252	[BUG]  [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl(f.getModule());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl(f.getModule());  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  new  JsonGeneratorImpl(f.getModule());	  _cfgUnqNames    =    new    JsonGeneratorImpl();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
253	[BUG]  [BUGGY]  if(_ioContext.enable(f))  {  _ioContext  =  _ioContext.createChildObjectContext(f);  }  else  {  _ioContext  =  _ioContext.createChildObjectCon  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_ioContext.enable(f))  {  _ioContext  =  _ioContext.createChildObjectContext(f);  }  else  {  _ioContext  =  _ioContext.createChildObjectCon  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_ioContext.enable(f))  {  _ioContext  =  _ioContext.createChildObjectContext(f);  }  else  {  _ioContext  =  _ioContext.createChildObjectCon	  if(_ioContext.enable(f))    {    _ioContext.enable(f);    }    else    {    _ioContext    =    _ioContext.createChildObjectContext(f);    }    	non-compiled	[CE]  ';'  expected	58	None	replace
254	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  if(f!=  null)  {  _cfgUnqNames  =  false;  }  [CE]  ';'  expected  [FE]        StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  if(f!=  null)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  enable(f);  if(f!=  null)  {  _cfgUnqNames  =  false;  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    false;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
255	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  false;  }  [CE]  ';'  expected  [FE]          StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  enable(f);  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  false;  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    false;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
256	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f        ==        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  _cfgUnqNames  =  false;  }	  	compilable	  [FE]  ComparisonFailure  	13	1	add
257	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  _cfgUnqNames  =  false;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  _cfgUnqNames  =  false;  }	  	compilable	  [FE]  ComparisonFailure  	13	1	add
258	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
259	[BUG]  [BUGGY]  if(f!=  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]            StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  enable(f);    if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  ';'  expected	4	None	replace
260	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]              StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  enable(f);    if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  ';'  expected	4	None	replace
261	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this.enable(f);  if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	this.enable(f);    if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  StackOverflowError  	17	1	add
262	[BUG]  [BUGGY]  this.enable(f);  if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  0;  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this.enable(f);  if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this.enable(f);    if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  StackOverflowError  	17	1	add
263	[BUG]  [BUGGY]  this.enable(f);  if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this.enable(f);  if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this.enable(f);    if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
264	[BUG]  [BUGGY]  this.enable(f);  if(_cfgUnqNames  ==  null)  {  this.enable(f);  }  else  {  _cfgUnqNames  =  false;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]        StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this.enable(f);  if(_cfgUnqNames  ==  null)  {  this.enable(f);  }  else  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this.enable(f);    if(_cfgUnqNames  ==  null)  {  this.enable(f);  }  else  {  _cfgUnqNames  =  false;  }	  	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	17	None	add
265	[BUG]  [BUGGY]  this.enable(f);  if(_cfgUnqNames  ==  null)  {  this.enable(f);  }  else  {  _cfgUnqNames  =  true;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]          StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this.enable(f);  if(_cfgUnqNames  ==  null)  {  this.enable(f);  }  else  {  _cfgUnqNames  =  true;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this.enable(f);    if(_cfgUnqNames  ==  null)  {  this.enable(f);  }  else  {  _cfgUnqNames  =  true;  }	  	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	17	None	add
266	[BUG]  [BUGGY]  enable(f,  _outputEscapes,  _maximumNonEscapedChar);  [CE]  no  suitable  method  found  for  enable(Feature,int[],int)  [FE]        StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f,  _outputEscapes,  _maximumNonEscapedChar);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f,  _outputEscapes,  _maximumNonEscapedChar);	  enable(f,    _maximumNonEscapedChar);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,int[],int)	23	None	replace
267	[BUG]  [BUGGY]  enable(f,  _maximumNonEscapedChar,  _rootValueSeparator);  [CE]  no  suitable  method  found  for  enable(Feature,int,SerializableString)  [FE]          StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f,  _maximumNonEscapedChar,  _rootValueSeparator);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f,  _maximumNonEscapedChar,  _rootValueSeparator);	  enable(f,    _maximumNonEscapedChar);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,int,SerializableString)	23	None	replace
268	[BUG]  [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(1);  [CE]  type  JsonGeneratorImpl  does  not  take  parameters  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(1);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(1);	  _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    	non-compiled	[CE]  type  JsonGeneratorImpl  does  not  take  parameters	37	None	replace
269	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.en  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.en  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.en	  	non-compiled	[CE]  not  a  statement	11	None	add
270	[BUG]  [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(1);  [CE]  type  JsonGeneratorImpl  does  not  take  parameters  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(1);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(1);	  this._cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    	non-compiled	[CE]  type  JsonGeneratorImpl  does  not  take  parameters	70	None	replace
271	[BUG]  [BUGGY]  if(f!=  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [CE]  ';'  expected  [FE]              StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=  null)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Object>();    }    	non-compiled	[CE]  ';'  expected	5	None	replace
272	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  if(f!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [CE]  ';'  expected  [FE]                StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  if(f!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  enable(f);  if(f!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Object>();    }    	non-compiled	[CE]  ';'  expected	5	None	replace
273	[BUG]  [BUGGY]  if(_ioContext  ==  null  ||  f.isFeature(Feature.QUOTE_FIELD_NAMES))  {  super.enable(f);  }  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_ioContext  ==  null  ||  f.isFeature(Feature.QUOTE_FIELD_NAMES))  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_ioContext  ==  null  ||  f.isFeature(Feature.QUOTE_FIELD_NAMES))  {  super.enable(f);  }	  if(f    ==    null    ||    f.isFeature(Feature.QUOTE_FIELD_NAMES))    {    super.enable(f);    }    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
274	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  super.enable(f);  this._maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f  ==  null)  {  super.enable(f);  this._maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }	  super.enable(f);    this._maximumNonEscapedChar    =    0;    	compilable	  [FE]  ComparisonFailure  	53	1	replace
275	[BUG]  [BUGGY]  if(f  ==  null)  {  super.enable(f);  this._maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  super.enable(f);  this._maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  super.enable(f);  this._maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }	  super.enable(f);    this._maximumNonEscapedChar    =    0;    	compilable	  [FE]  ComparisonFailure  	53	1	replace
276	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  false)  {  if(f  ==  null)  {  super.enable(f);  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  false)  {  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  false)  {  if(f  ==  null)  {  super.enable(f);  }	  if(f    ==    null)    {    super.enable(f);    }    if(f    ==    null)    {    super.enable(f);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
277	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  }  else  {  _cfgUnqNames  =  new  JsonGeneratorImpl();  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  }  else  {  _cfgUnqNames  =  new  JsonGeneratorImpl();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  enable(f);  }  else  {  _cfgUnqNames  =  new  JsonGeneratorImpl();  }	  enable(f);    enable(f);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	2	None	replace
278	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
279	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
280	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
281	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
282	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  _cfgUnqNames  =  false;  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
283	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  _cfgUnqNames  =  false;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  _cfgUnqNames  =  false;  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
284	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  if(f!=  null)  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    this._maximumNonEscapedChar    =    0;    if(f!=  null)  {  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	52	1	add
285	[BUG]  [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  if(f!=  null)  {  _maximumNonEscapedChar  =  0;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  if(f!=  null)  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    this._maximumNonEscapedChar    =    0;    if(f!=  null)  {  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	52	1	add
286	[BUG]  [BUGGY]  JsonContext  _ioContext  =  _ioContext.enable(f);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  JsonContext  _ioContext  =  _ioContext.enable(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	JsonContext  _ioContext  =  _ioContext.enable(f);	  _ioContext    =    _ioContext.enable(f);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
287	[BUG]  [BUGGY]  this._ioContext  =  _ioContext.enable(f);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._ioContext  =  _ioContext.enable(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._ioContext  =  _ioContext.enable(f);	  _ioContext    =    _ioContext.enable(f);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	20	None	replace
288	[BUG]  [BUGGY]  enable(f);    enable(f);  if(f  instanceof  Feature)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  [CE]  ';'  expected  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f);    enable(f);  if(f  instanceof  Feature)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);        enable(f);    if(f  instanceof  Feature)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }	  	non-compiled	[CE]  ';'  expected	1	None	add
289	[BUG]  [BUGGY]  enable(f);    enable(f);  if(f  instanceof  Feature)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  [CE]  ';'  expected  [FE]      StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f);    enable(f);  if(f  instanceof  Feature)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);        enable(f);    if(f  instanceof  Feature)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }	  	non-compiled	[CE]  ';'  expected	1	None	add
290	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=  null  &&  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=  null  &&  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }	  if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	67	1	replace
291	[BUG]  [BUGGY]  if(f!=  null  &&  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=  null  &&  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=  null  &&  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }	  if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	67	1	replace
292	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }	  if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	67	1	replace
293	[BUG]  [BUGGY]  if(f!=  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }	  if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	67	1	replace
294	[BUG]  [BUGGY]  _ioContext.enable(f,  this);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext.enable(f,  this);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext.enable(f,  this);	  _ioContext.enable(f,    _maximumNonEscapedChar);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
295	[BUG]  [BUGGY]  if(f  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  true;  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  true;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  true;  }	          if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    true;    }    	non-compiled	[CE]  ';'  expected	49	None	replace
296	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  if(f!=  null)  {  _cfgUnqNames  =  true;  }  [CE]  ';'  expected  [FE]          StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  if(f!=  null)  {  _cfgUnqNames  =  true;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  enable(f);  if(f!=  null)  {  _cfgUnqNames  =  true;  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    true;    }    	non-compiled	[CE]  ';'  expected	45	None	replace
297	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=  null)  {  super.enable(f);  this._cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=  null)  {  super.enable(f);  this._cfgUnqNames  =  false;  }	  super.enable(f);    this._cfgUnqNames    =    false;    	compilable	  [FE]  ComparisonFailure  	72	1	replace
298	[BUG]  [BUGGY]  if(f!=  null)  {  super.enable(f);  this._cfgUnqNames  =  false;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=  null)  {  super.enable(f);  this._cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=  null)  {  super.enable(f);  this._cfgUnqNames  =  false;  }	  super.enable(f);    this._cfgUnqNames    =    false;    	compilable	  [FE]  ComparisonFailure  	72	1	replace
299	[BUG]  [BUGGY]  enable(f):  _reportUndetectableSource(f);  [CE]  ';'  expected  [FE]            StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f):  _reportUndetectableSource(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f):  _reportUndetectableSource(f);	  enable(f);    _reportUndetectableSource(f);    	non-compiled	[CE]  ';'  expected	62	None	replace
300	[BUG]  [BUGGY]  if(f!=  null)  {  if(_maximumNonEscapedChar!=  0)  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=  null)  {  if(_maximumNonEscapedChar!=  0)  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=  null)  {  if(_maximumNonEscapedChar!=  0)  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }	  if(f    ==    null)    {    if(_maximumNonEscapedChar!=    0)    {    _maximumNonEscapedChar    =    f.getMaximumNonEscapedChar();    }    	non-compiled	[CE]  ';'  expected	8	None	replace
301	[BUG]  [BUGGY]  enable(f,  _rootValueSeparator);  [CE]  no  suitable  method  found  for  enable(Feature,SerializableString)  [FE]          StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f,  _rootValueSeparator);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f,  _rootValueSeparator);	  enable(f,    _cfgUnqNames);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,SerializableString)	24	None	replace
302	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  false)  {  super.enable(f);  }  if(_cfgUnqNames  ==  false)  {  this.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(_cfgUnqNames    ==    false)    {    super.enable(f);    }    if(_cfgUnqNames  ==  false)  {  this.enable(f);  }	  	compilable	  [FE]  StackOverflowError  	47	1	add
303	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  false)  {  super.enable(f);  }  if(_cfgUnqNames  ==  false)  {  this.enable(f);  }  [FE]  StackOverflowError  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  false)  {  super.enable(f);  }  if(_cfgUnqNames  ==  false)  {  this.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames    ==    false)    {    super.enable(f);    }    if(_cfgUnqNames  ==  false)  {  this.enable(f);  }	  	compilable	  [FE]  StackOverflowError  	47	1	add
304	[BUG]  [BUGGY]  _reportUndetectableSource(f,  _config);  [CE]  cannot  find  symbol  _config  [FE]        StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _reportUndetectableSource(f,  _config);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_reportUndetectableSource(f,  _config);	  _reportUndetectableSource(f);    	non-compiled	[CE]  cannot  find  symbol  _config	57	None	replace
305	[BUG]  [BUGGY]  JsonGenerator.enable(f);  [CE]  non-static  method  enable(Feature)  cannot  be  referenced  from  a  static  context  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  JsonGenerator.enable(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	JsonGenerator.enable(f);	  Super.enable(f);    	non-compiled	[CE]  non-static  method  enable(Feature)  cannot  be  referenced  from  a  static  context	19	None	replace
306	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    _maximumNonEscapedChar    =    0;    if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	32	1	add
307	[BUG]  [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    _maximumNonEscapedChar    =    0;    if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	32	1	add
308	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  if(f!=  null)  {  _maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    _maximumNonEscapedChar    =    0;    if(f!=  null)  {  _maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	32	1	add
309	[BUG]  [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  if(f!=  null)  {  _maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  if(f!=  null)  {  _maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    _maximumNonEscapedChar    =    0;    if(f!=  null)  {  _maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	32	1	add
310	[BUG]  [BUGGY]  enable(f,  _ioContext,  _cfgUnqNames);  [CE]  no  suitable  method  found  for  enable(Feature,IOContext,boolean)  [FE]            StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f,  _ioContext,  _cfgUnqNames);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f,  _ioContext,  _cfgUnqNames);	  enable(f,    _ioContext);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,IOContext,boolean)	25	None	replace
311	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  if(f!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]          StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  if(f!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  enable(f);  if(f!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  ';'  expected	3	None	replace
312	[BUG]  [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl(f,  _maximumNonEscapedChar);  [CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl(f,  _maximumNonEscapedChar);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._cfgUnqNames  =  new  JsonGeneratorImpl(f,  _maximumNonEscapedChar);	  this._cfgUnqNames    =    new    JsonGeneratorImpl();    	non-compiled	[CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated	64	None	replace
313	[BUG]  [BUGGY]  if(f!=  null)  {  if(_maximumNonEscapedChar  ==  0)  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=  null)  {  if(_maximumNonEscapedChar  ==  0)  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=  null)  {  if(_maximumNonEscapedChar  ==  0)  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }	  if(f    ==    null)    {    if(_maximumNonEscapedChar    ==    0)    {    _maximumNonEscapedChar    =    f.getMaximumNonEscapedChar();    }    	non-compiled	[CE]  ';'  expected	9	None	replace
314	[BUG]  [BUGGY]  _ioContext.setCurrentName(f,  _config.getName());  [CE]  cannot  find  symbol  _config  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext.setCurrentName(f,  _config.getName());  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext.setCurrentName(f,  _config.getName());	          _ioContext.setCurrentName(f.getName());    	non-compiled	[CE]  cannot  find  symbol  _config	56	None	replace
315	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  _cfgUnqNames  =  false;  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
316	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  _cfgUnqNames  =  false;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  _cfgUnqNames  =  false;  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
317	[BUG]  [BUGGY]  _cfgUnqNames  =  _cfgUnqNames.keySet().get(f);  [CE]  boolean  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  _cfgUnqNames.keySet().get(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  _cfgUnqNames.keySet().get(f);	  _cfgUnqNames    =    _cfgUnqNames.get(f);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	43	None	replace
318	[BUG]  [BUGGY]  JsonContext  _ioContext  =  _ioContext.createChildObjectContext(f);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  JsonContext  _ioContext  =  _ioContext.createChildObjectContext(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	JsonContext  _ioContext  =  _ioContext.createChildObjectContext(f);	  _ioContext    =    _ioContext.createChildObjectContext(f);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
319	[BUG]  [BUGGY]          _features  |=  f.getMask();  int  _features  |=  f.getMask();  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]          _features  |=  f.getMask();  int  _features  |=  f.getMask();  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	                _features    |=    f.getMask();    int  _features  |=  f.getMask();	  	non-compiled	[CE]  ';'  expected	54	None	add
320	[BUG]  [BUGGY]          _features  |=  f.getMask();  CharacterEscapes  _features  |=  f.getMask();  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]          _features  |=  f.getMask();  CharacterEscapes  _features  |=  f.getMask();  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	                _features    |=    f.getMask();    CharacterEscapes  _features  |=  f.getMask();	  	non-compiled	[CE]  ';'  expected	54	None	add
321	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  this.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    this.enable(f);    }    if(f  ==  null)  {  this.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
322	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  this.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  this.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    this.enable(f);    }    if(f  ==  null)  {  this.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
323	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  [CE]  ';'  expected  [FE]          StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    true;    }    	non-compiled	[CE]  ';'  expected	45	None	replace
324	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  true;  }  [CE]  ';'  expected  [FE]            StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  true;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  true;  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    true;    }    	non-compiled	[CE]  ';'  expected	45	None	replace
325	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  }  [CE]  ';'  expected  [FE]              StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    true;    }    	non-compiled	[CE]  ';'  expected	45	None	replace
326	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    _maximumNonEscapedChar    =    0;    if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	32	1	add
327	[BUG]  [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    _maximumNonEscapedChar    =    0;    if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	32	1	add
328	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    _maximumNonEscapedChar    =    0;    if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	32	1	add
329	[BUG]  [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    _maximumNonEscapedChar    =    0;    if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  else  {  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	32	1	add
330	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  _reportUndetectableSource(f);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]            StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  enable(f);  _reportUndetectableSource(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  enable(f);  _reportUndetectableSource(f);  }	  enable(f);    _reportUndetectableSource(f);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	62	None	replace
331	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  enable(f);  _reportUndetectableSource(f);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]              StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames!=  null)  {  enable(f);  _reportUndetectableSource(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames!=  null)  {  enable(f);  _reportUndetectableSource(f);  }	  enable(f);    _reportUndetectableSource(f);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	62	None	replace
332	[BUG]  [BUGGY]  ||  _ioContext.enable(f))  {  _ioContext  =  _ioContext.createRootContext(f);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  ||  _ioContext.enable(f))  {  _ioContext  =  _ioContext.createRootContext(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	||  _ioContext.enable(f))  {  _ioContext  =  _ioContext.createRootContext(f);  }	  if(_ioContext.enable(f))    {    _ioContext.enable(f);    }    else    {    _ioContext    =    _ioContext.createRootContext(f);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
333	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createRootContext(f,  _maximumNonEscapedChar);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext  =  _ioContext.createRootContext(f,  _maximumNonEscapedChar);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext  =  _ioContext.createRootContext(f,  _maximumNonEscapedChar);	  if(_ioContext.enable(f))    {    _ioContext.enable(f);    }    else    {    _ioContext    =    _ioContext.createRootContext(f);    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	59	None	replace
334	[BUG]  [BUGGY]  this._cfgUnqNames  =  enable(f);  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._cfgUnqNames  =  enable(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._cfgUnqNames  =  enable(f);	  if(f    ==    null)    {    super.enable(f);    }    if(f    {    null)    {    super.enable(f);    }    	non-compiled	[CE]  incompatible  types	50	None	replace
335	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [CE]  ';'  expected  [FE]              StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Object>();    }    	non-compiled	[CE]  ';'  expected	5	None	replace
336	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>()  [CE]  ';'  expected  [FE]                StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>()  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>()	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Object>();    }    	non-compiled	[CE]  ';'  expected	5	None	replace
337	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>  [CE]  '('  or  '['  expected  [FE]                  StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Object>();    }    	non-compiled	[CE]  '('  or  '['  expected	5	None	replace
338	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  [CE]  illegal  start  of  type  [FE]                    StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Object>();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
339	[BUG]  [BUGGY]  _cfgUnqNames  =  _cfgUnqNames.encode(f);  [CE]  boolean  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  _cfgUnqNames.encode(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  _cfgUnqNames.encode(f);	  _cfgUnqNames    =    _cfgUnqNames.get(f);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	43	None	replace
340	[BUG]  [BUGGY]  _cfgUnqNames  =  _cfgUnqNames.enable(f);  [CE]  boolean  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _cfgUnqNames  =  _cfgUnqNames.enable(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  _cfgUnqNames.enable(f);	  _cfgUnqNames    =    _cfgUnqNames.get(f);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	43	None	replace
341	[BUG]  [BUGGY]  this._ioContext  =  _ioContext.createChildObjectContext(f);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._ioContext  =  _ioContext.createChildObjectContext(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._ioContext  =  _ioContext.createChildObjectContext(f);	  _ioContext    =    _ioContext.createChildObjectContext(f);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	41	None	replace
342	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }	  if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    false;    }    	non-compiled	[CE]  ';'  expected	46	None	replace
343	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }	  	compilable	  [FE]  ComparisonFailure  	11	1	add
344	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }	  	compilable	  [FE]  ComparisonFailure  	11	1	add
345	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
346	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  true;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  true;  }	  	compilable	  [FE]  ComparisonFailure  	11	1	add
347	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  true;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  true;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  true;  }	  	compilable	  [FE]  ComparisonFailure  	11	1	add
348	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
349	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
350	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  true;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  true;  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
351	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  true;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  true;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  true;  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
352	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  return  this;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  return  this;  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
353	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  return  this;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  return  this;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  return  this;  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
354	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =	  	non-compiled	[CE]  ';'  expected	28	None	add
355	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  true;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    this._cfgUnqNames    =    false;    if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  true;  }	  	compilable	  [FE]  ComparisonFailure  	71	1	add
356	[BUG]  [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  true;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  true;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    this._cfgUnqNames    =    false;    if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  true;  }	  	compilable	  [FE]  ComparisonFailure  	71	1	add
357	[BUG]  [BUGGY]  if(_maximumNonEscapedChar  ==  0)  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_maximumNonEscapedChar  ==  0)  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_maximumNonEscapedChar  ==  0)  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }	  if(f    ==    null)    {    if(_maximumNonEscapedChar    ==    0)    {    _maximumNonEscapedChar    =    f.getMaximumNonEscapedChar();    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
358	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);    this._maximumNonEscapedChar    =    0;    if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	52	1	add
359	[BUG]  [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);    this._maximumNonEscapedChar    =    0;    if(f!=  Feature.QUOTE_FIELD_NAMES)  {  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  ComparisonFailure  	52	1	add
360	[BUG]  [BUGGY]  _reportUndetectableSource(f,  _cfgUnqNames);  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _reportUndetectableSource(f,  _cfgUnqNames);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_reportUndetectableSource(f,  _cfgUnqNames);	  _reportUndetectableSource(f);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
361	[BUG]  [BUGGY]  if(_maximumNonEscapedChar!=  0)  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_maximumNonEscapedChar!=  0)  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_maximumNonEscapedChar!=  0)  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }	  if(f    ==    null)    {    if(_maximumNonEscapedChar!=    0)    {    _maximumNonEscapedChar    =    f.getMaximumNonEscapedChar();    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
362	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  this.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f        ==        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  this.enable(f);  }	  	compilable	  [FE]  StackOverflowError  	13	1	add
363	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  this.enable(f);  }  [FE]  StackOverflowError  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  this.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  this.enable(f);  }	  	compilable	  [FE]  StackOverflowError  	13	1	add
364	[BUG]  [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  >=  null)  {  super.enable(f);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  if(f  >=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f        ==        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }  if(f  >=  null)  {  super.enable(f);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	13	None	add
365	[BUG]  [BUGGY]  _ioContext.enable(f,  _cfgUnqNames);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext.enable(f,  _cfgUnqNames);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext.enable(f,  _cfgUnqNames);	  _ioContext.enable(f,    ctxt);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
366	[BUG]  [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(2);  [CE]  type  JsonGeneratorImpl  does  not  take  parameters  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(2);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>(2);	  this._cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    	non-compiled	[CE]  type  JsonGeneratorImpl  does  not  take  parameters	70	None	replace
367	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]          StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  ';'  expected	3	None	replace
368	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>()  [CE]  ';'  expected  [FE]            StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>()  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>()	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  ';'  expected	3	None	replace
369	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>  [CE]  '('  or  '['  expected  [FE]              StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  '('  or  '['  expected	3	None	replace
370	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]                StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  enable(f);    if(f    ==    null)    {    if(_cfgUnqNames!=    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  ';'  expected	6	None	replace
371	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]                  StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  enable(f);    if(f    ==    null)    {    if(_cfgUnqNames!=    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  ';'  expected	6	None	replace
372	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]                    StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  enable(f);    if(f    ==    null)    {    if(_cfgUnqNames!=    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  ';'  expected	6	None	replace
373	[BUG]  [BUGGY]  this._cfgUnqNames  =  f;  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._cfgUnqNames  =  f;  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._cfgUnqNames  =  f;	  this._cfgUnqNames    =    new    JsonGeneratorImpl();    	non-compiled	[CE]  incompatible  types	64	None	replace
374	[BUG]  [BUGGY]  this._cfgUnqNames  =  f.isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._cfgUnqNames  =  f.isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._cfgUnqNames  =  f.isEnabled(Feature.QUOTE_FIELD_NAMES);	  this.enable(f);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
375	[BUG]  [BUGGY]  this._cfgUnqNames  =  f.getMask();  [CE]  incompatible  types  [FE]      StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._cfgUnqNames  =  f.getMask();  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._cfgUnqNames  =  f.getMask();	  this.enable(f);    	non-compiled	[CE]  incompatible  types	18	None	replace
376	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  [CE]  ';'  expected  [FE]        StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    false;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
377	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  disable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  [CE]  ';'  expected  [FE]          StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  disable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  disable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    false;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
378	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  }  [CE]  ';'  expected  [FE]            StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  }	  enable(f);    if(f!=    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    false;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
379	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  super.enable(f);  }  else  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  super.enable(f);  }  else  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  super.enable(f);  }  else  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  _cfgUnqNames    =    super.enable(f);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	40	None	replace
380	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  super.enable(f);  }  else  {  _cfgUnqNames  =  new  JsonGeneratorImpl();  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  super.enable(f);  }  else  {  _cfgUnqNames  =  new  JsonGeneratorImpl();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  super.enable(f);  }  else  {  _cfgUnqNames  =  new  JsonGeneratorImpl();  }	  _cfgUnqNames    =    super.enable(f);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	40	None	replace
381	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  super.enable(f);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]                      ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  super.enable(f);  }	  _cfgUnqNames    =    super.enable(f);    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	40	None	replace
382	[BUG]  [BUGGY]  ||  _ioContext.enable(f))  {  _ioContext  =  _ioContext.createChildObjectContext(f);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  ||  _ioContext.enable(f))  {  _ioContext  =  _ioContext.createChildObjectContext(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	||  _ioContext.enable(f))  {  _ioContext  =  _ioContext.createChildObjectContext(f);  }	  if(_ioContext.enable(f))    {    _ioContext.enable(f);    }    else    {    _ioContext    =    _ioContext.createChildObjectContext(f);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
383	[BUG]  [BUGGY]  _ioContext.setCurrentName(f,  f.getName());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext.setCurrentName(f,  f.getName());  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext.setCurrentName(f,  f.getName());	          _ioContext.setCurrentName(f.getName());    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
384	[BUG]  [BUGGY]  _ioContext.setCurrentName(f.toString());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext.setCurrentName(f.toString());  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext.setCurrentName(f.toString());	          _ioContext.setCurrentName(f.getName());    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
385	[BUG]  [BUGGY]  _ioContext.setCurrentName(f.name());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext.setCurrentName(f.name());  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext.setCurrentName(f.name());	          _ioContext.setCurrentName(f.getName());    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
386	[BUG]  [BUGGY]  enable(f,  _cfgUnqNames,  true);  [CE]  no  suitable  method  found  for  enable(Feature,boolean,boolean)  [FE]          StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f,  _cfgUnqNames,  true);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f,  _cfgUnqNames,  true);	  enable(f,    _cfgUnqNames);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,boolean,boolean)	24	None	replace
387	[BUG]  [BUGGY]  this.enable(f);  if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  [CE]  ';'  expected  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this.enable(f);  if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this.enable(f);    if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =	  	non-compiled	[CE]  ';'  expected	17	None	add
388	[BUG]  [BUGGY]  this.enable(f);  if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.getLocalMask();  _maximumNonEscapedChar  =  f.getLocalMask();  }  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this.enable(f);  if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.getLocalMask();  _maximumNonEscapedChar  =  f.getLocalMask();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this.enable(f);    if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.getLocalMask();  _maximumNonEscapedChar  =  f.getLocalMask();  }	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
389	[BUG]  [BUGGY]  this.enable(f);  if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  f.intValue();  }  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this.enable(f);  if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  f.intValue();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this.enable(f);    if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  f.intValue();  }	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
390	[BUG]  [BUGGY]  this.enable(f);  if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  0;  }  [CE]  cannot  find  symbol  [FE]          StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this.enable(f);  if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this.enable(f);    if(f!=  null)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  0;  }	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
391	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  this.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  this.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
392	[BUG]  [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  this.enable(f);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  this.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  this.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	66	1	add
393	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
394	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
395	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
396	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }	  	compilable	  [FE]  ComparisonFailure  	26	1	add
397	[BUG]  [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=        null)        {        super.enable(f);        }        if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {	  	non-compiled	[CE]  ';'  expected	26	None	add
398	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_characterEscapes  ==  null)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(_characterEscapes  ==  null)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }	  super.enable(f);    _maximumNonEscapedChar    =    0;    	compilable	  [FE]  ComparisonFailure  	33	1	replace
399	[BUG]  [BUGGY]  if(_characterEscapes  ==  null)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_characterEscapes  ==  null)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_characterEscapes  ==  null)  {  super.enable(f);  _maximumNonEscapedChar  =  0;  }	  super.enable(f);    _maximumNonEscapedChar    =    0;    	compilable	  [FE]  ComparisonFailure  	33	1	replace
400	[BUG]  [BUGGY]  _ioContext  =  config.getCurrentNodePointer();  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  _ioContext  =  config.getCurrentNodePointer();  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext  =  config.getCurrentNodePointer();	  _ioContext    =    _ioContext.getCurrentNodePointer();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	42	None	replace
401	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }	  if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Object>();    }    	non-compiled	[CE]  ';'  expected	10	None	replace
402	[BUG]  [BUGGY]  this._cfgUnqNames  =  super.enable(f);  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  this._cfgUnqNames  =  super.enable(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._cfgUnqNames  =  super.enable(f);	  if(f    ==    null)    {    super.enable(f);    }    If(f    ==    null)    {    super.enable(f);    }    	non-compiled	[CE]  incompatible  types	51	None	replace
403	[BUG]  [BUGGY]  EnableSamples.enable(f);  [CE]  cannot  find  symbol  EnableSamples  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  EnableSamples.enable(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	EnableSamples.enable(f);	  Super.enable(f);    	non-compiled	[CE]  cannot  find  symbol  EnableSamples	19	None	replace
404	[BUG]  [BUGGY]  EnableSamples.features(f);  [CE]  cannot  find  symbol  EnableSamples  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  EnableSamples.features(f);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	EnableSamples.features(f);	  Super.enable(f);    	non-compiled	[CE]  cannot  find  symbol  EnableSamples	19	None	replace
405	[BUG]  [BUGGY]  if(_ioContext!=  null)  {  enable(f);  f  =  _ioContext.createChildObjectGenerator(f);  }  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_ioContext!=  null)  {  enable(f);  f  =  _ioContext.createChildObjectGenerator(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_ioContext!=  null)  {  enable(f);  f  =  _ioContext.createChildObjectGenerator(f);  }	  enable(f);    f    =    _ioContext.createChildObjectGenerator(f);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
406	[BUG]  [BUGGY]  if(_ioContext!=  null)  {  enable(f);  f  =  _ioContext.createChildObjectGenerator(this);  }  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(_ioContext!=  null)  {  enable(f);  f  =  _ioContext.createChildObjectGenerator(this);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_ioContext!=  null)  {  enable(f);  f  =  _ioContext.createChildObjectGenerator(this);  }	  enable(f);    f    =    _ioContext.createChildObjectGenerator(this);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
407	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(f!=  null)  {  super.enable(f);  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(f!=  null)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(f!=  null)  {  super.enable(f);  }	  if(f!=    null)    {    super.enable(f);    }    if(f!=    null)    {    super.enable(f);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
408	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  ';'  expected	7	None	replace
409	[BUG]  [BUGGY]  enable(f,  _maximumNonEscapedChar,  features);  [CE]  cannot  find  symbol  features  [FE]        StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f,  _maximumNonEscapedChar,  features);  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f,  _maximumNonEscapedChar,  features);	  enable(f,    _maximumNonEscapedChar);    	non-compiled	[CE]  cannot  find  symbol  features	23	None	replace
410	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  super.enable(f);  this._cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  super.enable(f);  this._cfgUnqNames  =  false;  }	  super.enable(f);    this._cfgUnqNames    =    false;    	compilable	  [FE]  ComparisonFailure  	72	1	replace
411	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  super.enable(f);  this._cfgUnqNames  =  false;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  super.enable(f);  this._cfgUnqNames  =  false;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  super.enable(f);  this._cfgUnqNames  =  false;  }	  super.enable(f);    this._cfgUnqNames    =    false;    	compilable	  [FE]  ComparisonFailure  	72	1	replace
412	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f);    enable(f);  if(f!=  null)  {  enable(f);  enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	enable(f);        enable(f);    if(f!=  null)  {  enable(f);  enable(f);  }	  	compilable	  [FE]  StackOverflowError  	1	1	add
413	[BUG]  [BUGGY]  enable(f);    enable(f);  if(f!=  null)  {  enable(f);  enable(f);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f);    enable(f);  if(f!=  null)  {  enable(f);  enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);        enable(f);    if(f!=  null)  {  enable(f);  enable(f);  }	  	compilable	  [FE]  StackOverflowError  	1	1	add
414	[BUG]  [BUGGY]  enable(f);    enable(f);  if(f  instanceof  Feature)  {  if(_cfgUnqNames  ==  false)  {  _cfgUnqNames  =  true;  }  [CE]  ';'  expected  [FE]      StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  enable(f);    enable(f);  if(f  instanceof  Feature)  {  if(_cfgUnqNames  ==  false)  {  _cfgUnqNames  =  true;  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);        enable(f);    if(f  instanceof  Feature)  {  if(_cfgUnqNames  ==  false)  {  _cfgUnqNames  =  true;  }	  	non-compiled	[CE]  ';'  expected	1	None	add
415	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null  ||  f.getMask()!=  _maximumNonEscapedChar)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f  ==  null  ||  f.getMask()!=  _maximumNonEscapedChar)  {  super.enable(f);  }	  if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	67	1	replace
416	[BUG]  [BUGGY]  if(f  ==  null  ||  f.getMask()!=  _maximumNonEscapedChar)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  null  ||  f.getMask()!=  _maximumNonEscapedChar)  {  super.enable(f);  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null  ||  f.getMask()!=  _maximumNonEscapedChar)  {  super.enable(f);  }	  if(f    ==    null    ||    f.getMask()    ==    _maximumNonEscapedChar)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	67	1	replace
417	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]            StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  enable(f);    if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  ';'  expected	4	None	replace
418	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]              StackOverflowError      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]      if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  enable(f);  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  enable(f);    if(f    ==    null)    {    if(_cfgUnqNames    ==    null)    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  ';'  expected	4	None	replace
