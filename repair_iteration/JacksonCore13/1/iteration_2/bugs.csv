bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  enable(f);  enable(f);  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	enable(f);    enable(f);	  	compilable	  [FE]  StackOverflowError  	5	1	add
2	[BUG]  [BUGGY]  enable(f);  enable(f);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  enable(f);  enable(f);  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);    enable(f);	  	compilable	  [FE]  StackOverflowError  	5	1	add
3	[BUG]  [BUGGY]  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]      StackOverflowError    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);    if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  	non-compiled	[CE]  ';'  expected	5	None	add
4	[BUG]  [BUGGY]  enable(f);  if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]        StackOverflowError    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  enable(f);  if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);    if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  	non-compiled	[CE]  ';'  expected	5	None	add
5	[BUG]  [BUGGY]  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [CE]  ';'  expected  [FE]          StackOverflowError    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);    if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }	  	non-compiled	[CE]  ';'  expected	5	None	add
6	[BUG]  [BUGGY]  enable(f);  if(f  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]            StackOverflowError    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  enable(f);  if(f  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);    if(f  ==  null)  {  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  	non-compiled	[CE]  ';'  expected	5	None	add
7	[BUG]  [BUGGY]  if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
8	[BUG]  [BUGGY]  if(f  ==  null)  {  if(_maximumNonEscapedChar!=  0)  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f  ==  null)  {  if(_maximumNonEscapedChar!=  0)  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  if(_maximumNonEscapedChar!=  0)  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
9	[BUG]  [BUGGY]  if(f  ==  null)  {  if(_maximumNonEscapedChar  ==  0)  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f  ==  null)  {  if(_maximumNonEscapedChar  ==  0)  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  if(_maximumNonEscapedChar  ==  0)  {  _maximumNonEscapedChar  =  f.getMaximumNonEscapedChar();  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
10	[BUG]  [BUGGY]  if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Object>();  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	3	1	add
12	[BUG]  [BUGGY]  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	3	1	add
13	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	3	1	add
14	[BUG]  [BUGGY]  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f  ==  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f    ==    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	3	1	add
15	[BUG]  [BUGGY]  if(f  ==  null)  {  super.enable(f);  }  if(f  >=  null)  {  super.enable(f);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f  ==  null)  {  super.enable(f);  }  if(f  >=  null)  {  super.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f    ==    null)    {    super.enable(f);    }    if(f  >=  null)  {  super.enable(f);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	3	None	add
16	[BUG]  [BUGGY]  if(f  ==  null)  {  super.enable(f);  }  if(f  >>  null)  {  super.enable(f);  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f  ==  null)  {  super.enable(f);  }  if(f  >>  null)  {  super.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f    ==    null)    {    super.enable(f);    }    if(f  >>  null)  {  super.enable(f);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	3	None	add
17	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  this.enable(f);  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	this.enable(f);	  if(f    ==    null)    {    super.enable(f);    }    	compilable	  [FE]  StackOverflowError  	4	1	replace
18	[BUG]  [BUGGY]  this.enable(f);  [FE]  StackOverflowError  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  this.enable(f);  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this.enable(f);	  if(f    ==    null)    {    super.enable(f);    }    	compilable	  [FE]  StackOverflowError  	4	1	replace
19	[BUG]  [BUGGY]  Super.enable(f);  [CE]  cannot  find  symbol  Super  [FE]      ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  Super.enable(f);  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	Super.enable(f);	  if(f    ==    null)    {    super.enable(f);    }    	non-compiled	[CE]  cannot  find  symbol  Super	4	None	replace
20	[BUG]  [BUGGY]  _ioContext  =  _ioContext.enable(f);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]        ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  _ioContext  =  _ioContext.enable(f);  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext  =  _ioContext.enable(f);	  _ioContext.enable(f);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	9	None	replace
21	[BUG]  [BUGGY]  _ioContext.enable(f,  _maximumNonEscapedChar);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  _ioContext.enable(f,  _maximumNonEscapedChar);  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext.enable(f,  _maximumNonEscapedChar);	  _ioContext.enable(f);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
22	[BUG]  [BUGGY]  _ioContext.enable(f,  ctxt);  [CE]  cannot  find  symbol  ctxt  [FE]            ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  _ioContext.enable(f,  ctxt);  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext.enable(f,  ctxt);	  _ioContext.enable(f);    	non-compiled	[CE]  cannot  find  symbol  ctxt	9	None	replace
23	[BUG]  [BUGGY]  enable(f,  _maximumNonEscapedChar);  [CE]  no  suitable  method  found  for  enable(Feature,int)  [FE]    StackOverflowError    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  enable(f,  _maximumNonEscapedChar);  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f,  _maximumNonEscapedChar);	  enable(f);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,int)	6	None	replace
24	[BUG]  [BUGGY]  enable(f,  _cfgUnqNames);  [CE]  no  suitable  method  found  for  enable(Feature,boolean)  [FE]      StackOverflowError    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  enable(f,  _cfgUnqNames);  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f,  _cfgUnqNames);	  enable(f);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,boolean)	6	None	replace
25	[BUG]  [BUGGY]  enable(f,  _ioContext);  [CE]  no  suitable  method  found  for  enable(Feature,IOContext)  [FE]        StackOverflowError    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  enable(f,  _ioContext);  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f,  _ioContext);	  enable(f);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,IOContext)	6	None	replace
26	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	1	1	add
27	[BUG]  [BUGGY]  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f!=  null)  {  super.enable(f);  }  if(f!=  null)  {  super.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=    null)    {    super.enable(f);    }    if(f!=  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	1	1	add
28	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	1	1	add
29	[BUG]  [BUGGY]  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f!=  null)  {  super.enable(f);  }  if(f  ==  null)  {  super.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=    null)    {    super.enable(f);    }    if(f  ==  null)  {  super.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	1	1	add
30	[BUG]  [BUGGY]  if(f!=  null)  {  super.enable(f);  }  if(f  >=  null)  {  super.enable(f);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f!=  null)  {  super.enable(f);  }  if(f  >=  null)  {  super.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=    null)    {    super.enable(f);    }    if(f  >=  null)  {  super.enable(f);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	1	None	add
31	[BUG]  [BUGGY]  if(f!=  null)  {  super.enable(f);  }  if(f  >>  null)  {  super.enable(f);  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f!=  null)  {  super.enable(f);  }  if(f  >>  null)  {  super.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f!=    null)    {    super.enable(f);    }    if(f  >>  null)  {  super.enable(f);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	1	None	add
32	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);  _maximumNonEscapedChar  =  0;	  if(f!=    null)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	2	1	replace
33	[BUG]  [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  super.enable(f);  _maximumNonEscapedChar  =  0;  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);  _maximumNonEscapedChar  =  0;	  if(f!=    null)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	2	1	replace
34	[BUG]  [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl();  [CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated  [FE]          ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl();  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  new  JsonGeneratorImpl();	  if(_cfgUnqNames    ==    null)    {    super.enable(f);    }    else    {    _cfgUnqNames    =    new    JsonGeneratorImpl();    }    	non-compiled	[CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated	11	None	replace
35	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  super.enable(f);  }  else  {  _cfgUnqNames  =  new  JsonGeneratorImpl();  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]            ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(_cfgUnqNames!=  null)  {  super.enable(f);  }  else  {  _cfgUnqNames  =  new  JsonGeneratorImpl();  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames!=  null)  {  super.enable(f);  }  else  {  _cfgUnqNames  =  new  JsonGeneratorImpl();  }	  if(_cfgUnqNames    ==    null)    {    super.enable(f);    }    else    {    _cfgUnqNames    =    new    JsonGeneratorImpl();    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	11	None	replace
36	[BUG]  [BUGGY]      if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGenerator();  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]      if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGenerator();  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	        if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  new  JsonGenerator();  }	  	non-compiled	[CE]  ';'  expected	7	None	add
37	[BUG]  [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  [CE]  type  JsonGeneratorImpl  does  not  take  parameters  [FE]        ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();	  if(_cfgUnqNames    ==    null)    {    super.enable(f);    }    else    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  type  JsonGeneratorImpl  does  not  take  parameters	10	None	replace
38	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  super.enable(f);  }  else  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]          ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(_cfgUnqNames!=  null)  {  super.enable(f);  }  else  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames!=  null)  {  super.enable(f);  }  else  {  _cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  }	  if(_cfgUnqNames    ==    null)    {    super.enable(f);    }    else    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	10	None	replace
39	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  super.enable(f);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]            ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(_cfgUnqNames!=  null)  {  super.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames!=  null)  {  super.enable(f);  }	  if(_cfgUnqNames    ==    null)    {    super.enable(f);    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	12	None	replace
40	[BUG]  [BUGGY]  _cfgUnqNames  =  super.enable(f);  [CE]  incompatible  types  [FE]              ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  _cfgUnqNames  =  super.enable(f);  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  super.enable(f);	  if(_cfgUnqNames    ==    null)    {    super.enable(f);    }    	non-compiled	[CE]  incompatible  types	12	None	replace
41	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]        ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f);  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext  =  _ioContext.createChildObjectContext(f);	  _ioContext.enable(f);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	9	None	replace
42	[BUG]  [BUGGY]  _ioContext  =  _ioContext.getCurrentNodePointer();  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]          ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  _ioContext  =  _ioContext.getCurrentNodePointer();  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_ioContext  =  _ioContext.getCurrentNodePointer();	  _ioContext.enable(f);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	9	None	replace
43	[BUG]  [BUGGY]  _cfgUnqNames  =  _cfgUnqNames.get(f);  [CE]  boolean  cannot  be  dereferenced  [FE]            ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  _cfgUnqNames  =  _cfgUnqNames.get(f);  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_cfgUnqNames  =  _cfgUnqNames.get(f);	  if(_cfgUnqNames    ==    null)    {    super.enable(f);    }    	non-compiled	[CE]  boolean  cannot  be  dereferenced	12	None	replace
44	[BUG]  [BUGGY]  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  [CE]  ';'  expected  [FE]    StackOverflowError    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);    if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }	  	non-compiled	[CE]  ';'  expected	5	None	add
45	[BUG]  [BUGGY]  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  [CE]  ';'  expected  [FE]      StackOverflowError    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  enable(f);  if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);    if(f!=  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }	  	non-compiled	[CE]  ';'  expected	5	None	add
46	[BUG]  [BUGGY]  if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
47	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(_cfgUnqNames  ==  false)  {  super.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(_cfgUnqNames  ==  false)  {  super.enable(f);  }	  if(f    ==    null)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	4	1	replace
48	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  false)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(_cfgUnqNames  ==  false)  {  super.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_cfgUnqNames  ==  false)  {  super.enable(f);  }	  if(f    ==    null)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	4	1	replace
49	[BUG]  [BUGGY]      if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]      if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	        if(f  ==  null)  {  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
50	[BUG]  [BUGGY]  if(f  ==  null)  {  super.enable(f);  }  if(f  {  null)  {  super.enable(f);  }  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f  ==  null)  {  super.enable(f);  }  if(f  {  null)  {  super.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f    ==    null)    {    super.enable(f);    }    if(f  {  null)  {  super.enable(f);  }	  	non-compiled	[CE]  ')'  expected	3	None	add
51	[BUG]  [BUGGY]  if(f  ==  null)  {  super.enable(f);  }  If(f  ==  null)  {  super.enable(f);  }  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f  ==  null)  {  super.enable(f);  }  If(f  ==  null)  {  super.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f    ==    null)    {    super.enable(f);    }    If(f  ==  null)  {  super.enable(f);  }	  	non-compiled	[CE]  ';'  expected	3	None	add
52	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);  this._maximumNonEscapedChar  =  0;	  if(f!=    null)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	2	1	replace
53	[BUG]  [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  super.enable(f);  this._maximumNonEscapedChar  =  0;  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);  this._maximumNonEscapedChar  =  0;	  if(f!=    null)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	2	1	replace
54	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]      _features  |=  f.getMask();  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	        _features  |=  f.getMask();	  	compilable	  [FE]  ComparisonFailure  	7	1	add
55	[BUG]  [BUGGY]      _features  |=  f.getMask();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]      _features  |=  f.getMask();  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	        _features  |=  f.getMask();	  	compilable	  [FE]  ComparisonFailure  	7	1	add
56	[BUG]  [BUGGY]      _ioContext.setCurrentName(f.getName());  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]      _ioContext.setCurrentName(f.getName());  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	        _ioContext.setCurrentName(f.getName());	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
57	[BUG]  [BUGGY]  _reportUndetectableSource(f);  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  _reportUndetectableSource(f);  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	_reportUndetectableSource(f);	  enable(f);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
58	[BUG]  [BUGGY]  if(_ioContext.enable(f))  {  _ioContext.enable(f);  }  else  {  _ioContext  =  _ioContext.createChildObjectContext(f);  }  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(_ioContext.enable(f))  {  _ioContext.enable(f);  }  else  {  _ioContext  =  _ioContext.createChildObjectContext(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_ioContext.enable(f))  {  _ioContext.enable(f);  }  else  {  _ioContext  =  _ioContext.createChildObjectContext(f);  }	  _ioContext.enable(f);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
59	[BUG]  [BUGGY]  if(_ioContext.enable(f))  {  _ioContext.enable(f);  }  else  {  _ioContext  =  _ioContext.createRootContext(f);  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(_ioContext.enable(f))  {  _ioContext.enable(f);  }  else  {  _ioContext  =  _ioContext.createRootContext(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(_ioContext.enable(f))  {  _ioContext.enable(f);  }  else  {  _ioContext  =  _ioContext.createRootContext(f);  }	  _ioContext.enable(f);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
60	[BUG]  [BUGGY]  enable(f);  _cfgUnqNames  =  super.enable(f);  [CE]  incompatible  types  [FE]    StackOverflowError    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  enable(f);  _cfgUnqNames  =  super.enable(f);  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);    _cfgUnqNames  =  super.enable(f);	  	non-compiled	[CE]  incompatible  types	5	None	add
61	[BUG]  [BUGGY]  enable(f);  f  =  _ioContext.createChildObjectGenerator(f);  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  enable(f);  f  =  _ioContext.createChildObjectGenerator(f);  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);    f  =  _ioContext.createChildObjectGenerator(f);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
62	[BUG]  [BUGGY]  enable(f);  _reportUndetectableSource(f);  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  enable(f);  _reportUndetectableSource(f);  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);    _reportUndetectableSource(f);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
63	[BUG]  [BUGGY]  enable(f);  f  =  _ioContext.createChildObjectGenerator(this);  [CE]  cannot  find  symbol  [FE]          StackOverflowError    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  enable(f);  f  =  _ioContext.createChildObjectGenerator(this);  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	enable(f);    f  =  _ioContext.createChildObjectGenerator(this);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
64	[BUG]  [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl();  [CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated  [FE]          ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl();  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._cfgUnqNames  =  new  JsonGeneratorImpl();	  if(_cfgUnqNames    ==    null)    {    super.enable(f);    }    else    {    _cfgUnqNames    =    new    JsonGeneratorImpl();    }    	non-compiled	[CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated	11	None	replace
65	[BUG]  [BUGGY]  if(f  ==  null  ||  f.isFeature(Feature.QUOTE_FIELD_NAMES))  {  super.enable(f);  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f  ==  null  ||  f.isFeature(Feature.QUOTE_FIELD_NAMES))  {  super.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null  ||  f.isFeature(Feature.QUOTE_FIELD_NAMES))  {  super.enable(f);  }	  if(f    ==    null)    {    super.enable(f);    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
66	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }	  if(f    ==    null)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	4	1	replace
67	[BUG]  [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f  ==  null  ||  f.getMask()  ==  _maximumNonEscapedChar)  {  super.enable(f);  }	  if(f    ==    null)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	4	1	replace
68	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  this.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	3	1	add
69	[BUG]  [BUGGY]  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  if(f  ==  null)  {  super.enable(f);  }  if(f  ==  null)  {  this.enable(f);  }  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	if(f    ==    null)    {    super.enable(f);    }    if(f  ==  null)  {  this.enable(f);  }	  	compilable	  [FE]  ComparisonFailure  	3	1	add
70	[BUG]  [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  [CE]  type  JsonGeneratorImpl  does  not  take  parameters  [FE]        ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  this._cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	this._cfgUnqNames  =  new  JsonGeneratorImpl  <  Feature>();	  if(_cfgUnqNames    ==    null)    {    super.enable(f);    }    else    {    _cfgUnqNames    =    new    JsonGeneratorImpl    <    Feature>();    }    	non-compiled	[CE]  type  JsonGeneratorImpl  does  not  take  parameters	10	None	replace
71	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	add	super.enable(f);  this._cfgUnqNames  =  false;	  if(f!=    null)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	2	1	replace
72	[BUG]  [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {    [BUGGY]  super.enable(f);  this._cfgUnqNames  =  false;  [BUGGY]    if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	120	120	1	replace	super.enable(f);  this._cfgUnqNames  =  false;	  if(f!=    null)    {    super.enable(f);    }    	compilable	  [FE]  ComparisonFailure  	2	1	replace
