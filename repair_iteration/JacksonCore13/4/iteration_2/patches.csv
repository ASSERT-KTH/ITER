bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(!_cfgUnqNames.contains(f))  {  return  null;  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(!_cfgUnqNames.contains(f))  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  if(!_cfgUnqNames.contains(f))  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(!_cfgUnqNames.contains(f))    {    return    null;    }    	non-compiled	[CE]  ';'  expected	1	None	replace
2	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  if(!_cfgUnqNames.contains(f))  {  return  null;  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames!=  null)  {  if(!_cfgUnqNames.contains(f))  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames!=  null)  {  if(!_cfgUnqNames.contains(f))  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(!_cfgUnqNames.contains(f))    {    return    null;    }    	non-compiled	[CE]  ';'  expected	1	None	replace
3	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  return  null;  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(!_cfgUnqNames.contains(f))    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	1	None	replace
4	[BUG]  [BUGGY]  if(_rootValueSeparator  ==  null)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_rootValueSeparator  ==  null)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(!_cfgUnqNames.contains(f))    {    return    null;    }    	non-compiled	[CE]  ';'  expected	1	None	replace
5	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_rootValueSeparator!=  null)  {  return  new  JsonGeneratorImpl(_rootValueSeparator);  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_rootValueSeparator!=  null)  {  return  new  JsonGeneratorImpl(_rootValueSeparator);  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  if(_rootValueSeparator!=  null)  {  return  new  JsonGeneratorImpl(_rootValueSeparator);  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_rootValueSeparator!=    null)    {    return    new    JsonGeneratorImpl(_rootValueSeparator);    }    	non-compiled	[CE]  ';'  expected	43	None	replace
6	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  if(_rootValueSeparator!=  null)  {  return  new  JsonGeneratorImpl(_rootValueSeparator);  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames!=  null)  {  if(_rootValueSeparator!=  null)  {  return  new  JsonGeneratorImpl(_rootValueSeparator);  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames!=  null)  {  if(_rootValueSeparator!=  null)  {  return  new  JsonGeneratorImpl(_rootValueSeparator);  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_rootValueSeparator!=    null)    {    return    new    JsonGeneratorImpl(_rootValueSeparator);    }    	non-compiled	[CE]  ';'  expected	43	None	replace
7	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  if(_rootValueSeparator  ==  null)  {  return  new  JsonGeneratorImpl(_rootValueSeparator);  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames!=  null)  {  if(_rootValueSeparator  ==  null)  {  return  new  JsonGeneratorImpl(_rootValueSeparator);  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames!=  null)  {  if(_rootValueSeparator  ==  null)  {  return  new  JsonGeneratorImpl(_rootValueSeparator);  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_rootValueSeparator!=    null)    {    return    new    JsonGeneratorImpl(_rootValueSeparator);    }    	non-compiled	[CE]  ';'  expected	43	None	replace
8	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.getValues();  [CE]  incomparable  types:  boolean  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.getValues();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.getValues();	  return(_cfgUnqNames    ==    null)?    null    :    _cfgUnqNames.values();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	34	None	replace
9	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.get(f);  [CE]  incomparable  types:  boolean  and  Feature  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.get(f);  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.get(f);	  return(_cfgUnqNames    ==    f)?    null    :    _cfgUnqNames.keySet();    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	33	None	replace
10	[BUG]  [BUGGY]  return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.keySet();  [CE]  incomparable  types:  boolean  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.keySet();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.keySet();	  return(_cfgUnqNames!=    null)?    null    :    _cfgUnqNames.values();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	37	None	replace
11	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames.size();  [CE]  incomparable  types:  boolean  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames.size();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames.size();	  return(_cfgUnqNames    ==    null)?    this    :    _cfgUnqNames.length;    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	27	None	replace
12	[BUG]  [BUGGY]  return(_cfgUnqNames!=  null)?  this  :  _cfgUnqNames.length;  [CE]  incomparable  types:  boolean  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames!=  null)?  this  :  _cfgUnqNames.length;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames!=  null)?  this  :  _cfgUnqNames.length;	  return(_cfgUnqNames    ==    null)?    this    :    _cfgUnqNames.length;    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	27	None	replace
13	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames.next;  [CE]  incomparable  types:  boolean  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames.next;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames.next;	  return(_cfgUnqNames    ==    null)?    this    :    _cfgUnqNames.length;    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	27	None	replace
14	[BUG]  [BUGGY]  return(_cfgUnqNames!=  null)?  this  :  _cfgUnqNames.values();  [CE]  incomparable  types:  boolean  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames!=  null)?  this  :  _cfgUnqNames.values();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames!=  null)?  this  :  _cfgUnqNames.values();	  return(_cfgUnqNames    ==    null)?    this    :    _cfgUnqNames.values();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	26	None	replace
15	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames.keySet();  [CE]  incomparable  types:  boolean  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames.keySet();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames.keySet();	  return(_cfgUnqNames    ==    null)?    this    :    _cfgUnqNames.values();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	26	None	replace
16	[BUG]  [BUGGY]  _ioContext  =  ctxt.createChildObjectContext(f);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]                      ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  _ioContext  =  ctxt.createChildObjectContext(f);  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	_ioContext  =  ctxt.createChildObjectContext(f);	  _ioContext    =    _ioContext.createChildObjectContext(f);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	16	None	replace
17	[BUG]  [BUGGY]  _ioContext  =  f.getCurrentNodePointer();  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  _ioContext  =  f.getCurrentNodePointer();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	_ioContext  =  f.getCurrentNodePointer();	  _ioContext    =    _ioContext.getCurrentNodePointer();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	40	None	replace
18	[BUG]  [BUGGY]  _ioContext  =  ctxt.getCurrentNodePointer();  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]                      ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  _ioContext  =  ctxt.getCurrentNodePointer();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	_ioContext  =  ctxt.getCurrentNodePointer();	  _ioContext    =    _ioContext.getCurrentNodePointer();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	40	None	replace
19	[BUG]  [BUGGY]  return(f  ==  _cfgUnqNames)?  null  :  _cfgUnqNames.toString();  [CE]  incomparable  types:  Feature  and  boolean  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(f  ==  _cfgUnqNames)?  null  :  _cfgUnqNames.toString();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(f  ==  _cfgUnqNames)?  null  :  _cfgUnqNames.toString();	  return(_cfgUnqNames    ==    f)?    null    :    _cfgUnqNames.toString();    	non-compiled	[CE]  incomparable  types:  Feature  and  boolean	53	None	replace
20	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.getPath();  [CE]  incomparable  types:  boolean  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.getPath();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.getPath();	  return(_cfgUnqNames    ==    null)?    null    :    _cfgUnqNames.asPath();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	7	None	replace
21	[BUG]  [BUGGY]  return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.asPath();  [CE]  incomparable  types:  boolean  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.asPath();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.asPath();	  return(_cfgUnqNames    ==    null)?    null    :    _cfgUnqNames.asPath();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	7	None	replace
22	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.getLength();  [CE]  incomparable  types:  boolean  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.getLength();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.getLength();	  return(_cfgUnqNames    ==    null)?    null    :    _cfgUnqNames.length;    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	35	None	replace
23	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_maximumNonEscapedChar  ==  0)  {  return  null;  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_maximumNonEscapedChar  ==  0)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  if(_maximumNonEscapedChar  ==  0)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_maximumNonEscapedChar    ==    0)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
24	[BUG]  [BUGGY]  if(_characterEscapes  ==  null)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_characterEscapes  ==  null)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_characterEscapes  ==  null)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_maximumNonEscapedChar    ==    0)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
25	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  if(_maximumNonEscapedChar  ==  0)  {  return  null;  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames!=  null)  {  if(_maximumNonEscapedChar  ==  0)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames!=  null)  {  if(_maximumNonEscapedChar  ==  0)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_maximumNonEscapedChar    ==    0)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
26	[BUG]  [BUGGY]  return  JsonGenerator.create(this,  f);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return  JsonGenerator.create(this,  f);  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return  JsonGenerator.create(this,  f);	  if(_cfgUnqNames    ==    null)    {    return    JsonGenerator.create(this,    f);    }    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
27	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  return  JsonGenerator.create(this,  f,  _maximumNonEscapedChar);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames!=  null)  {  return  JsonGenerator.create(this,  f,  _maximumNonEscapedChar);  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames!=  null)  {  return  JsonGenerator.create(this,  f,  _maximumNonEscapedChar);  }	  if(_cfgUnqNames    ==    null)    {    return    JsonGenerator.create(this,    f);    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	51	None	replace
28	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  return  JsonGenerator.create(this,  f,  _maximumNonEscapedChar);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  return  JsonGenerator.create(this,  f,  _maximumNonEscapedChar);  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  return  JsonGenerator.create(this,  f,  _maximumNonEscapedChar);  }	  if(_cfgUnqNames    ==    null)    {    return    JsonGenerator.create(this,    f);    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	51	None	replace
29	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  return  JsonGenerator.create(this,  f,  _rootValueSeparator);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames!=  null)  {  return  JsonGenerator.create(this,  f,  _rootValueSeparator);  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames!=  null)  {  return  JsonGenerator.create(this,  f,  _rootValueSeparator);  }	  if(_cfgUnqNames    ==    null)    {    return    JsonGenerator.create(this,    f);    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	51	None	replace
30	[BUG]  [BUGGY]  return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.as();  [CE]  incomparable  types:  boolean  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.as();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.as();	  return(_cfgUnqNames    ==    null)?    null    :    _cfgUnqNames.as();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	22	None	replace
31	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.asList();  [CE]  incomparable  types:  boolean  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.asList();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.asList();	  return(_cfgUnqNames    ==    null)?    null    :    _cfgUnqNames.as();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	22	None	replace
32	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.get(f);  [CE]  incomparable  types:  boolean  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.get(f);  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.get(f);	  return(_cfgUnqNames    ==    null)?    null    :    _cfgUnqNames.keySet();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	36	None	replace
33	[BUG]  [BUGGY]  _ioContext  =  ctxt.createChildObjectContext(-1,  -1);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]                      ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  _ioContext  =  ctxt.createChildObjectContext(-1,  -1);  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	_ioContext  =  ctxt.createChildObjectContext(-1,  -1);	  _ioContext    =    _ioContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	41	None	replace
34	[BUG]  [BUGGY]  _ioContext  =  f.createChildObjectContext(-1,  -1);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]                        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  _ioContext  =  f.createChildObjectContext(-1,  -1);  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	_ioContext  =  f.createChildObjectContext(-1,  -1);	  _ioContext    =    _ioContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	41	None	replace
35	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(!_rootValueSeparator.isEmpty())  {  return  null;  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(!_rootValueSeparator.isEmpty())  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  if(!_rootValueSeparator.isEmpty())  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(!_rootValueSeparator.isEmpty())    {    return    null;    }    	non-compiled	[CE]  ';'  expected	5	None	replace
36	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  if(!_rootValueSeparator.isEmpty())  {  return  null;  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames!=  null)  {  if(!_rootValueSeparator.isEmpty())  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames!=  null)  {  if(!_rootValueSeparator.isEmpty())  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(!_rootValueSeparator.isEmpty())    {    return    null;    }    	non-compiled	[CE]  ';'  expected	5	None	replace
37	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  if(!_cfgUnqNames.isEmpty())  {  return  null;  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  if(!_cfgUnqNames.isEmpty())  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_rootValueSeparator!=  null)  {  if(!_cfgUnqNames.isEmpty())  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(!_rootValueSeparator.isEmpty())    {    return    null;    }    	non-compiled	[CE]  ';'  expected	5	None	replace
38	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.getPath();  [CE]  incomparable  types:  boolean  and  Feature  [FE]                      ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.getPath();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.getPath();	  return(_cfgUnqNames    ==    f)?    null    :    _cfgUnqNames.asPath();    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	21	None	replace
39	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.getKey();  [CE]  incomparable  types:  boolean  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.getKey();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.getKey();	  return(_cfgUnqNames    ==    null)?    null    :    _cfgUnqNames.getValue();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	8	None	replace
40	[BUG]  [BUGGY]  return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.getValue();  [CE]  incomparable  types:  boolean  and  <null>  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.getValue();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.getValue();	  return(_cfgUnqNames    ==    null)?    null    :    _cfgUnqNames.getValue();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	8	None	replace
41	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.getValueSeparator();  [CE]  incomparable  types:  boolean  and  <null>  [FE]                      ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.getValueSeparator();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.getValueSeparator();	  return(_cfgUnqNames    ==    null)?    null    :    _cfgUnqNames.getValue();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	8	None	replace
42	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_rootValueSeparator!=  null)  {  return  new  JsonGeneratorImpl();  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_rootValueSeparator!=  null)  {  return  new  JsonGeneratorImpl();  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  if(_rootValueSeparator!=  null)  {  return  new  JsonGeneratorImpl();  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_rootValueSeparator!=    null)    {    return    new    JsonGeneratorImpl();    }    	non-compiled	[CE]  ';'  expected	45	None	replace
43	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  if(_rootValueSeparator!=  null)  {  return  new  JsonGeneratorImpl();  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames!=  null)  {  if(_rootValueSeparator!=  null)  {  return  new  JsonGeneratorImpl();  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames!=  null)  {  if(_rootValueSeparator!=  null)  {  return  new  JsonGeneratorImpl();  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_rootValueSeparator!=    null)    {    return    new    JsonGeneratorImpl();    }    	non-compiled	[CE]  ';'  expected	45	None	replace
44	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  if(_rootValueSeparator  ==  null)  {  return  new  JsonGeneratorImpl();  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames!=  null)  {  if(_rootValueSeparator  ==  null)  {  return  new  JsonGeneratorImpl();  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames!=  null)  {  if(_rootValueSeparator  ==  null)  {  return  new  JsonGeneratorImpl();  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_rootValueSeparator!=    null)    {    return    new    JsonGeneratorImpl();    }    	non-compiled	[CE]  ';'  expected	45	None	replace
45	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  return  null;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames!=  null)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    return    null;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	44	None	replace
46	[BUG]  [BUGGY]  null  =  _cfgUnqNames;  [CE]  unexpected  type  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  null  =  _cfgUnqNames;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	null  =  _cfgUnqNames;	  return    null;    if(_cfgUnqNames    ==    null)    {    return    null;    }    	non-compiled	[CE]  unexpected  type	44	None	replace
47	[BUG]  [BUGGY]  return(_cfgUnqNames!=  null)?  this  :  _cfgUnqNames.toString();  [CE]  incomparable  types:  boolean  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames!=  null)?  this  :  _cfgUnqNames.toString();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames!=  null)?  this  :  _cfgUnqNames.toString();	  return(_cfgUnqNames    ==    null)?    this    :    _cfgUnqNames.toString();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	47	None	replace
48	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames.getMask();  [CE]  incomparable  types:  boolean  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames.getMask();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames.getMask();	  return(_cfgUnqNames    ==    null)?    this    :    _cfgUnqNames.toString();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	47	None	replace
49	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [CE]  unreachable  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	throw    new    IllegalArgumentException(   "   ");    throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  unreachable  statement	12	None	add
50	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JsonGeneratorImpl  throw  new  IllegalArgumentException( "   ");  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JsonGeneratorImpl  throw  new  IllegalArgumentException( "   ");  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	throw    new    IllegalArgumentException(   "   ");    JsonGeneratorImpl  throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  not  a  statement	12	None	add
51	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [CE]  not  a  statement  [FE]        IllegalArgumentException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	throw    new    IllegalArgumentException(   "   ");    Throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  not  a  statement	12	None	add
52	[BUG]  [BUGGY]  return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.size();  [CE]  incomparable  types:  boolean  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.size();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.size();	  return(_cfgUnqNames    ==    null)?    null    :    _cfgUnqNames.size();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	48	None	replace
53	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.size()  +  1;  [CE]  incomparable  types:  boolean  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.size()  +  1;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.size()  +  1;	  return(_cfgUnqNames    ==    null)?    null    :    _cfgUnqNames.size();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	48	None	replace
54	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_cfgUnqNames    ==    null)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	30	None	replace
55	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames!=  null)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames!=  null)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_cfgUnqNames    ==    null)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	30	None	replace
56	[BUG]  [BUGGY]  _ioContext  =  ctxt.createChildObjectContext(f,  _maximumNonEscapedChar);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  _ioContext  =  ctxt.createChildObjectContext(f,  _maximumNonEscapedChar);  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	_ioContext  =  ctxt.createChildObjectContext(f,  _maximumNonEscapedChar);	  _ioContext    =    _ioContext.createChildObjectContext(f,    _maximumNonEscapedChar);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	15	None	replace
57	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.getMask();  [CE]  incomparable  types:  boolean  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.getMask();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.getMask();	  return(_cfgUnqNames    ==    null)?    null    :    _cfgUnqNames.toString();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	49	None	replace
58	[BUG]  [BUGGY]  return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.toString();  [CE]  incomparable  types:  boolean  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.toString();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.toString();	  return(_cfgUnqNames    ==    null)?    null    :    _cfgUnqNames.toString();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	49	None	replace
59	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  _characterEscapes;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  _characterEscapes;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  _characterEscapes;	  return(_cfgUnqNames!=    null)?    this    :    _cfgUnqNames,    _maximumNonEscapedChar;    	non-compiled	[CE]  ';'  expected	50	None	replace
60	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  _maximumNonEscapedChar  +  1;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  _maximumNonEscapedChar  +  1;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  _maximumNonEscapedChar  +  1;	  return(_cfgUnqNames!=    null)?    this    :    _cfgUnqNames,    _maximumNonEscapedChar;    	non-compiled	[CE]  ';'  expected	50	None	replace
61	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.null;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.null;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.null;	  return(_cfgUnqNames    ==    null)?    this    :    _cfgUnqNames.null;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
62	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  _cfgUnqNames)?  null  :  _cfgUnqNames;  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  _cfgUnqNames)?  null  :  _cfgUnqNames;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  _cfgUnqNames)?  null  :  _cfgUnqNames;	  return(f    ==    _cfgUnqNames)?    null    :    _cfgUnqNames;    	non-compiled	[CE]  incompatible  types	19	None	replace
63	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]    IllegalArgumentException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	13	None	replace
64	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]      IllegalArgumentException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	13	None	replace
65	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(f.getMask()));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]        IllegalArgumentException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(f.getMask()));  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	throw  new  IllegalArgumentException( " ".equals(f.getMask()));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	13	None	replace
66	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  f  :  _cfgUnqNames;  [CE]  incomparable  types:  boolean  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  f  :  _cfgUnqNames;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  f  :  _cfgUnqNames;	  return(_cfgUnqNames!=    null)?    f    :    _cfgUnqNames;    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	39	None	replace
67	[BUG]  [BUGGY]  return(f  ==  null)?  _cfgUnqNames  :  _cfgUnqNames;  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(f  ==  null)?  _cfgUnqNames  :  _cfgUnqNames;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(f  ==  null)?  _cfgUnqNames  :  _cfgUnqNames;	  return(_cfgUnqNames!=    null)?    f    :    _cfgUnqNames;    	non-compiled	[CE]  incompatible  types	39	None	replace
68	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  f  :  _cfgUnqNames.as();  [CE]  incomparable  types:  boolean  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  f  :  _cfgUnqNames.as();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  f  :  _cfgUnqNames.as();	  return(_cfgUnqNames!=    null)?    f    :    _cfgUnqNames;    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	39	None	replace
69	[BUG]  [BUGGY]  _ioContext  =  ctxt.createChildObjectContext();  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]                        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  _ioContext  =  ctxt.createChildObjectContext();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	_ioContext  =  ctxt.createChildObjectContext();	  _ioContext    =    _ioContext.createChildObjectContext();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	17	None	replace
70	[BUG]  [BUGGY]  _ioContext  =  f.createChildObjectContext();  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]                          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  _ioContext  =  f.createChildObjectContext();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	_ioContext  =  f.createChildObjectContext();	  _ioContext    =    _ioContext.createChildObjectContext();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	17	None	replace
71	[BUG]  [BUGGY]  return(f  ==  _cfgUnqNames)?  null  :  _cfgUnqNames.values();  [CE]  incomparable  types:  Feature  and  boolean  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(f  ==  _cfgUnqNames)?  null  :  _cfgUnqNames.values();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(f  ==  _cfgUnqNames)?  null  :  _cfgUnqNames.values();	  return(_cfgUnqNames    ==    f)?    null    :    _cfgUnqNames.values();    	non-compiled	[CE]  incomparable  types:  Feature  and  boolean	32	None	replace
72	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  _maximumNonEscapedChar,  _characterEscapes;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  _maximumNonEscapedChar,  _characterEscapes;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  _maximumNonEscapedChar,  _characterEscapes;	  return(_cfgUnqNames    ==    null)?    this    :    _cfgUnqNames,    _maximumNonEscapedChar;    	non-compiled	[CE]  ';'  expected	9	None	replace
73	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  0,  _maximumNonEscapedChar;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  0,  _maximumNonEscapedChar;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  0,  _maximumNonEscapedChar;	  return(_cfgUnqNames    ==    null)?    this    :    _cfgUnqNames,    _maximumNonEscapedChar;    	non-compiled	[CE]  ';'  expected	9	None	replace
74	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }	  return    null;    if(f    ==    Feature.QUOTE_FIELD_NAMES)    {    if(_cfgUnqNames    ==    null)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
75	[BUG]  [BUGGY]  if(f  ==  null)  {  return  null;  }  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(f  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(f  ==  null)  {  return  null;  }	  return    null;    if(f    ==    Feature.QUOTE_FIELD_NAMES)    {    if(_cfgUnqNames    ==    null)    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	42	None	replace
76	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames,  _characterEscapes;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames,  _characterEscapes;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames,  _characterEscapes;	  return(_cfgUnqNames    ==    f)?    null    :    _cfgUnqNames,    _maximumNonEscapedChar;    	non-compiled	[CE]  ';'  expected	52	None	replace
77	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames,  0,  _maximumNonEscapedChar;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames,  0,  _maximumNonEscapedChar;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames,  0,  _maximumNonEscapedChar;	  return(_cfgUnqNames    ==    f)?    null    :    _cfgUnqNames,    _maximumNonEscapedChar;    	non-compiled	[CE]  ';'  expected	52	None	replace
78	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames,  _maximumNonEscapedChar,  _characterEscapes;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames,  _maximumNonEscapedChar,  _characterEscapes;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames,  _maximumNonEscapedChar,  _characterEscapes;	  return(_cfgUnqNames    ==    f)?    null    :    _cfgUnqNames,    _maximumNonEscapedChar;    	non-compiled	[CE]  ';'  expected	52	None	replace
79	[BUG]  [BUGGY]  if(_maximumNonEscapedChar  ==  0)  {  return  null;  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_maximumNonEscapedChar  ==  0)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_maximumNonEscapedChar  ==  0)  {  return  null;  }	  if(_maximumNonEscapedChar    ==    0)    {    return    this;    }    	non-compiled	[CE]  missing  return  statement	14	None	replace
80	[BUG]  [BUGGY]  if(_maximumNonEscapedChar!=  0)  {  return  null;  }  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_maximumNonEscapedChar!=  0)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_maximumNonEscapedChar!=  0)  {  return  null;  }	  if(_maximumNonEscapedChar    ==    0)    {    return    this;    }    	non-compiled	[CE]  missing  return  statement	14	None	replace
81	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  return  this;  }  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  return  this;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  return  this;  }	  if(_maximumNonEscapedChar    ==    0)    {    return    this;    }    	non-compiled	[CE]  missing  return  statement	14	None	replace
82	[BUG]  [BUGGY]  _ioContext  =  f.getCurrentNode();  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]                          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  _ioContext  =  f.getCurrentNode();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	_ioContext  =  f.getCurrentNode();	  _ioContext    =    _ioContext.getCurrentNode();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	18	None	replace
83	[BUG]  [BUGGY]  _ioContext  =  ctxt.getCurrentNode();  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]                            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  _ioContext  =  ctxt.getCurrentNode();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	_ioContext  =  ctxt.getCurrentNode();	  _ioContext    =    _ioContext.getCurrentNode();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	18	None	replace
84	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(!_cfgUnqNames)  {  return  null;  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(!_cfgUnqNames)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  if(!_cfgUnqNames)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(!_cfgUnqNames)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	28	None	replace
85	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  if(!_cfgUnqNames)  {  return  null;  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames!=  null)  {  if(!_cfgUnqNames)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames!=  null)  {  if(!_cfgUnqNames)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(!_cfgUnqNames)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	28	None	replace
86	[BUG]  [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  return  null;  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(f!=  Feature.QUOTE_FIELD_NAMES)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(!_cfgUnqNames)    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	28	None	replace
87	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_rootValueSeparator!=  null)  {  return  null;  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_rootValueSeparator!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  if(_rootValueSeparator!=  null)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_rootValueSeparator!=    null)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	3	None	replace
88	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  if(_rootValueSeparator!=  null)  {  return  null;  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames!=  null)  {  if(_rootValueSeparator!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames!=  null)  {  if(_rootValueSeparator!=  null)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_rootValueSeparator!=    null)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	3	None	replace
89	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  if(_rootValueSeparator  ==  null)  {  return  null;  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames!=  null)  {  if(_rootValueSeparator  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames!=  null)  {  if(_rootValueSeparator  ==  null)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_rootValueSeparator!=    null)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	3	None	replace
90	[BUG]  [BUGGY]  return(f  ==  _cfgUnqNames)?  null  :  _cfgUnqNames.getMask();  [CE]  incomparable  types:  Feature  and  boolean  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(f  ==  _cfgUnqNames)?  null  :  _cfgUnqNames.getMask();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(f  ==  _cfgUnqNames)?  null  :  _cfgUnqNames.getMask();	  return(_cfgUnqNames    ==    f)?    null    :    _cfgUnqNames.getMask();    	non-compiled	[CE]  incomparable  types:  Feature  and  boolean	20	None	replace
91	[BUG]  [BUGGY]  return(_cfgUnqNames!=  f)?  null  :  _cfgUnqNames.getMask();  [CE]  incomparable  types:  boolean  and  Feature  [FE]                      ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames!=  f)?  null  :  _cfgUnqNames.getMask();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames!=  f)?  null  :  _cfgUnqNames.getMask();	  return(_cfgUnqNames    ==    f)?    null    :    _cfgUnqNames.getMask();    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	20	None	replace
92	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_maximumNonEscapedChar!=  0)  {  return  null;  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_maximumNonEscapedChar!=  0)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  if(_maximumNonEscapedChar!=  0)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_maximumNonEscapedChar!=    0)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	2	None	replace
93	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  if(_maximumNonEscapedChar!=  0)  {  return  null;  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames!=  null)  {  if(_maximumNonEscapedChar!=  0)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames!=  null)  {  if(_maximumNonEscapedChar!=  0)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_maximumNonEscapedChar!=    0)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	2	None	replace
94	[BUG]  [BUGGY]  if(_characterEscapes!=  null)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_characterEscapes!=  null)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_characterEscapes!=  null)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_maximumNonEscapedChar!=    0)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	2	None	replace
95	[BUG]  [BUGGY]  _ioContext.setCurrentName(f,  _cfgUnqNames.getName());  [CE]  boolean  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  _ioContext.setCurrentName(f,  _cfgUnqNames.getName());  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	_ioContext.setCurrentName(f,  _cfgUnqNames.getName());	  _ioContext.setCurrentName(f.getName());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	46	None	replace
96	[BUG]  [BUGGY]  _ioContext.setCurrentName(f,  _outputEscapes.getName());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  _ioContext.setCurrentName(f,  _outputEscapes.getName());  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	_ioContext.setCurrentName(f,  _outputEscapes.getName());	  _ioContext.setCurrentName(f.getName());    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
97	[BUG]  [BUGGY]  _ioContext.setCurrentName(f,  _characterEscapes.getName());  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  _ioContext.setCurrentName(f,  _characterEscapes.getName());  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	_ioContext.setCurrentName(f,  _characterEscapes.getName());	  _ioContext.setCurrentName(f.getName());    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
98	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  return  JsonNull.createJsonNull();  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  return  JsonNull.createJsonNull();  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  return  JsonNull.createJsonNull();  }	  if(_cfgUnqNames    ==    null)    {    return    null;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	11	None	replace
99	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  return  JsonGenerator.EMPTY;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  return  JsonGenerator.EMPTY;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  return  JsonGenerator.EMPTY;  }	  if(_cfgUnqNames    ==    null)    {    return    null;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	11	None	replace
100	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_rootValueSeparator!=  null)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }	  return    null;    if(_cfgUnqNames!=    null)    {    if(!_cfgUnqNames)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	31	None	replace
101	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  return  new  JsonGeneratorImpl();  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames!=  null)  {  return  new  JsonGeneratorImpl();  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames!=  null)  {  return  new  JsonGeneratorImpl();  }	  if(_cfgUnqNames    ==    null)    {    return    new    JsonGeneratorImpl();    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	24	None	replace
102	[BUG]  [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl();  [CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  _cfgUnqNames  =  new  JsonGeneratorImpl();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	_cfgUnqNames  =  new  JsonGeneratorImpl();	  if(_cfgUnqNames    ==    null)    {    return    new    JsonGeneratorImpl();    }    	non-compiled	[CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated	24	None	replace
103	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  return  new  JsonGeneratorImpl(0);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  return  new  JsonGeneratorImpl(0);  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  return  new  JsonGeneratorImpl(0);  }	  if(_cfgUnqNames    ==    null)    {    return    new    JsonGeneratorImpl();    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	24	None	replace
104	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||  _rootValueSeparator!=  null)  {  return  this;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null  ||  _rootValueSeparator!=  null)  {  return  this;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null  ||  _rootValueSeparator!=  null)  {  return  this;  }	  if(_cfgUnqNames    ==    null)    {    return    this;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	23	None	replace
105	[BUG]  [BUGGY]  JsonContext  _ioContext  =  _ioContext.createChildObjectContext(-1,  -1);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  JsonContext  _ioContext  =  _ioContext.createChildObjectContext(-1,  -1);  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	JsonContext  _ioContext  =  _ioContext.createChildObjectContext(-1,  -1);	  _ioContext    =    _ioContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
106	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  missing  return  statement	13	None	replace
107	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]      IllegalArgumentException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	13	None	replace
108	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.enable(f);  [CE]  incomparable  types:  boolean  and  Feature  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.enable(f);  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.enable(f);	  return(_cfgUnqNames    ==    f)?    null    :    _cfgUnqNames.keySet();    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	33	None	replace
109	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_minimumNonEscapedChar  ==  0)  {  return  null;  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_minimumNonEscapedChar  ==  0)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  if(_minimumNonEscapedChar  ==  0)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_maximumNonEscapedChar    ==    0)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
110	[BUG]  [BUGGY]  return(f!=  null)?  _cfgUnqNames  :  _cfgUnqNames;  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(f!=  null)?  _cfgUnqNames  :  _cfgUnqNames;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(f!=  null)?  _cfgUnqNames  :  _cfgUnqNames;	  return(_cfgUnqNames!=    null)?    f    :    _cfgUnqNames;    	non-compiled	[CE]  incompatible  types	39	None	replace
111	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }	  return    null;    if(f    ==    Feature.QUOTE_FIELD_NAMES)    {    if(_cfgUnqNames    ==    null)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
112	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.enable(f);  [CE]  incomparable  types:  boolean  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.enable(f);  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.enable(f);	  return(_cfgUnqNames    ==    null)?    null    :    _cfgUnqNames.getValue();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	8	None	replace
113	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames,  _maximumNonEscapedChar  +  1;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames,  _maximumNonEscapedChar  +  1;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames,  _maximumNonEscapedChar  +  1;	  return(_cfgUnqNames    ==    f)?    null    :    _cfgUnqNames,    _maximumNonEscapedChar;    	non-compiled	[CE]  ';'  expected	52	None	replace
114	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames,  0;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames,  0;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames,  0;	  return(_cfgUnqNames    ==    f)?    null    :    _cfgUnqNames,    _maximumNonEscapedChar;    	non-compiled	[CE]  ';'  expected	52	None	replace
115	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  if(!_rootValueSeparator)  {  return  null;  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  if(!_rootValueSeparator)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_rootValueSeparator!=  null)  {  if(!_rootValueSeparator)  {  return  null;  }	  return    null;    if(_cfgUnqNames!=    null)    {    if(!_cfgUnqNames)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	31	None	replace
116	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  return  JsonGenerator.create(this,  _rootValueSeparator,  f);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames!=  null)  {  return  JsonGenerator.create(this,  _rootValueSeparator,  f);  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames!=  null)  {  return  JsonGenerator.create(this,  _rootValueSeparator,  f);  }	  if(_cfgUnqNames    ==    null)    {    return    JsonGenerator.create(this,    f);    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	51	None	replace
117	[BUG]  [BUGGY]  if(_rootValueSeparator  ==  null)  {  if(!_rootValueSeparator)  {  return  null;  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  if(!_rootValueSeparator)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_rootValueSeparator  ==  null)  {  if(!_rootValueSeparator)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(!_cfgUnqNames)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	28	None	replace
118	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  return(_cfgUnqNames!=  null)?  this  :  _cfgUnqNames,  _maximumNonEscapedChar;  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  return(_cfgUnqNames!=  null)?  this  :  _cfgUnqNames,  _maximumNonEscapedChar;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  return(_cfgUnqNames!=  null)?  this  :  _cfgUnqNames,  _maximumNonEscapedChar;  }	  return(_cfgUnqNames!=    null)?    this    :    _cfgUnqNames,    _maximumNonEscapedChar;    	non-compiled	[CE]  ';'  expected	50	None	replace
119	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  if(!_rootValueSeparator.isEmpty())  {  return  null;  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  if(!_rootValueSeparator.isEmpty())  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_rootValueSeparator!=  null)  {  if(!_rootValueSeparator.isEmpty())  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(!_rootValueSeparator.isEmpty())    {    return    null;    }    	non-compiled	[CE]  ';'  expected	5	None	replace
120	[BUG]  [BUGGY]  if(_rootValueSeparator  ==  null)  {  if(!_rootValueSeparator.isEmpty())  {  return  null;  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  if(!_rootValueSeparator.isEmpty())  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_rootValueSeparator  ==  null)  {  if(!_rootValueSeparator.isEmpty())  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(!_rootValueSeparator.isEmpty())    {    return    null;    }    	non-compiled	[CE]  ';'  expected	5	None	replace
121	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_maximumNonEscapedChar!=  0)  {  return  this;  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_maximumNonEscapedChar!=  0)  {  return  this;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  if(_maximumNonEscapedChar!=  0)  {  return  this;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_maximumNonEscapedChar!=    0)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	2	None	replace
122	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildArrayContext();  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]                        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  _ioContext  =  _ioContext.createChildArrayContext();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	_ioContext  =  _ioContext.createChildArrayContext();	  _ioContext    =    _ioContext.createChildObjectContext();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	17	None	replace
123	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  return  new  JsonGeneratorImpl();  }  [CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  return  new  JsonGeneratorImpl();  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  return  new  JsonGeneratorImpl();  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_rootValueSeparator!=    null)    {    return    new    JsonGeneratorImpl();    }    	non-compiled	[CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated	45	None	replace
124	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||  _rootValueSeparator!=  null)  {  return  null;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null  ||  _rootValueSeparator!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null  ||  _rootValueSeparator!=  null)  {  return  null;  }	  if(_cfgUnqNames    ==    null)    {    return    null;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	11	None	replace
125	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||  _maximumNonEscapedChar  ==  0)  {  return  null;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null  ||  _maximumNonEscapedChar  ==  0)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null  ||  _maximumNonEscapedChar  ==  0)  {  return  null;  }	  if(_cfgUnqNames    ==    null)    {    return    null;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	11	None	replace
126	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator  ==  null)  {  return  null;  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator  ==  null)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_cfgUnqNames    ==    null)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	30	None	replace
127	[BUG]  [BUGGY]  if(_rootValueSeparator  ==  null)  {  if(_rootValueSeparator  ==  null)  {  return  null;  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  if(_rootValueSeparator  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_rootValueSeparator  ==  null)  {  if(_rootValueSeparator  ==  null)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_cfgUnqNames    ==    null)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	30	None	replace
128	[BUG]  [BUGGY]  if(_rootValueSeparator  ==  null)  {  if(_rootValueSeparator!=  null)  {  return  null;  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  if(_rootValueSeparator!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_rootValueSeparator  ==  null)  {  if(_rootValueSeparator!=  null)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_rootValueSeparator!=    null)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	3	None	replace
129	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  return  null;  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_rootValueSeparator!=    null)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	3	None	replace
130	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  f  :  _cfgUnqNames.toString();  [CE]  incomparable  types:  boolean  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  f  :  _cfgUnqNames.toString();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  f  :  _cfgUnqNames.toString();	  return(_cfgUnqNames    ==    null)?    this    :    _cfgUnqNames.toString();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	47	None	replace
131	[BUG]  [BUGGY]  if(_maximumNonEscapedChar!=  0)  {  return  this;  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_maximumNonEscapedChar!=  0)  {  return  this;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_maximumNonEscapedChar!=  0)  {  return  this;  }	  if(_maximumNonEscapedChar    ==    0)    {    return    this;    }    	non-compiled	[CE]  missing  return  statement	14	None	replace
132	[BUG]  [BUGGY]  Return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.values();  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  Return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.values();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	Return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.values();	  return(_cfgUnqNames!=    null)?    null    :    _cfgUnqNames.values();    	non-compiled	[CE]  not  a  statement	37	None	replace
133	[BUG]  [BUGGY]  _ioContext.setCurrentName(f,  _config.getName());  [CE]  cannot  find  symbol  _config  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  _ioContext.setCurrentName(f,  _config.getName());  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	_ioContext.setCurrentName(f,  _config.getName());	  _ioContext.setCurrentName(f.getName());    	non-compiled	[CE]  cannot  find  symbol  _config	46	None	replace
134	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  false  :  _cfgUnqNames.values();  [CE]  incomparable  types:  boolean  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  false  :  _cfgUnqNames.values();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  false  :  _cfgUnqNames.values();	  return(_cfgUnqNames    ==    null)?    this    :    _cfgUnqNames.values();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	26	None	replace
135	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  if(_cfgUnqNames  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]    IllegalArgumentException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  if(_cfgUnqNames  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	throw    new    IllegalArgumentException(   "   ");    if(_cfgUnqNames  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	12	None	add
136	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.name();  [CE]  incomparable  types:  boolean  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.name();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.name();	  return(_cfgUnqNames    ==    null)?    null    :    _cfgUnqNames.length;    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	35	None	replace
137	[BUG]  [BUGGY]  if(_rootValueSeparator  ==  null)  {  if(!_rootValueSeparator.contains(f))  {  return  null;  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  if(!_rootValueSeparator.contains(f))  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_rootValueSeparator  ==  null)  {  if(!_rootValueSeparator.contains(f))  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(!_cfgUnqNames.contains(f))    {    return    null;    }    	non-compiled	[CE]  ';'  expected	1	None	replace
138	[BUG]  [BUGGY]  if(_maximumNonEscapedChar  ==  0)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_maximumNonEscapedChar  ==  0)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_maximumNonEscapedChar  ==  0)  {  if(_cfgUnqNames  ==  null)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(!_cfgUnqNames.contains(f))    {    return    null;    }    	non-compiled	[CE]  ';'  expected	1	None	replace
139	[BUG]  [BUGGY]  if(!_cfgUnqNames)  {  if(_rootValueSeparator!=  null)  {  return  new  JsonGeneratorImpl(_rootValueSeparator);  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(!_cfgUnqNames)  {  if(_rootValueSeparator!=  null)  {  return  new  JsonGeneratorImpl(_rootValueSeparator);  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(!_cfgUnqNames)  {  if(_rootValueSeparator!=  null)  {  return  new  JsonGeneratorImpl(_rootValueSeparator);  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_rootValueSeparator!=    null)    {    return    new    JsonGeneratorImpl(_rootValueSeparator);    }    	non-compiled	[CE]  ';'  expected	43	None	replace
140	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.getMask()  +  1;  [CE]  incomparable  types:  boolean  and  Feature  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.getMask()  +  1;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.getMask()  +  1;	  return(_cfgUnqNames    ==    f)?    null    :    _cfgUnqNames.getMask();    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	20	None	replace
141	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)return  this;  }  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)return  this;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)return  this;  }	  if(_cfgUnqNames!=    null)    {    return    this;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
142	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null  ||  _rootValueSeparator  ==  _rootValueSeparator)  {  return  this;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames!=  null  ||  _rootValueSeparator  ==  _rootValueSeparator)  {  return  this;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames!=  null  ||  _rootValueSeparator  ==  _rootValueSeparator)  {  return  this;  }	  if(_cfgUnqNames!=    null)    {    return    this;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	25	None	replace
143	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_cfgUnqNames  ==  null)return  null;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(_cfgUnqNames  ==  null)return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  if(_cfgUnqNames  ==  null)return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_cfgUnqNames    ==    null)    {    return    null;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	30	None	replace
144	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames,  0,  0;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames,  0,  0;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames,  0,  0;	  return(_cfgUnqNames    ==    f)?    null    :    _cfgUnqNames,    _maximumNonEscapedChar;    	non-compiled	[CE]  ';'  expected	52	None	replace
145	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  new  IllegalArgumentException(   "   ");  [CE]  unreachable  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  new  IllegalArgumentException(   "   ");  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	throw    new    IllegalArgumentException(   "   ");    new  IllegalArgumentException(   "   ");	  	non-compiled	[CE]  unreachable  statement	12	None	add
146	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  0;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  0;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  0;	  return(_cfgUnqNames    ==    null)?    this    :    _cfgUnqNames,    _maximumNonEscapedChar;    	non-compiled	[CE]  ';'  expected	9	None	replace
147	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  _maximumNonEscapedChar.values();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  _maximumNonEscapedChar.values();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  _maximumNonEscapedChar.values();	  return(_cfgUnqNames    ==    null)?    this    :    _cfgUnqNames.values();    	non-compiled	[CE]  ';'  expected	26	None	replace
148	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||  _maximumNonEscapedChar!=  _cfgUnqNames)  {  return  null;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null  ||  _maximumNonEscapedChar!=  _cfgUnqNames)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null  ||  _maximumNonEscapedChar!=  _cfgUnqNames)  {  return  null;  }	  if(_cfgUnqNames    ==    null)    {    return    null;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	11	None	replace
149	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||  _maximumNonEscapedChar  <  _maximumNonEscapedChar)  {  return  null;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null  ||  _maximumNonEscapedChar  <  _maximumNonEscapedChar)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null  ||  _maximumNonEscapedChar  <  _maximumNonEscapedChar)  {  return  null;  }	  if(_cfgUnqNames    ==    null)    {    return    null;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	11	None	replace
150	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||  _maximumNonEscapedChar  ==  _maximumNonEscapedChar)  {  return  null;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null  ||  _maximumNonEscapedChar  ==  _maximumNonEscapedChar)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null  ||  _maximumNonEscapedChar  ==  _maximumNonEscapedChar)  {  return  null;  }	  if(_cfgUnqNames    ==    null)    {    return    null;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	11	None	replace
151	[BUG]  [BUGGY]  _ioContext  =  config.getCurrentNodePointer();  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  _ioContext  =  config.getCurrentNodePointer();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	_ioContext  =  config.getCurrentNodePointer();	  _ioContext    =    _ioContext.getCurrentNodePointer();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	40	None	replace
152	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  f.length;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  f.length;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  f.length;	  return(_cfgUnqNames    ==    null)?    this    :    _cfgUnqNames.length;    	non-compiled	[CE]  ';'  expected	27	None	replace
153	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames.getLength();  [CE]  incomparable  types:  boolean  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames.getLength();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames.getLength();	  return(_cfgUnqNames    ==    null)?    this    :    _cfgUnqNames.length;    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	27	None	replace
154	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||  _rootValueSeparator!=  _rootValueSeparator)  {  return  this;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null  ||  _rootValueSeparator!=  _rootValueSeparator)  {  return  this;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null  ||  _rootValueSeparator!=  _rootValueSeparator)  {  return  this;  }	  if(_cfgUnqNames    ==    null)    {    return    this;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	23	None	replace
155	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||  _maximumNonEscapedChar!=  _cfgUnqNames)  {  return  this;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null  ||  _maximumNonEscapedChar!=  _cfgUnqNames)  {  return  this;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null  ||  _maximumNonEscapedChar!=  _cfgUnqNames)  {  return  this;  }	  if(_cfgUnqNames    ==    null)    {    return    this;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	23	None	replace
156	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(!_cfgUnqNames.contains(f))  {  return  this;  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(!_cfgUnqNames.contains(f))  {  return  this;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  if(!_cfgUnqNames.contains(f))  {  return  this;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(!_cfgUnqNames.contains(f))    {    return    null;    }    	non-compiled	[CE]  ';'  expected	1	None	replace
157	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  return  new  JsonGeneratorImpl(f);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  return  new  JsonGeneratorImpl(f);  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  return  new  JsonGeneratorImpl(f);  }	  if(_cfgUnqNames    ==    null)    {    return    new    JsonGeneratorImpl();    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	24	None	replace
158	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  return  new  JsonGeneratorImpl(f.getMask());  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  return  new  JsonGeneratorImpl(f.getMask());  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  return  new  JsonGeneratorImpl(f.getMask());  }	  if(_cfgUnqNames    ==    null)    {    return    new    JsonGeneratorImpl();    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	24	None	replace
159	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(!_cfgUnqNames)return  null;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(!_cfgUnqNames)return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  if(!_cfgUnqNames)return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(!_cfgUnqNames)    {    return    null;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	28	None	replace
160	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(!_cfgUnqNames)return  this;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)  {  if(!_cfgUnqNames)return  this;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)  {  if(!_cfgUnqNames)return  this;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(!_cfgUnqNames)    {    return    null;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	28	None	replace
161	[BUG]  [BUGGY]  _ioContext.setCurrentName(f,  f.getName());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  _ioContext.setCurrentName(f,  f.getName());  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	_ioContext.setCurrentName(f,  f.getName());	  _ioContext.setCurrentName(f.getName());    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
162	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  this);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  this);  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	_ioContext  =  _ioContext.createChildObjectContext(f,  this);	  _ioContext    =    _ioContext.createChildObjectContext(f,    _maximumNonEscapedChar);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	15	None	replace
163	[BUG]  [BUGGY]  _ioContext  =  config.getCurrentNode();  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]                          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  _ioContext  =  config.getCurrentNode();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	_ioContext  =  config.getCurrentNode();	  _ioContext    =    _ioContext.getCurrentNode();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	18	None	replace
164	[BUG]  [BUGGY]  return(f  ==  _cfgUnqNames)?  null  :  f._cfgUnqNames;  [CE]  incomparable  types:  Feature  and  boolean  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(f  ==  _cfgUnqNames)?  null  :  f._cfgUnqNames;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(f  ==  _cfgUnqNames)?  null  :  f._cfgUnqNames;	  return(f    ==    _cfgUnqNames)?    null    :    _cfgUnqNames;    	non-compiled	[CE]  incomparable  types:  Feature  and  boolean	19	None	replace
165	[BUG]  [BUGGY]  Return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames;  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  Return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	Return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames;	  return(f    ==    _cfgUnqNames)?    null    :    _cfgUnqNames;    	non-compiled	[CE]  not  a  statement	19	None	replace
166	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(_cfgUnqNames  ==  null)return  null;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(_cfgUnqNames  ==  null)return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(_cfgUnqNames  ==  null)return  null;  }	  return    null;    if(f    ==    Feature.QUOTE_FIELD_NAMES)    {    if(_cfgUnqNames    ==    null)    {    return    null;    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	42	None	replace
167	[BUG]  [BUGGY]  if(_characterEscapes  ==  0)  {  return  this;  }  [CE]  incomparable  types:  CharacterEscapes  and  int  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_characterEscapes  ==  0)  {  return  this;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_characterEscapes  ==  0)  {  return  this;  }	  if(_maximumNonEscapedChar    ==    0)    {    return    this;    }    	non-compiled	[CE]  incomparable  types:  CharacterEscapes  and  int	14	None	replace
168	[BUG]  [BUGGY]  if(!_cfgUnqNames)  {  if(_rootValueSeparator!=  null)  {  return  new  JsonGeneratorImpl();  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(!_cfgUnqNames)  {  if(_rootValueSeparator!=  null)  {  return  new  JsonGeneratorImpl();  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(!_cfgUnqNames)  {  if(_rootValueSeparator!=  null)  {  return  new  JsonGeneratorImpl();  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_rootValueSeparator!=    null)    {    return    new    JsonGeneratorImpl();    }    	non-compiled	[CE]  ';'  expected	45	None	replace
169	[BUG]  [BUGGY]  return  new  JsonGeneratorImpl(f.getMask(),  f.getMask());  [CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated  [FE]    IllegalArgumentException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return  new  JsonGeneratorImpl(f.getMask(),  f.getMask());  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return  new  JsonGeneratorImpl(f.getMask(),  f.getMask());	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated	13	None	replace
170	[BUG]  [BUGGY]  return  new  JsonGeneratorImpl(f.getMask());  [CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated  [FE]      IllegalArgumentException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return  new  JsonGeneratorImpl(f.getMask());  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return  new  JsonGeneratorImpl(f.getMask());	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  JsonGeneratorImpl  is  abstract;  cannot  be  instantiated	13	None	replace
171	[BUG]  [BUGGY]  return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.getLength();  [CE]  incomparable  types:  boolean  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.getLength();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames!=  null)?  null  :  _cfgUnqNames.getLength();	  return(_cfgUnqNames!=    null)?    null    :    _cfgUnqNames.length;    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	38	None	replace
172	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.getKey();  [CE]  incomparable  types:  boolean  and  Feature  [FE]                      ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.getKey();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.getKey();	  return(_cfgUnqNames    ==    f)?    null    :    _cfgUnqNames.asPath();    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	21	None	replace
173	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  f.toString();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  f.toString();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  f.toString();	  return(_cfgUnqNames    ==    null)?    this    :    _cfgUnqNames.toString();    	non-compiled	[CE]  ';'  expected	47	None	replace
174	[BUG]  [BUGGY]  if(_characterEscapes  ==  null)  {  if(_maximumNonEscapedChar!=  0)  {  return  null;  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_characterEscapes  ==  null)  {  if(_maximumNonEscapedChar!=  0)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_characterEscapes  ==  null)  {  if(_maximumNonEscapedChar!=  0)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_maximumNonEscapedChar!=    0)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	2	None	replace
175	[BUG]  [BUGGY]  if(_characterEscapes  ==  null)  {  if(_maximumNonEscapedChar  ==  0)  {  return  null;  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_characterEscapes  ==  null)  {  if(_maximumNonEscapedChar  ==  0)  {  return  null;  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_characterEscapes  ==  null)  {  if(_maximumNonEscapedChar  ==  0)  {  return  null;  }	  return    null;    if(_cfgUnqNames    ==    null)    {    if(_maximumNonEscapedChar    ==    0)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
176	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.asString();  [CE]  incomparable  types:  boolean  and  Feature  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.asString();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.asString();	  return(_cfgUnqNames    ==    f)?    null    :    _cfgUnqNames.toString();    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	53	None	replace
177	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  return  JsonGenerator.create(this,  f);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames!=  null)  {  return  JsonGenerator.create(this,  f);  }  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames!=  null)  {  return  JsonGenerator.create(this,  f);  }	  if(_cfgUnqNames    ==    null)    {    return    JsonGenerator.create(this,    f);    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	51	None	replace
178	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.toArray(new  Feature[_cfgUnqNames.size()  ]);  [CE]  incomparable  types:  boolean  and  Feature  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.toArray(new  Feature[_cfgUnqNames.size()  ]);  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  f)?  null  :  _cfgUnqNames.toArray(new  Feature[_cfgUnqNames.size()  ]);	  return(_cfgUnqNames    ==    f)?    null    :    _cfgUnqNames.values();    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	32	None	replace
179	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  _maximumNonEscapedChar;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  if(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  _maximumNonEscapedChar;  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	if(_cfgUnqNames  ==  null)?  this  :  _cfgUnqNames,  _maximumNonEscapedChar;	  return(_cfgUnqNames!=    null)?    this    :    _cfgUnqNames,    _maximumNonEscapedChar;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
180	[BUG]  [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.elements();  [CE]  incomparable  types:  boolean  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  _cfgUnqNames  =  false;  }      [BUGGY]  return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.elements();  [BUGGY]      }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	124	124	1	replace	return(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames.elements();	  return(_cfgUnqNames    ==    null)?    null    :    _cfgUnqNames.keySet();    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	36	None	replace
