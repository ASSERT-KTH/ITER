bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!_cfgUnqNames)  {  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(!_cfgUnqNames)  {  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(!_cfgUnqNames)  {  if(f!=  Feature.QUOTE_FIELD_NAMES)  {	  if(f!=    Feature.QUOTE_FIELD_NAMES)    {    if(f    >>    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
2	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar!=  Feature.QUOTE_FIELD_NAMES)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar!=  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar!=  Feature.QUOTE_FIELD_NAMES)  {	  if(_cfgUnqNames!=    Feature.QUOTE_FIELD_NAMES    ||    _maximumNonEscapedChar    ==    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	6	None	replace
3	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||!_maximumNonEscapedChar  ==  Feature.QUOTE_FIELD_NAMES)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||!_maximumNonEscapedChar  ==  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||!_maximumNonEscapedChar  ==  Feature.QUOTE_FIELD_NAMES)  {	  if(_cfgUnqNames!=    Feature.QUOTE_FIELD_NAMES    ||    _maximumNonEscapedChar    ==    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	6	None	replace
4	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||  f!=  Feature.QUOTE_FIELD_NAMES)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  null  ||  f!=  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  null  ||  f!=  Feature.QUOTE_FIELD_NAMES)  {	  if(_cfgUnqNames    ==    null    ||    f    ==    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	16	None	replace
5	[BUG]  [BUGGY]  if(f  ==  null  ||  _cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  null  ||  _cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f  ==  null  ||  _cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES)  {	  if(_cfgUnqNames    ==    null    ||    f    ==    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	16	None	replace
6	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||  f.isIncluded())  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  null  ||  f.isIncluded())  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  null  ||  f.isIncluded())  {	  if(_cfgUnqNames    ==    null    ||    f    ==    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	16	None	replace
7	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  _maximumNonEscapedChar,  _characterEscapes);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  _maximumNonEscapedChar,  _characterEscapes);  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.createChildObjectContext(f,  _maximumNonEscapedChar,  _characterEscapes);	  _ioContext    =    _ioContext.createChildObjectContext(f,    _maximumNonEscapedChar);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
8	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  _characterEscapes);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  _characterEscapes);  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.createChildObjectContext(f,  _characterEscapes);	  _ioContext    =    _ioContext.createChildObjectContext(f,    _maximumNonEscapedChar);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
9	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  _outputEscapes);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  _outputEscapes);  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.createChildObjectContext(f,  _outputEscapes);	  _ioContext    =    _ioContext.createChildObjectContext(f,    _maximumNonEscapedChar);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
10	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  _outputEscapes,  _maximumNonEscapedChar);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  _outputEscapes,  _maximumNonEscapedChar);  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.createChildObjectContext(f,  _outputEscapes,  _maximumNonEscapedChar);	  _ioContext    =    _ioContext.createChildObjectContext(f,    _maximumNonEscapedChar);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  _cfgUnqNames  ==  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  _cfgUnqNames  ==  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  _cfgUnqNames  ==  null)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	35	None	replace
12	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	35	None	replace
13	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  f.getMask()  ==  0)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  f.getMask()  ==  0)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  f.getMask()  ==  0)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	35	None	replace
14	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  ==  _features)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  ==  _features)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  ==  _features)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||    _maximumNonEscapedChar    <    features)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	32	None	replace
15	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  ==  features)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  ==  features)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  ==  features)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||    _maximumNonEscapedChar    <    features)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	32	None	replace
16	[BUG]  [BUGGY]  if(features  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  <  _cfgUnqNames)  {  [CE]  cannot  find  symbol  features  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(features  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  <  _cfgUnqNames)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(features  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  <  _cfgUnqNames)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||    _maximumNonEscapedChar    <    features)    {    	non-compiled	[CE]  cannot  find  symbol  features	32	None	replace
17	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar!=  _features)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]                      ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar!=  _features)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar!=  _features)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||    _maximumNonEscapedChar    <    features)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	32	None	replace
18	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  If(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  If(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  If(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    If(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
19	[BUG]  [BUGGY]  if(f  ==  null)  {  If(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  null)  {  If(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f  ==  null)  {  If(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    If(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
20	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _characterEscapes  ==  Feature.QUOTE_FIELD_NAMES)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _characterEscapes  ==  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _characterEscapes  ==  Feature.QUOTE_FIELD_NAMES)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||    _maximumNonEscapedChar    ==    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	5	None	replace
21	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(-1,  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(-1,  1);  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.createChildObjectContext(-1,  1);	  _ioContext    =    _ioContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
22	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(-1,  -1,  _maximumNonEscapedChar);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(-1,  -1,  _maximumNonEscapedChar);  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.createChildObjectContext(-1,  -1,  _maximumNonEscapedChar);	  _ioContext    =    _ioContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
23	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(-1,  2);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(-1,  2);  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.createChildObjectContext(-1,  2);	  _ioContext    =    _ioContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
24	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||!_rootValueSeparator)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||!_rootValueSeparator)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||!_rootValueSeparator)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||!_cfgUnqNames)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	31	None	replace
25	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||!_maximumNonEscapedChar)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||!_maximumNonEscapedChar)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||!_maximumNonEscapedChar)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||!_cfgUnqNames)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	31	None	replace
26	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  <  _cfgUnqNames)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  <  _cfgUnqNames)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  <  _cfgUnqNames)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||!_cfgUnqNames)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	31	None	replace
27	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||!_rootValueSeparator)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  null  ||!_rootValueSeparator)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  null  ||!_rootValueSeparator)  {	  if(_cfgUnqNames    ==    null    ||!_cfgUnqNames)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	34	None	replace
28	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null  ||!_cfgUnqNames)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames!=  null  ||!_cfgUnqNames)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames!=  null  ||!_cfgUnqNames)  {	  if(_cfgUnqNames    ==    null    ||!_cfgUnqNames)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	34	None	replace
29	[BUG]  [BUGGY]  if(_rootValueSeparator  ==  null  ||  _cfgUnqNames  ==  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_rootValueSeparator  ==  null  ||  _cfgUnqNames  ==  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_rootValueSeparator  ==  null  ||  _cfgUnqNames  ==  null)  {	  if(_cfgUnqNames    ==    null    ||    _rootValueSeparator!=    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	23	None	replace
30	[BUG]  [BUGGY]  if(_rootValueSeparator  ==  null  ||  _cfgUnqNames!=  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_rootValueSeparator  ==  null  ||  _cfgUnqNames!=  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_rootValueSeparator  ==  null  ||  _cfgUnqNames!=  null)  {	  if(_cfgUnqNames    ==    null    ||    _rootValueSeparator!=    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	23	None	replace
31	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  &&  _rootValueSeparator!=  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  null  &&  _rootValueSeparator!=  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  null  &&  _rootValueSeparator!=  null)  {	  if(_cfgUnqNames    ==    null    ||    _rootValueSeparator!=    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	23	None	replace
32	[BUG]  [BUGGY]  _ioContext  =  ctxt.getCurrentNodePointer();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  ctxt.getCurrentNodePointer();  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  ctxt.getCurrentNodePointer();	  _ioContext    =    _ioContext.getCurrentNodePointer();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
33	[BUG]  [BUGGY]  _ioContext  =  _ioContext.getIOContext();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.getIOContext();  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.getIOContext();	  _ioContext    =    _ioContext.getCurrentNodePointer();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
34	[BUG]  [BUGGY]  _ioContext  =  ctxt.getCurrentSeparator();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  ctxt.getCurrentSeparator();  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  ctxt.getCurrentSeparator();	  _ioContext    =    _ioContext.getCurrentSeparator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
35	[BUG]  [BUGGY]  _ioContext  =  _ioContext.getCurrentImpl();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.getCurrentImpl();  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.getCurrentImpl();	  _ioContext    =    _ioContext.getCurrentSeparator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
36	[BUG]  [BUGGY]  _ioContext  =  _ioContext.getImplicitSeparator();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.getImplicitSeparator();  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.getImplicitSeparator();	  _ioContext    =    _ioContext.getCurrentSeparator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
37	[BUG]  [BUGGY]  if(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f    ==    null    ||    f    ==    Feature.QUOTE_FIELD_NAMES)    {    if(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
38	[BUG]  [BUGGY]  if(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(f!=  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(f!=  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f    ==    null    ||    f    ==    Feature.QUOTE_FIELD_NAMES)    {    if(f!=  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
39	[BUG]  [BUGGY]  if(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(f  ==  null  ||  f!=  Feature.QUOTE_FIELD_NAMES)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(f  ==  null  ||  f!=  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f    ==    null    ||    f    ==    Feature.QUOTE_FIELD_NAMES)    {    if(f  ==  null  ||  f!=  Feature.QUOTE_FIELD_NAMES)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
40	[BUG]  [BUGGY]  if(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(f  ==  null  ||  f  >=  Feature.QUOTE_FIELD_NAMES)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  if(f  ==  null  ||  f  >=  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f    ==    null    ||    f    ==    Feature.QUOTE_FIELD_NAMES)    {    if(f  ==  null  ||  f  >=  Feature.QUOTE_FIELD_NAMES)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
41	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar!=  0)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar!=  0)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar!=  0)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||    _maximumNonEscapedChar    ==    0)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	30	None	replace
42	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _characterEscapes  ==  0)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _characterEscapes  ==  0)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _characterEscapes  ==  0)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||    _maximumNonEscapedChar    ==    0)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	30	None	replace
43	[BUG]  [BUGGY]  if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  ==  0)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  ==  0)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  ==  0)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||    _maximumNonEscapedChar    ==    0)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	30	None	replace
44	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  null  ||  f!=  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	add	if(f  ==  null  ||  f!=  Feature.QUOTE_FIELD_NAMES)  {	  if(f    ==    null    ||    f    ==    Feature.QUOTE_FIELD_NAMES)    {    	compilable	  [FE]  ComparisonFailure  	26	1	replace
45	[BUG]  [BUGGY]  if(f  ==  null  ||  f!=  Feature.QUOTE_FIELD_NAMES)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  null  ||  f!=  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f  ==  null  ||  f!=  Feature.QUOTE_FIELD_NAMES)  {	  if(f    ==    null    ||    f    ==    Feature.QUOTE_FIELD_NAMES)    {    	compilable	  [FE]  ComparisonFailure  	26	1	replace
46	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELDS  ||  f  ==  null)  {  [CE]  cannot  find  symbol  QUOTE_FIELDS  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  Feature.QUOTE_FIELDS  ||  f  ==  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f  ==  Feature.QUOTE_FIELDS  ||  f  ==  null)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    if(f    ==    Feature.QUOTE_FIELDS    ||    f    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  QUOTE_FIELDS	24	None	replace
47	[BUG]  [BUGGY]  if(f!=  Feature.QUOTE_FIELDS  ||  f  ==  null)  {  [CE]  cannot  find  symbol  QUOTE_FIELDS  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f!=  Feature.QUOTE_FIELDS  ||  f  ==  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f!=  Feature.QUOTE_FIELDS  ||  f  ==  null)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    if(f    ==    Feature.QUOTE_FIELDS    ||    f    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  QUOTE_FIELDS	24	None	replace
48	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(ctxt);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(ctxt);  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.createChildObjectContext(ctxt);	  _ioContext    =    _ioContext.createChildObjectContext();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
49	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(this);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(this);  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.createChildObjectContext(this);	  _ioContext    =    _ioContext.createChildObjectContext();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
50	[BUG]  [BUGGY]  if(f!=  Feature.QUOTE_FIELDS)  {  [CE]  cannot  find  symbol  QUOTE_FIELDS  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f!=  Feature.QUOTE_FIELDS)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f!=  Feature.QUOTE_FIELDS)  {	  if(f!=    Feature.QUOTE_FIELD_NAMES)    {    if(f!=    Feature.QUOTE_FIELDS)    {    	non-compiled	[CE]  cannot  find  symbol  QUOTE_FIELDS	27	None	replace
51	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f!=    null)    {    if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
52	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f!=    null)    {    if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
53	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  >=  null)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  >=  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f!=    null)    {    if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  >=  null)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
54	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  >>  null)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  >>  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f!=    null)    {    if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  >>  null)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
55	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null  ||!_cfgUnqNames.isEmpty())  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames!=  null  ||!_cfgUnqNames.isEmpty())  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames!=  null  ||!_cfgUnqNames.isEmpty())  {	  if(_cfgUnqNames    ==    null    ||!_cfgUnqNames.isEmpty())    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	22	None	replace
56	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  &&!_cfgUnqNames.isEmpty())  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  null  &&!_cfgUnqNames.isEmpty())  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  null  &&!_cfgUnqNames.isEmpty())  {	  if(_cfgUnqNames    ==    null    ||!_cfgUnqNames.isEmpty())    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	22	None	replace
57	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  this);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  this);  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.createChildObjectContext(f,  this);	  _ioContext    =    _ioContext.createChildObjectContext(f);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
58	[BUG]  [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f!=    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
59	[BUG]  [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f!=    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
60	[BUG]  [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  if(f  >=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  if(f  >=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f!=    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    if(f  >=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
61	[BUG]  [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  if(f  >>  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  if(f  >>  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f!=    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    if(f  >>  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
62	[BUG]  [BUGGY]  if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {	  if(f!=    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	15	None	replace
63	[BUG]  [BUGGY]  _ioContext  =  ctxt.getCurrentNode();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  ctxt.getCurrentNode();  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  ctxt.getCurrentNode();	  _ioContext    =    _ioContext.getCurrentNode();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
64	[BUG]  [BUGGY]  _ioContext  =  _ioContext.getImplicitCurrentNode();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.getImplicitCurrentNode();  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.getImplicitCurrentNode();	  _ioContext    =    _ioContext.getCurrentNode();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
65	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	add	if(f  ==  null)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    if(f!=    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	compilable	  [FE]  ComparisonFailure  	3	1	replace
66	[BUG]  [BUGGY]  if(f  ==  null)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f  ==  null)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    if(f!=    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	compilable	  [FE]  ComparisonFailure  	3	1	replace
67	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f!=  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	add	if(f!=  null)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    if(f!=    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	compilable	  [FE]  ComparisonFailure  	3	1	replace
68	[BUG]  [BUGGY]  if(f!=  null)  {  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f!=  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f!=  null)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    if(f!=    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	compilable	  [FE]  ComparisonFailure  	3	1	replace
69	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  false)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	add	if(_cfgUnqNames  ==  false)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    if(f!=    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	compilable	  [FE]  ComparisonFailure  	3	1	replace
70	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  false)  {  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  false)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  false)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    if(f!=    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	compilable	  [FE]  ComparisonFailure  	3	1	replace
71	[BUG]  [BUGGY]  if(f  ==  null  ||  f.isFeature(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  null  ||  f.isFeature(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f  ==  null  ||  f.isFeature(Feature.QUOTE_FIELD_NAMES))  {	  if(f    ==    null    ||    f    ==    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
72	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||  f.isFeature(Feature.QUOTE_FIELD_NAMES))  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  null  ||  f.isFeature(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  null  ||  f.isFeature(Feature.QUOTE_FIELD_NAMES))  {	  if(_cfgUnqNames    ==    null    ||    f    ==    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	16	None	replace
73	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||!_cfgUnqNames.contains(f))  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  null  ||!_cfgUnqNames.contains(f))  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  null  ||!_cfgUnqNames.contains(f))  {	  if(_cfgUnqNames    ==    null    ||    f    ==    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	16	None	replace
74	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||!_cfgUnqNames.equals(f))  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  null  ||!_cfgUnqNames.equals(f))  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  null  ||!_cfgUnqNames.equals(f))  {	  if(_cfgUnqNames    ==    null    ||!_cfgUnqNames.isEmpty())    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	22	None	replace
75	[BUG]  [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  if(f!=  Feature.QUOTE_FIELDS  ||  f  ==  null)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  if(f!=  Feature.QUOTE_FIELDS  ||  f  ==  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f!=    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    if(f!=  Feature.QUOTE_FIELDS  ||  f  ==  null)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
76	[BUG]  [BUGGY]  if(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  If(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  If(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f    ==    null    ||    f    ==    Feature.QUOTE_FIELD_NAMES)    {    If(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
77	[BUG]  [BUGGY]  _ioContext  =  _ioContext.getCurrentContext();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.getCurrentContext();  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.getCurrentContext();	  _ioContext    =    _ioContext.getCurrentSeparator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
78	[BUG]  [BUGGY]  _ioContext  =  _ioContext.getCurrentIOContext();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.getCurrentIOContext();  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.getCurrentIOContext();	  _ioContext    =    _ioContext.getCurrentNodePointer();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
79	[BUG]  [BUGGY]  if(f!=  null)  {  If(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f!=  null)  {  If(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f!=  null)  {  If(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    If(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
80	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(0,  0);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(0,  0);  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.createChildObjectContext(0,  0);	  _ioContext    =    _ioContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
81	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildArrayContext(-1,  -1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.createChildArrayContext(-1,  -1);  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.createChildArrayContext(-1,  -1);	  _ioContext    =    _ioContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
82	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  >=  0)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  >=  0)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  >=  0)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||    _maximumNonEscapedChar    ==    0)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	30	None	replace
83	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null  ||  _rootValueSeparator!=  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames!=  null  ||  _rootValueSeparator!=  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames!=  null  ||  _rootValueSeparator!=  null)  {	  if(_cfgUnqNames!=    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	17	None	replace
84	[BUG]  [BUGGY]  _ioContext  =  _ioContext.getCurrentNodeType();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.getCurrentNodeType();  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.getCurrentNodeType();	  _ioContext    =    _ioContext.getCurrentNode();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
85	[BUG]  [BUGGY]  _ioContext  =  _ioContext.getCurrentNodeInput();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.getCurrentNodeInput();  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.getCurrentNodeInput();	  _ioContext    =    _ioContext.getCurrentNode();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
86	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||  _rootValueSeparator  ==  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  null  ||  _rootValueSeparator  ==  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  null  ||  _rootValueSeparator  ==  null)  {	  if(_cfgUnqNames    ==    null    ||    _rootValueSeparator!=    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	23	None	replace
87	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  >=  _cfgUnqNames)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  >=  _cfgUnqNames)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  >=  _cfgUnqNames)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||!_cfgUnqNames)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	31	None	replace
88	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  if(f  ==  Feature.QUOTE_FIELDS  ||  f!=  null)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  if(f  ==  Feature.QUOTE_FIELDS  ||  f!=  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f!=    null)    {    if(f  ==  Feature.QUOTE_FIELDS  ||  f!=  null)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
89	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  If(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  If(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f!=    null)    {    If(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
90	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  _config);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  _config);  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.createChildObjectContext(f,  _config);	  _ioContext    =    _ioContext.createChildObjectContext(f);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
91	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  _maximumNonEscapedChar,  _outputEscapes);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  _maximumNonEscapedChar,  _outputEscapes);  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.createChildObjectContext(f,  _maximumNonEscapedChar,  _outputEscapes);	  _ioContext    =    _ioContext.createChildObjectContext(f,    _maximumNonEscapedChar);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
92	[BUG]  [BUGGY]  if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  >=  Feature.QUOTE_FIELD_NAMES)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  >=  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  >=  Feature.QUOTE_FIELD_NAMES)  {	  if(_cfgUnqNames!=    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	7	None	replace
93	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildArrayContext();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.createChildArrayContext();  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.createChildArrayContext();	  _ioContext    =    _ioContext.createChildObjectContext();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
94	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(null);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(null);  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.createChildObjectContext(null);	  _ioContext    =    _ioContext.createChildObjectContext();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
95	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||  f.getMask()  ==  Feature.QUOTE_FIELD_NAMES)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  null  ||  f.getMask()  ==  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  null  ||  f.getMask()  ==  Feature.QUOTE_FIELD_NAMES)  {	  if(_cfgUnqNames    ==    null    ||    f    ==    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	16	None	replace
96	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||  f.features  |  Feature.QUOTE_FIELD_NAMES)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  null  ||  f.features  |  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  null  ||  f.features  |  Feature.QUOTE_FIELD_NAMES)  {	  if(_cfgUnqNames    ==    null    ||    f    ==    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	16	None	replace
97	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(!_cfgUnqNames)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	add	if(!_cfgUnqNames)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||!_cfgUnqNames)    {    	compilable	  [FE]  ComparisonFailure  	31	1	replace
98	[BUG]  [BUGGY]  if(!_cfgUnqNames)  {  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(!_cfgUnqNames)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(!_cfgUnqNames)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||!_cfgUnqNames)    {    	compilable	  [FE]  ComparisonFailure  	31	1	replace
99	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||!_isConstructor)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||!_isConstructor)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||!_isConstructor)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||!_cfgUnqNames)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	31	None	replace
100	[BUG]  [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  If(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  If(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f!=  Feature.QUOTE_FIELD_NAMES)  {  If(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    If(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
101	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES  &&  f  ==  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	add	if(f!=  Feature.QUOTE_FIELD_NAMES  &&  f  ==  null)  {	  if(f!=    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	compilable	  [FE]  ComparisonFailure  	15	1	replace
102	[BUG]  [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES  &&  f  ==  null)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES  &&  f  ==  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f!=  Feature.QUOTE_FIELD_NAMES  &&  f  ==  null)  {	  if(f!=    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	compilable	  [FE]  ComparisonFailure  	15	1	replace
103	[BUG]  [BUGGY]  if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  <  features)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  <  features)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  <  features)  {	  if(_cfgUnqNames!=    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	7	None	replace
104	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||!_cfgUnqNames.equals(f.getMask()))  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  null  ||!_cfgUnqNames.equals(f.getMask()))  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  null  ||!_cfgUnqNames.equals(f.getMask()))  {	  if(_cfgUnqNames    ==    null    ||!_cfgUnqNames.isEmpty())    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	22	None	replace
105	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null  &&  _cfgUnqNames.length  >  0)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames!=  null  &&  _cfgUnqNames.length  >  0)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames!=  null  &&  _cfgUnqNames.length  >  0)  {	  if(_cfgUnqNames!=    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	17	None	replace
106	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null  ||  _maximumNonEscapedChar  <  CharacterEscapes.VERTICAL)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames!=  null  ||  _maximumNonEscapedChar  <  CharacterEscapes.VERTICAL)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames!=  null  ||  _maximumNonEscapedChar  <  CharacterEscapes.VERTICAL)  {	  if(_cfgUnqNames!=    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	17	None	replace
107	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELDS)  {  [CE]  cannot  find  symbol  QUOTE_FIELDS  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f  ==  Feature.QUOTE_FIELDS)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f  ==  Feature.QUOTE_FIELDS)  {	  if(f!=    Feature.QUOTE_FIELD_NAMES)    {    if(f!=    Feature.QUOTE_FIELDS)    {    	non-compiled	[CE]  cannot  find  symbol  QUOTE_FIELDS	27	None	replace
108	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  f.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  f.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  f.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	35	None	replace
109	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  >=  features)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  >=  features)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  >=  features)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||    _maximumNonEscapedChar    <    features)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	32	None	replace
110	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar!=  features)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar!=  features)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar!=  features)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||    _maximumNonEscapedChar    <    features)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	32	None	replace
111	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _characterEscapes  <  _maximumNonEscapedChar)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _characterEscapes  <  _maximumNonEscapedChar)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _characterEscapes  <  _maximumNonEscapedChar)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||    _maximumNonEscapedChar    <    features)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	32	None	replace
112	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f!=  null  &&  f  ==  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	add	if(f!=  null  &&  f  ==  Feature.QUOTE_FIELD_NAMES)  {	  if(f    ==    null    ||    f    ==    Feature.QUOTE_FIELD_NAMES)    {    	compilable	  [FE]  ComparisonFailure  	26	1	replace
113	[BUG]  [BUGGY]  if(f!=  null  &&  f  ==  Feature.QUOTE_FIELD_NAMES)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f!=  null  &&  f  ==  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f!=  null  &&  f  ==  Feature.QUOTE_FIELD_NAMES)  {	  if(f    ==    null    ||    f    ==    Feature.QUOTE_FIELD_NAMES)    {    	compilable	  [FE]  ComparisonFailure  	26	1	replace
114	[BUG]  [BUGGY]  _ioContext  =  _ioContext.getCurrentNodeForCodeInsertion(f);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  _ioContext  =  _ioContext.getCurrentNodeForCodeInsertion(f);  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.getCurrentNodeForCodeInsertion(f);	  _ioContext    =    _ioContext.getCurrentNode();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
115	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||  _rootValueSeparator.equals(_rootValueSeparator))  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  null  ||  _rootValueSeparator.equals(_rootValueSeparator))  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  null  ||  _rootValueSeparator.equals(_rootValueSeparator))  {	  if(_cfgUnqNames    ==    null    ||    _rootValueSeparator!=    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	23	None	replace
116	[BUG]  [BUGGY]  if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  &&  _maximumNonEscapedChar  ==  Feature.QUOTE_FIELD_NAMES)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  &&  _maximumNonEscapedChar  ==  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  &&  _maximumNonEscapedChar  ==  Feature.QUOTE_FIELD_NAMES)  {	  if(_cfgUnqNames!=    Feature.QUOTE_FIELD_NAMES    ||    _maximumNonEscapedChar    ==    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	6	None	replace
117	[BUG]  [BUGGY]  if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  ||  _characterEscapes  ==  Feature.QUOTE_FIELD_NAMES)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  ||  _characterEscapes  ==  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  ||  _characterEscapes  ==  Feature.QUOTE_FIELD_NAMES)  {	  if(_cfgUnqNames!=    Feature.QUOTE_FIELD_NAMES    ||    _maximumNonEscapedChar    ==    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	6	None	replace
118	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  &&  _maximumNonEscapedChar  ==  Feature.QUOTE_FIELD_NAMES)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  &&  _maximumNonEscapedChar  ==  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  &&  _maximumNonEscapedChar  ==  Feature.QUOTE_FIELD_NAMES)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES    ||    _maximumNonEscapedChar    ==    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	5	None	replace
119	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	add	if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f!=    null)    {    	compilable	  [FE]  ComparisonFailure  	13	1	replace
120	[BUG]  [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);      [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  [BUGGY]      _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f!=    null)    {    	compilable	  [FE]  ComparisonFailure  	13	1	replace
