bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
2	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
3	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
4	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  If(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  If(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    If(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
5	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  ==  Feature.QUOTE_FIELD_NAMES)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]        ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  ==  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  ==  Feature.QUOTE_FIELD_NAMES)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	7	None	replace
6	[BUG]  [BUGGY]  if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  ==  Feature.QUOTE_FIELD_NAMES)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]          ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  ==  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  ==  Feature.QUOTE_FIELD_NAMES)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	7	None	replace
7	[BUG]  [BUGGY]  if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]            ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames!=  Feature.QUOTE_FIELD_NAMES)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	7	None	replace
8	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f);  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.createChildObjectContext(f);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  _ioContext  =  _ioContext.getCurrentSeparator();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  _ioContext  =  _ioContext.getCurrentSeparator();  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.getCurrentSeparator();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
10	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext();  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.createChildObjectContext();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
11	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  _maximumNonEscapedChar);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  _maximumNonEscapedChar);  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.createChildObjectContext(f,  _maximumNonEscapedChar);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	add	if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
13	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f!=  null)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
14	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	add	if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
15	[BUG]  [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f!=  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
16	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]        ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(_cfgUnqNames  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	6	None	replace
17	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(_cfgUnqNames!=  null)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames!=  null)  {	  if(f!=    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	2	None	replace
18	[BUG]  [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f!=    Feature.QUOTE_FIELD_NAMES)    {    if(f!=  Feature.QUOTE_FIELD_NAMES)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
19	[BUG]  [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f!=    Feature.QUOTE_FIELD_NAMES)    {    if(f  ==  Feature.QUOTE_FIELD_NAMES)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
20	[BUG]  [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  if(f  >=  Feature.QUOTE_FIELD_NAMES)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  if(f  >=  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f!=    Feature.QUOTE_FIELD_NAMES)    {    if(f  >=  Feature.QUOTE_FIELD_NAMES)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
21	[BUG]  [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  if(f  >>  Feature.QUOTE_FIELD_NAMES)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  if(f  >>  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f!=    Feature.QUOTE_FIELD_NAMES)    {    if(f  >>  Feature.QUOTE_FIELD_NAMES)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
22	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||!_cfgUnqNames.isEmpty())  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]          ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(_cfgUnqNames  ==  null  ||!_cfgUnqNames.isEmpty())  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  null  ||!_cfgUnqNames.isEmpty())  {	  if(_cfgUnqNames    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	3	None	replace
23	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||  _rootValueSeparator!=  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]            ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(_cfgUnqNames  ==  null  ||  _rootValueSeparator!=  null)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  null  ||  _rootValueSeparator!=  null)  {	  if(_cfgUnqNames    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	3	None	replace
24	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  if(f  ==  Feature.QUOTE_FIELDS  ||  f  ==  null)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  if(f  ==  Feature.QUOTE_FIELDS  ||  f  ==  null)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    if(f  ==  Feature.QUOTE_FIELDS  ||  f  ==  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	add	if(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
26	[BUG]  [BUGGY]  if(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f  ==  null  ||  f  ==  Feature.QUOTE_FIELD_NAMES)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	compilable	  [FE]  ComparisonFailure  	6	1	replace
27	[BUG]  [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  if(f!=  Feature.QUOTE_FIELDS)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  if(f!=  Feature.QUOTE_FIELDS)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f!=    Feature.QUOTE_FIELD_NAMES)    {    if(f!=  Feature.QUOTE_FIELDS)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
28	[BUG]  [BUGGY]  _ioContext  =  _ioContext.getCurrentNodePointer();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  _ioContext  =  _ioContext.getCurrentNodePointer();  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.getCurrentNodePointer();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
29	[BUG]  [BUGGY]  _ioContext  =  _ioContext.getCurrentNode();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  _ioContext  =  _ioContext.getCurrentNode();  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.getCurrentNode();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
30	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  ==  0)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]        ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  ==  0)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  ==  0)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	7	None	replace
31	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||!_cfgUnqNames)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]          ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||!_cfgUnqNames)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||!_cfgUnqNames)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	7	None	replace
32	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  <  features)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]            ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  <  features)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  _maximumNonEscapedChar  <  features)  {	  if(_cfgUnqNames    ==    Feature.QUOTE_FIELD_NAMES)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	7	None	replace
33	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(-1,  -1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(-1,  -1);  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	_ioContext  =  _ioContext.createChildObjectContext(-1,  -1);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
34	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null  ||!_cfgUnqNames)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]          ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(_cfgUnqNames  ==  null  ||!_cfgUnqNames)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  null  ||!_cfgUnqNames)  {	  if(_cfgUnqNames    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	3	None	replace
35	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]    ComparisonFailure    [CONTEXT]    public  JsonGenerator  enable(Feature  f)  {  super.enable(f);    [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [BUGGY]    _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {	  if(f    ==    Feature.QUOTE_FIELD_NAMES    ||    f    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	6	None	replace
