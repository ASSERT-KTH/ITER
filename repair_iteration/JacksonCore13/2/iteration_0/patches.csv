bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	add	if(f!=  Feature.QUOTE_FIELD_NAMES)  {	if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  	compilable	  [FE]  ComparisonFailure  	3	1	replace
2	[BUG]  [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  [BUGGY]  if(f!=  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f!=  Feature.QUOTE_FIELD_NAMES)  {	if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  	compilable	  [FE]  ComparisonFailure  	3	1	replace
3	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]      ComparisonFailure  [CONTEXT]  public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  [BUGGY]  if(_cfgUnqNames  ==  null)  {  [BUGGY]  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  null)  {	if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	3	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]        ComparisonFailure  [CONTEXT]  public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  [BUGGY]    [BUGGY]  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	  	if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [BUGGY]  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	add	if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {	if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  	compilable	  [FE]  ComparisonFailure  	3	1	replace
6	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {  [BUGGY]  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES  ||  f  ==  null)  {	if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  	compilable	  [FE]  ComparisonFailure  	3	1	replace
7	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES)  {  [CE]  incomparable  types:  boolean  and  Feature  [FE]    ComparisonFailure  [CONTEXT]  public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  [BUGGY]  if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES)  {  [BUGGY]  _cfgUnqNames  =  false;  }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	121	121	1	replace	if(_cfgUnqNames  ==  Feature.QUOTE_FIELD_NAMES)  {	if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {  	non-compiled	[CE]  incomparable  types:  boolean  and  Feature	3	None	replace
