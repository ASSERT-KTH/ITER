bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _cfgUnqNames  =  _ioContext.getCfgUnqNames(f);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  _ioContext.getCfgUnqNames(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  _ioContext.getCfgUnqNames(f);	  _cfgUnqNames    =    _ioContext.getCfgUnqNames();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
2	[BUG]  [BUGGY]  _cfgUnqNames  =  _ioContext.findCfgUnqNames(f);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  _ioContext.findCfgUnqNames(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  _ioContext.findCfgUnqNames(f);	  _cfgUnqNames    =    _ioContext.getCfgUnqNames();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
3	[BUG]  [BUGGY]  _reportUndetectableSource(f,  _maximumNonEscapedChar);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _reportUndetectableSource(f,  _maximumNonEscapedChar);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_reportUndetectableSource(f,  _maximumNonEscapedChar);	  _reportUndetectableSource(f);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
4	[BUG]  [BUGGY]  _reportUndetectableSource(f,  _cfgUnqNames);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _reportUndetectableSource(f,  _cfgUnqNames);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_reportUndetectableSource(f,  _cfgUnqNames);	  _reportUndetectableSource(f);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
5	[BUG]  [BUGGY]  _reportUndetectableSource(f,  _outputEscapes);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _reportUndetectableSource(f,  _outputEscapes);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_reportUndetectableSource(f,  _outputEscapes);	  _reportUndetectableSource(f);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
6	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          enable(f);  enable(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	add	                enable(f);    enable(f);	  	compilable	  [FE]  StackOverflowError  	1	1	add
7	[BUG]  [BUGGY]          enable(f);  enable(f);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          enable(f);  enable(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                enable(f);    enable(f);	  	compilable	  [FE]  StackOverflowError  	1	1	add
8	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          enable(f);  _reportUnsupportedOperation();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	add	                enable(f);    _reportUnsupportedOperation();	  	compilable	  [FE]  StackOverflowError  	1	1	add
9	[BUG]  [BUGGY]          enable(f);  _reportUnsupportedOperation();  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          enable(f);  _reportUnsupportedOperation();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                enable(f);    _reportUnsupportedOperation();	  	compilable	  [FE]  StackOverflowError  	1	1	add
10	[BUG]  [BUGGY]          enable(f);  _reportUndetectableSource(f);  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          enable(f);  _reportUndetectableSource(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                enable(f);    _reportUndetectableSource(f);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
11	[BUG]  [BUGGY]          enable(f);  _reportError( "Unable  to  parse   "  +  f.getMessage());  [CE]  cannot  find  symbol  [FE]          StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          enable(f);  _reportError( "Unable  to  parse   "  +  f.getMessage());  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                enable(f);    _reportError( "Unable  to  parse   "  +  f.getMessage());	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
12	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          _reportUnsupportedOperation();  _reportUnsupportedOperation();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	add	                _reportUnsupportedOperation();    _reportUnsupportedOperation();	  	compilable	  [FE]  UnsupportedOperationException  	5	1	add
13	[BUG]  [BUGGY]          _reportUnsupportedOperation();  _reportUnsupportedOperation();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          _reportUnsupportedOperation();  _reportUnsupportedOperation();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                _reportUnsupportedOperation();    _reportUnsupportedOperation();	  	compilable	  [FE]  UnsupportedOperationException  	5	1	add
14	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          _reportUnsupportedOperation();  if(_maximumNonEscapedChar  ==  0)  {  _reportUnsupportedOperation();  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	add	                _reportUnsupportedOperation();    if(_maximumNonEscapedChar  ==  0)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	5	1	add
15	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_maximumNonEscapedChar  ==  0)  {  _reportUnsupportedOperation();  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          _reportUnsupportedOperation();  if(_maximumNonEscapedChar  ==  0)  {  _reportUnsupportedOperation();  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                _reportUnsupportedOperation();    if(_maximumNonEscapedChar  ==  0)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	5	1	add
16	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          _reportUnsupportedOperation();  if(_maximumNonEscapedChar!=  0)  {  _reportUnsupportedOperation();  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	add	                _reportUnsupportedOperation();    if(_maximumNonEscapedChar!=  0)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	5	1	add
17	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_maximumNonEscapedChar!=  0)  {  _reportUnsupportedOperation();  }  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          _reportUnsupportedOperation();  if(_maximumNonEscapedChar!=  0)  {  _reportUnsupportedOperation();  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                _reportUnsupportedOperation();    if(_maximumNonEscapedChar!=  0)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	5	1	add
18	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_isUnsupportedOperation())  {  _reportUnsupportedOperation();  }  [CE]  cannot  find  symbol  [FE]          UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          _reportUnsupportedOperation();  if(_isUnsupportedOperation())  {  _reportUnsupportedOperation();  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                _reportUnsupportedOperation();    if(_isUnsupportedOperation())  {  _reportUnsupportedOperation();  }	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
19	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          _reportUnsupportedOperation();  if(_maximumNonEscapedChar  >=  0)  {  _reportUnsupportedOperation();  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	add	                _reportUnsupportedOperation();    if(_maximumNonEscapedChar  >=  0)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	5	1	add
20	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_maximumNonEscapedChar  >=  0)  {  _reportUnsupportedOperation();  }  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          _reportUnsupportedOperation();  if(_maximumNonEscapedChar  >=  0)  {  _reportUnsupportedOperation();  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                _reportUnsupportedOperation();    if(_maximumNonEscapedChar  >=  0)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	5	1	add
21	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _throwInternal();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	add	_throwInternal();	          _reportUnsupportedOperation();    	compilable	  [FE]  RuntimeException  	6	1	replace
22	[BUG]  [BUGGY]  _throwInternal();  [FE]  RuntimeException  [FE]    UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _throwInternal();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_throwInternal();	          _reportUnsupportedOperation();    	compilable	  [FE]  RuntimeException  	6	1	replace
23	[BUG]  [BUGGY]  _throwUnsupportedOperation();  [CE]  cannot  find  symbol  [FE]      UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _throwUnsupportedOperation();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_throwUnsupportedOperation();	          _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
24	[BUG]  [BUGGY]  _reportError( "Unsupported  Operation  operation ");  [CE]  unreported  exception  JsonGenerationException;  must  be  caught  or  declared  to  be  thrown  [FE]        UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _reportError( "Unsupported  Operation  operation ");  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_reportError( "Unsupported  Operation  operation ");	          _reportUnsupportedOperation();    	non-compiled	[CE]  unreported  exception  JsonGenerationException;  must  be  caught  or  declared  to  be  thrown	6	None	replace
25	[BUG]  [BUGGY]  enable(f,  _maximumNonEscapedChar);  [CE]  no  suitable  method  found  for  enable(Feature,int)  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  enable(f,  _maximumNonEscapedChar);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	enable(f,  _maximumNonEscapedChar);	          enable(f);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,int)	2	None	replace
26	[BUG]  [BUGGY]  enable(f,  _cfgUnqNames);  [CE]  no  suitable  method  found  for  enable(Feature,boolean)  [FE]      StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  enable(f,  _cfgUnqNames);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	enable(f,  _cfgUnqNames);	          enable(f);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,boolean)	2	None	replace
27	[BUG]  [BUGGY]  enable(f,  null);  [CE]  no  suitable  method  found  for  enable(Feature,<null>)  [FE]        StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  enable(f,  null);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	enable(f,  null);	          enable(f);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,<null>)	2	None	replace
28	[BUG]  [BUGGY]  _cfgUnqNames  =  new  String[_maximumNonEscapedChar  +  1];  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  new  String[_maximumNonEscapedChar  +  1];  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  new  String[_maximumNonEscapedChar  +  1];	  _cfgUnqNames    =    new    String[_maximumNonEscapedChar];    	non-compiled	[CE]  incompatible  types	29	None	replace
29	[BUG]  [BUGGY]  ||(_cfgUnqNames!=  null  &&!_cfgUnqNames.isEmpty()));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||(_cfgUnqNames!=  null  &&!_cfgUnqNames.isEmpty()));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||(_cfgUnqNames!=  null  &&!_cfgUnqNames.isEmpty()));	  ||(_cfgUnqNames!=    null    &&!_cfgUnqNames.isEmpty());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
30	[BUG]  [BUGGY]  _cfgUnqNames  =  _cfgUnqNames.getCfgUnqNames();  [CE]  boolean  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  _cfgUnqNames.getCfgUnqNames();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  _cfgUnqNames.getCfgUnqNames();	  _cfgUnqNames    =    f.getCfgUnqNames();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	23	None	replace
31	[BUG]  [BUGGY]  ||  _cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||  _cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||  _cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;	  _cfgUnqNames    =    true;    ||    _cfgUnqNames    ==    null)    {    _cfgUnqNames    =    true;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
32	[BUG]  [BUGGY]  ||  _cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||  _cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||  _cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  }	  _cfgUnqNames    =    true;    ||    _cfgUnqNames    ==    null)    {    _cfgUnqNames    =    true;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
33	[BUG]  [BUGGY]  ||  _cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||  _cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||  _cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;	  _cfgUnqNames    =    true;    ||    _cfgUnqNames    ==    null)    {    _cfgUnqNames    =    true;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
34	[BUG]  [BUGGY]  ||  _cfgUnqNames  ==  false;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||  _cfgUnqNames  ==  false;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||  _cfgUnqNames  ==  false;	  _cfgUnqNames    =    true;    ||    _cfgUnqNames    ==    false;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
35	[BUG]  [BUGGY]  ||  _cfgUnqNames!=  false;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||  _cfgUnqNames!=  false;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||  _cfgUnqNames!=  false;	  _cfgUnqNames    =    true;    ||    _cfgUnqNames    ==    false;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
36	[BUG]  [BUGGY]  ||  _cfgUnqNames  ==  true;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||  _cfgUnqNames  ==  true;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||  _cfgUnqNames  ==  true;	  _cfgUnqNames    =    true;    ||    _cfgUnqNames    ==    false;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
37	[BUG]  [BUGGY]  _cfgUnqNames  =  new  String[_characterEscapes];  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  new  String[_characterEscapes];  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  new  String[_characterEscapes];	  _cfgUnqNames    =    new    String[_maximumNonEscapedCharIndexes];    	non-compiled	[CE]  incompatible  types	30	None	replace
38	[BUG]  [BUGGY]  _cfgUnqNames  =  new  String[_inputEscapes];  [CE]  cannot  find  symbol  _inputEscapes  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  new  String[_inputEscapes];  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  new  String[_inputEscapes];	  _cfgUnqNames    =    new    String[_maximumNonEscapedCharIndexes];    	non-compiled	[CE]  cannot  find  symbol  _inputEscapes	30	None	replace
39	[BUG]  [BUGGY]  _cfgUnqNames  =  new  String[_defaultNonEscapedCharIndexes];  [CE]  cannot  find  symbol  _defaultNonEscapedCharIndexes  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  new  String[_defaultNonEscapedCharIndexes];  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  new  String[_defaultNonEscapedCharIndexes];	  _cfgUnqNames    =    new    String[_maximumNonEscapedCharIndexes];    	non-compiled	[CE]  cannot  find  symbol  _defaultNonEscapedCharIndexes	30	None	replace
40	[BUG]  [BUGGY]  _reportUnexpectedChar(f,  _maximumNonEscapedChar);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _reportUnexpectedChar(f,  _maximumNonEscapedChar);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_reportUnexpectedChar(f,  _maximumNonEscapedChar);	          _reportUnexpectedChar(f);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
41	[BUG]  [BUGGY]  _reportUnexpectedChar(this,  f);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _reportUnexpectedChar(this,  f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_reportUnexpectedChar(this,  f);	          _reportUnexpectedChar(f);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
42	[BUG]  [BUGGY]  _reportUnexpectedChar(f.getMask());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _reportUnexpectedChar(f.getMask());  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_reportUnexpectedChar(f.getMask());	          _reportUnexpectedChar(f);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
43	[BUG]  [BUGGY]  CharacterEscapes  _cfgUnqNames  =  true;  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  CharacterEscapes  _cfgUnqNames  =  true;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	CharacterEscapes  _cfgUnqNames  =  true;	  _cfgUnqNames    =    true;    CharacterEscapes    _cfgUnqNames    =    true;    	non-compiled	[CE]  incompatible  types	15	None	replace
44	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  _cfgUnqNames;  _cfgUnqNames  =  _cfgUnqNames;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	add	_cfgUnqNames    =    _cfgUnqNames;    _cfgUnqNames  =  _cfgUnqNames;	  	compilable	  [FE]  ComparisonFailure  	20	1	add
45	[BUG]  [BUGGY]  _cfgUnqNames  =  _cfgUnqNames;  _cfgUnqNames  =  _cfgUnqNames;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  _cfgUnqNames;  _cfgUnqNames  =  _cfgUnqNames;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames    =    _cfgUnqNames;    _cfgUnqNames  =  _cfgUnqNames;	  	compilable	  [FE]  ComparisonFailure  	20	1	add
46	[BUG]  [BUGGY]  _cfgUnqNames  =  _cfgUnqNames;  CharacterEscapes  _cfgUnqNames  =  _cfgUnqNames;  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  _cfgUnqNames;  CharacterEscapes  _cfgUnqNames  =  _cfgUnqNames;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames    =    _cfgUnqNames;    CharacterEscapes  _cfgUnqNames  =  _cfgUnqNames;	  	non-compiled	[CE]  incompatible  types	20	None	add
47	[BUG]  [BUGGY]  _cfgUnqNames  =  _cfgUnqNames;  _cfgUnqNames  =  _cfgUnqNames.clone();  [CE]  boolean  cannot  be  dereferenced  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  _cfgUnqNames;  _cfgUnqNames  =  _cfgUnqNames.clone();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames    =    _cfgUnqNames;    _cfgUnqNames  =  _cfgUnqNames.clone();	  	non-compiled	[CE]  boolean  cannot  be  dereferenced	20	None	add
48	[BUG]  [BUGGY]  _cfgUnqNames  =  _cfgUnqNames;  _cfgUnqNames  =  _cfgUnqNames.toString();  [CE]  boolean  cannot  be  dereferenced  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  _cfgUnqNames;  _cfgUnqNames  =  _cfgUnqNames.toString();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames    =    _cfgUnqNames;    _cfgUnqNames  =  _cfgUnqNames.toString();	  	non-compiled	[CE]  boolean  cannot  be  dereferenced	20	None	add
49	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames    =    true;    _cfgUnqNames  =  true;  _cfgUnqNames  =  true;  _cfgUnqNames  =  true;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	add	_cfgUnqNames        =        true;        _cfgUnqNames    =    true;    _cfgUnqNames  =  true;  _cfgUnqNames  =  true;	  	compilable	  [FE]  ComparisonFailure  	13	1	add
50	[BUG]  [BUGGY]  _cfgUnqNames    =    true;    _cfgUnqNames  =  true;  _cfgUnqNames  =  true;  _cfgUnqNames  =  true;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames    =    true;    _cfgUnqNames  =  true;  _cfgUnqNames  =  true;  _cfgUnqNames  =  true;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames        =        true;        _cfgUnqNames    =    true;    _cfgUnqNames  =  true;  _cfgUnqNames  =  true;	  	compilable	  [FE]  ComparisonFailure  	13	1	add
51	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames    =    true;    _cfgUnqNames  =  true;  _cfgUnqNames  =  false;  _cfgUnqNames  =  true;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	add	_cfgUnqNames        =        true;        _cfgUnqNames    =    true;    _cfgUnqNames  =  false;  _cfgUnqNames  =  true;	  	compilable	  [FE]  ComparisonFailure  	13	1	add
52	[BUG]  [BUGGY]  _cfgUnqNames    =    true;    _cfgUnqNames  =  true;  _cfgUnqNames  =  false;  _cfgUnqNames  =  true;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames    =    true;    _cfgUnqNames  =  true;  _cfgUnqNames  =  false;  _cfgUnqNames  =  true;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames        =        true;        _cfgUnqNames    =    true;    _cfgUnqNames  =  false;  _cfgUnqNames  =  true;	  	compilable	  [FE]  ComparisonFailure  	13	1	add
53	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames    =    true;    _cfgUnqNames  =  true;  _cfgUnqNames  =  true;  _cfgUnqNames  =  false;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	add	_cfgUnqNames        =        true;        _cfgUnqNames    =    true;    _cfgUnqNames  =  true;  _cfgUnqNames  =  false;	  	compilable	  [FE]  ComparisonFailure  	13	1	add
54	[BUG]  [BUGGY]  _cfgUnqNames    =    true;    _cfgUnqNames  =  true;  _cfgUnqNames  =  true;  _cfgUnqNames  =  false;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames    =    true;    _cfgUnqNames  =  true;  _cfgUnqNames  =  true;  _cfgUnqNames  =  false;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames        =        true;        _cfgUnqNames    =    true;    _cfgUnqNames  =  true;  _cfgUnqNames  =  false;	  	compilable	  [FE]  ComparisonFailure  	13	1	add
55	[BUG]  [BUGGY]  _ioContext  =  ctxt.createChildObjectContext(f);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _ioContext  =  ctxt.createChildObjectContext(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_ioContext  =  ctxt.createChildObjectContext(f);	          _ioContext    =    _ioContext.createChildObjectContext(f);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	40	None	replace
56	[BUG]  [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  _maximumNonEscapedChar);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _ioContext  =  _ioContext.createChildObjectContext(f,  _maximumNonEscapedChar);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_ioContext  =  _ioContext.createChildObjectContext(f,  _maximumNonEscapedChar);	          _ioContext    =    _ioContext.createChildObjectContext(f);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	40	None	replace
57	[BUG]  [BUGGY]  _ioContext  =  ctxt.createChildObjectContext(-1,  -1);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _ioContext  =  ctxt.createChildObjectContext(-1,  -1);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_ioContext  =  ctxt.createChildObjectContext(-1,  -1);	  _ioContext    =    _ioContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	37	None	replace
58	[BUG]  [BUGGY]  _ioContext  =  f.createChildObjectContext(-1,  -1);  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _ioContext  =  f.createChildObjectContext(-1,  -1);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_ioContext  =  f.createChildObjectContext(-1,  -1);	  _ioContext    =    _ioContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	37	None	replace
59	[BUG]  [BUGGY]  _cfgUnqNames  =(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames;  [CE]  incomparable  types:  boolean  and  <null>  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =(_cfgUnqNames  ==  null)?  null  :  _cfgUnqNames;	  _cfgUnqNames    =    _cfgUnqNames;    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	21	None	replace
60	[BUG]  [BUGGY]  _cfgUnqNames  =(_cfgUnqNames!=  null)?  _cfgUnqNames  :  _cfgUnqNames;  [CE]  incomparable  types:  boolean  and  <null>  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =(_cfgUnqNames!=  null)?  _cfgUnqNames  :  _cfgUnqNames;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =(_cfgUnqNames!=  null)?  _cfgUnqNames  :  _cfgUnqNames;	  _cfgUnqNames    =    _cfgUnqNames;    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	21	None	replace
61	[BUG]  [BUGGY]  _cfgUnqNames  =(_cfgUnqNames  ==  null)?  JsonNull.createJsonNull()  :  _cfgUnqNames;  [CE]  incomparable  types:  boolean  and  <null>  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =(_cfgUnqNames  ==  null)?  JsonNull.createJsonNull()  :  _cfgUnqNames;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =(_cfgUnqNames  ==  null)?  JsonNull.createJsonNull()  :  _cfgUnqNames;	  _cfgUnqNames    =    _cfgUnqNames;    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	21	None	replace
62	[BUG]  [BUGGY]  disable(f,  _maximumNonEscapedChar);  [CE]  no  suitable  method  found  for  disable(Feature,int)  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  disable(f,  _maximumNonEscapedChar);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	disable(f,  _maximumNonEscapedChar);	          disable(f);    	non-compiled	[CE]  no  suitable  method  found  for  disable(Feature,int)	9	None	replace
63	[BUG]  [BUGGY]  _cfgUnqNames  =  f.getMask()  +  1;  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  f.getMask()  +  1;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  f.getMask()  +  1;	  _cfgUnqNames    =    f.getMask();    	non-compiled	[CE]  incompatible  types	41	None	replace
64	[BUG]  [BUGGY]  _cfgUnqNames  =  f.getMask()  &  f.getMask();  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  f.getMask()  &  f.getMask();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  f.getMask()  &  f.getMask();	  _cfgUnqNames    =    f.getMask();    	non-compiled	[CE]  incompatible  types	41	None	replace
65	[BUG]  [BUGGY]  _cfgUnqNames  =  f.getMask()  &  Feature.QUOTE_FIELD_NAMES;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  f.getMask()  &  Feature.QUOTE_FIELD_NAMES;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  f.getMask()  &  Feature.QUOTE_FIELD_NAMES;	  _cfgUnqNames    =    f.getMask();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	41	None	replace
66	[BUG]  [BUGGY]  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null)))  {  _cfgUnqNames  =  true;  }  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null)))  {  _cfgUnqNames  =  true;  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null)))  {  _cfgUnqNames  =  true;  }	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    ==    null)||(_cfgUnqNames!=    null)))    {    _cfgUnqNames    =    true;    	non-compiled	[CE]  not  a  statement	25	None	replace
67	[BUG]  [BUGGY]  ||(_cfgUnqNames  ==  null)))  {  _cfgUnqNames  =  true;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||(_cfgUnqNames  ==  null)))  {  _cfgUnqNames  =  true;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||(_cfgUnqNames  ==  null)))  {  _cfgUnqNames  =  true;	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    ==    null)||(_cfgUnqNames!=    null)))    {    _cfgUnqNames    =    true;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
68	[BUG]  [BUGGY]  ||(_cfgUnqNames!=  null)))  {  _cfgUnqNames  =  true;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||(_cfgUnqNames!=  null)))  {  _cfgUnqNames  =  true;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||(_cfgUnqNames!=  null)))  {  _cfgUnqNames  =  true;	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    ==    null)||(_cfgUnqNames!=    null)))    {    _cfgUnqNames    =    true;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
69	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          this.enable(f);  this.enable(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	add	                this.enable(f);    this.enable(f);	  	compilable	  [FE]  StackOverflowError  	3	1	add
70	[BUG]  [BUGGY]          this.enable(f);  this.enable(f);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          this.enable(f);  this.enable(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                this.enable(f);    this.enable(f);	  	compilable	  [FE]  StackOverflowError  	3	1	add
71	[BUG]  [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  System.arraycopy(_maximumNonEscapedChar,  0,  this._maximumNonEscapedChar,  _maximumNonEscapedChar  [CE]  ')'  expected  [FE]      StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  System.arraycopy(_maximumNonEscapedChar,  0,  this._maximumNonEscapedChar,  _maximumNonEscapedChar  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                this.enable(f);    if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  System.arraycopy(_maximumNonEscapedChar,  0,  this._maximumNonEscapedChar,  _maximumNonEscapedChar	  	non-compiled	[CE]  ')'  expected	3	None	add
72	[BUG]  [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  System.arraycopy(_maximumNonEscapedChar,  0,  this._maximumNonEscapedChar,  _maximumNonEscapedChar);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  System.arraycopy(_maximumNonEscapedChar,  0,  this._maximumNonEscapedChar,  _maximumNonEscapedChar);  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                this.enable(f);    if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  System.arraycopy(_maximumNonEscapedChar,  0,  this._maximumNonEscapedChar,  _maximumNonEscapedChar);  }	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	3	None	add
73	[BUG]  [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  System.arraycopy(_maximumNonEscapedChar,  _maximumNonEscapedChar,  _maximumNonEscapedChar  [CE]  ')'  expected  [FE]          StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  System.arraycopy(_maximumNonEscapedChar,  _maximumNonEscapedChar,  _maximumNonEscapedChar  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                this.enable(f);    if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  System.arraycopy(_maximumNonEscapedChar,  _maximumNonEscapedChar,  _maximumNonEscapedChar	  	non-compiled	[CE]  ')'  expected	3	None	add
74	[BUG]  [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  System.arraycopy(_maximumNonEscapedChar,  _maximumNonEscapedChar,  _maximumNonEscapedChar);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  System.arraycopy(_maximumNonEscapedChar,  _maximumNonEscapedChar,  _maximumNonEscapedChar);  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                this.enable(f);    if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  System.arraycopy(_maximumNonEscapedChar,  _maximumNonEscapedChar,  _maximumNonEscapedChar);  }	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	3	None	add
75	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  _cfgUnqNames  =  false;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  _cfgUnqNames  =  false;  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  _cfgUnqNames  =  false;  }	  _cfgUnqNames    =    true;    _cfgUnqNames    =    true;    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	14	None	replace
76	[BUG]  [BUGGY]  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  true;  _cfgUnqNames  =  false;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  true;  _cfgUnqNames  =  false;  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	if(_cfgUnqNames!=  null)  {  _cfgUnqNames  =  true;  _cfgUnqNames  =  false;  }	  _cfgUnqNames    =    true;    _cfgUnqNames    =    true;    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	14	None	replace
77	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  _cfgUnqNames  =  false;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  _cfgUnqNames  =  false;  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  _cfgUnqNames  =  false;  }	  _cfgUnqNames    =    true;    _cfgUnqNames    =    true;    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	14	None	replace
78	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          disable(f);  disable(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	add	                disable(f);    disable(f);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
79	[BUG]  [BUGGY]          disable(f);  disable(f);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          disable(f);  disable(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                disable(f);    disable(f);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
80	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          disable(f);  enable(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	add	                disable(f);    enable(f);	  	compilable	  [FE]  StackOverflowError  	8	1	add
81	[BUG]  [BUGGY]          disable(f);  enable(f);  [FE]  StackOverflowError  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          disable(f);  enable(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                disable(f);    enable(f);	  	compilable	  [FE]  StackOverflowError  	8	1	add
82	[BUG]  [BUGGY]          disable(f);  if(_maximumNonEscapedChar  ==  0)  {  for(Feature  f  :  _maximumNonEscapedChars)  {  disable(f);  }  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          disable(f);  if(_maximumNonEscapedChar  ==  0)  {  for(Feature  f  :  _maximumNonEscapedChars)  {  disable(f);  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                disable(f);    if(_maximumNonEscapedChar  ==  0)  {  for(Feature  f  :  _maximumNonEscapedChars)  {  disable(f);  }	  	non-compiled	[CE]  ';'  expected	8	None	add
83	[BUG]  [BUGGY]          disable(f);  if(_maximumNonEscapedChar  ==  0)  {  for(Feature  f  :  _maximumNonEscapedChar.values())  {  disable(f);  }  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          disable(f);  if(_maximumNonEscapedChar  ==  0)  {  for(Feature  f  :  _maximumNonEscapedChar.values())  {  disable(f);  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                disable(f);    if(_maximumNonEscapedChar  ==  0)  {  for(Feature  f  :  _maximumNonEscapedChar.values())  {  disable(f);  }	  	non-compiled	[CE]  ';'  expected	8	None	add
84	[BUG]  [BUGGY]          disable(f);  if(_maximumNonEscapedChar  ==  0)  {  for(Feature  f  :  _maximumNonEscapedChar.getStrings())  {  disable(f);  }  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          disable(f);  if(_maximumNonEscapedChar  ==  0)  {  for(Feature  f  :  _maximumNonEscapedChar.getStrings())  {  disable(f);  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                disable(f);    if(_maximumNonEscapedChar  ==  0)  {  for(Feature  f  :  _maximumNonEscapedChar.getStrings())  {  disable(f);  }	  	non-compiled	[CE]  ';'  expected	8	None	add
85	[BUG]  [BUGGY]  _ioContext.setCurrentName(f,  _outputEscapes.getName());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _ioContext.setCurrentName(f,  _outputEscapes.getName());  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_ioContext.setCurrentName(f,  _outputEscapes.getName());	  _ioContext.setCurrentName(f.getName());    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
86	[BUG]  [BUGGY]  _ioContext.setCurrentName(f,  _cfgUnqNames.getName());  [CE]  boolean  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _ioContext.setCurrentName(f,  _cfgUnqNames.getName());  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_ioContext.setCurrentName(f,  _cfgUnqNames.getName());	  _ioContext.setCurrentName(f.getName());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	38	None	replace
87	[BUG]  [BUGGY]  _ioContext.setCurrentName(f,  _characterEscapes.getName());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _ioContext.setCurrentName(f,  _characterEscapes.getName());  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_ioContext.setCurrentName(f,  _characterEscapes.getName());	  _ioContext.setCurrentName(f.getName());    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
88	[BUG]  [BUGGY]  ||  f  ==  JsonGenerator.Feature.QUOTE_FIELD_NAMES;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||  f  ==  JsonGenerator.Feature.QUOTE_FIELD_NAMES;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||  f  ==  JsonGenerator.Feature.QUOTE_FIELD_NAMES;	  ||    f    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
89	[BUG]  [BUGGY]  ||  f!=  null;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||  f!=  null;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||  f!=  null;	  ||    f    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
90	[BUG]  [BUGGY]  ||  f  ==  JsonGenerator.FIELD_NAME;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||  f  ==  JsonGenerator.FIELD_NAME;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||  f  ==  JsonGenerator.FIELD_NAME;	  ||    f    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
91	[BUG]  [BUGGY]  _cfgUnqNames  |=  f.getMask()  +  1;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  |=  f.getMask()  +  1;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  |=  f.getMask()  +  1;	  _cfgUnqNames    |=    f.getMask();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	18	None	replace
92	[BUG]  [BUGGY]  _cfgUnqNames  |=  f.getMask(),  _maximumNonEscapedChar;  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  |=  f.getMask(),  _maximumNonEscapedChar;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  |=  f.getMask(),  _maximumNonEscapedChar;	  _cfgUnqNames    |=    f.getMask();    	non-compiled	[CE]  ';'  expected	18	None	replace
93	[BUG]  [BUGGY]  _cfgUnqNames  |=  f.getMask()  &  Feature.QUOTE_FIELD_NAMES;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  |=  f.getMask()  &  Feature.QUOTE_FIELD_NAMES;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  |=  f.getMask()  &  Feature.QUOTE_FIELD_NAMES;	  _cfgUnqNames    |=    f.getMask();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	18	None	replace
94	[BUG]  [BUGGY]  _cfgUnqNames  =  f._cfgUnqNames;  [CE]  cannot  find  symbol  _cfgUnqNames  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  f._cfgUnqNames;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  f._cfgUnqNames;	  _cfgUnqNames    =    f;    	non-compiled	[CE]  cannot  find  symbol  _cfgUnqNames	19	None	replace
95	[BUG]  [BUGGY]  _cfgUnqNames  =  f._cfgUnq();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  f._cfgUnq();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  f._cfgUnq();	  _cfgUnqNames    =    f;    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
96	[BUG]  [BUGGY]  _cfgUnqNames  =  f,  _maximumNonEscapedChar;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  f,  _maximumNonEscapedChar;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  f,  _maximumNonEscapedChar;	  _cfgUnqNames    =    f;    	non-compiled	[CE]  ';'  expected	19	None	replace
97	[BUG]  [BUGGY]  ||(_cfgUnqNames  ==  null)&&  _cfgUnqNames.length  >  0))  {  _cfgUnqNames  =  true;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||(_cfgUnqNames  ==  null)&&  _cfgUnqNames.length  >  0))  {  _cfgUnqNames  =  true;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||(_cfgUnqNames  ==  null)&&  _cfgUnqNames.length  >  0))  {  _cfgUnqNames  =  true;	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    ==    null)&&    _cfgUnqNames.length    >    0))    {    _cfgUnqNames    =    true;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
98	[BUG]  [BUGGY]  ((  _cfgUnqNames  ==  null)&&  _cfgUnqNames.length  >  0))  {  _cfgUnqNames  =  true;  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ((  _cfgUnqNames  ==  null)&&  _cfgUnqNames.length  >  0))  {  _cfgUnqNames  =  true;  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	((  _cfgUnqNames  ==  null)&&  _cfgUnqNames.length  >  0))  {  _cfgUnqNames  =  true;  }	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    ==    null)&&    _cfgUnqNames.length    >    0))    {    _cfgUnqNames    =    true;    	non-compiled	[CE]  not  a  statement	27	None	replace
99	[BUG]  [BUGGY]  ||(_cfgUnqNames  ==  null)&&  _cfgUnqNames.length  >  0))  {  _cfgUnqNames  =  true;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||(_cfgUnqNames  ==  null)&&  _cfgUnqNames.length  >  0))  {  _cfgUnqNames  =  true;  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||(_cfgUnqNames  ==  null)&&  _cfgUnqNames.length  >  0))  {  _cfgUnqNames  =  true;  }	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    ==    null)&&    _cfgUnqNames.length    >    0))    {    _cfgUnqNames    =    true;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
100	[BUG]  [BUGGY]  _ioContext  =  f.getCurrentNodePointer();  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _ioContext  =  f.getCurrentNodePointer();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_ioContext  =  f.getCurrentNodePointer();	  _ioContext    =    _ioContext.getCurrentNodePointer();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	39	None	replace
101	[BUG]  [BUGGY]  _ioContext  =  ctxt.getCurrentNodePointer();  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _ioContext  =  ctxt.getCurrentNodePointer();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_ioContext  =  ctxt.getCurrentNodePointer();	  _ioContext    =    _ioContext.getCurrentNodePointer();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	39	None	replace
102	[BUG]  [BUGGY]  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null)));  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null)));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null)));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    ==    null)||(_cfgUnqNames!=    null)));    	non-compiled	[CE]  not  a  statement	28	None	replace
103	[BUG]  [BUGGY]  ((  _cfgUnqNames  ==  null)||(_cfgUnqNames!=  null)));  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ((  _cfgUnqNames  ==  null)||(_cfgUnqNames!=  null)));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	((  _cfgUnqNames  ==  null)||(_cfgUnqNames!=  null)));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    ==    null)||(_cfgUnqNames!=    null)));    	non-compiled	[CE]  not  a  statement	28	None	replace
104	[BUG]  [BUGGY]  _cfgUnqNames  =  false;  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null)));  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  false;  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null)));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  false;  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null)));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    ==    null)||(_cfgUnqNames!=    null)));    	non-compiled	[CE]  not  a  statement	28	None	replace
105	[BUG]  [BUGGY]  _cfgUnqNames  =  true;  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null)));  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  true;  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null)));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  true;  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null)));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    ==    null)||(_cfgUnqNames!=    null)));    	non-compiled	[CE]  not  a  statement	28	None	replace
106	[BUG]  [BUGGY]  this._maximumNonEscapedChar  =  f.getMinimumNonEscapedChar();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  this._maximumNonEscapedChar  =  f.getMinimumNonEscapedChar();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	this._maximumNonEscapedChar  =  f.getMinimumNonEscapedChar();	  this._maximumNonEscapedChar    =    f.getMaximumNonEscapedChar();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
107	[BUG]  [BUGGY]  this._minimumNonEscapedChar  =  f.getMaximumNonEscapedChar();  [CE]  cannot  find  symbol  _minimumNonEscapedChar  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  this._minimumNonEscapedChar  =  f.getMaximumNonEscapedChar();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	this._minimumNonEscapedChar  =  f.getMaximumNonEscapedChar();	  this._maximumNonEscapedChar    =    f.getMaximumNonEscapedChar();    	non-compiled	[CE]  cannot  find  symbol  _minimumNonEscapedChar	36	None	replace
108	[BUG]  [BUGGY]  _cfgUnqNames  =  _cfgUnqNames.getDeclaredValueSeparator();  [CE]  boolean  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  _cfgUnqNames.getDeclaredValueSeparator();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  _cfgUnqNames.getDeclaredValueSeparator();	  _cfgUnqNames    =    f.getDeclaredValueSeparator();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	42	None	replace
109	[BUG]  [BUGGY]  _cfgUnqNames  =  f,  _rootValueSeparator.getDeclaredValueSeparator();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  f,  _rootValueSeparator.getDeclaredValueSeparator();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  f,  _rootValueSeparator.getDeclaredValueSeparator();	  _cfgUnqNames    =    f.getDeclaredValueSeparator();    	non-compiled	[CE]  ';'  expected	42	None	replace
110	[BUG]  [BUGGY]  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames!=  null));  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames!=  null));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	((  _cfgUnqNames!=  null)&&(_cfgUnqNames!=  null));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    >>    null)||(_cfgUnqNames!=    null));    	non-compiled	[CE]  not  a  statement	34	None	replace
111	[BUG]  [BUGGY]  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null));  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    >>    null)||(_cfgUnqNames!=    null));    	non-compiled	[CE]  not  a  statement	34	None	replace
112	[BUG]  [BUGGY]  ((  _cfgUnqNames!=  null)||(_cfgUnqNames!=  null));  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ((  _cfgUnqNames!=  null)||(_cfgUnqNames!=  null));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	((  _cfgUnqNames!=  null)||(_cfgUnqNames!=  null));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    >>    null)||(_cfgUnqNames!=    null));    	non-compiled	[CE]  not  a  statement	34	None	replace
113	[BUG]  [BUGGY]  _cfgUnqNames  =  false;  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames!=  null));  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  false;  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames!=  null));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  false;  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames!=  null));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    >>    null)||(_cfgUnqNames!=    null));    	non-compiled	[CE]  not  a  statement	34	None	replace
114	[BUG]  [BUGGY]  ||  f  ==  Feature.QUOTE_FIELD_NAMES;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||  f  ==  Feature.QUOTE_FIELD_NAMES;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||  f  ==  Feature.QUOTE_FIELD_NAMES;	  ||    _cfgUnqNames    ==    0;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
115	[BUG]  [BUGGY]  ||  _cfgUnqNames  ==  0L;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||  _cfgUnqNames  ==  0L;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||  _cfgUnqNames  ==  0L;	  ||    _cfgUnqNames    ==    0;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
116	[BUG]  [BUGGY]  ||  f  ==  Feature.QUOTE_FIELD_NAME;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||  f  ==  Feature.QUOTE_FIELD_NAME;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||  f  ==  Feature.QUOTE_FIELD_NAME;	  ||    _cfgUnqNames    ==    0;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
117	[BUG]  [BUGGY]  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames  ==  null)));  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames  ==  null)));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	((  _cfgUnqNames!=  null)&&(_cfgUnqNames  ==  null)));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    >>    null)||(_cfgUnqNames    ==    null)));    	non-compiled	[CE]  not  a  statement	35	None	replace
118	[BUG]  [BUGGY]  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames  ==  null)));  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames  ==  null)));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	((  _cfgUnqNames  ==  null)&&(_cfgUnqNames  ==  null)));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    >>    null)||(_cfgUnqNames    ==    null)));    	non-compiled	[CE]  not  a  statement	35	None	replace
119	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  this.enable(f);  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	add	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  this.enable(f);  }	          this.enable(f);    	compilable	  [FE]  StackOverflowError  	4	1	replace
120	[BUG]  [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  this.enable(f);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  this.enable(f);  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	if(f  ==  Feature.QUOTE_FIELD_NAMES)  {  this.enable(f);  }	          this.enable(f);    	compilable	  [FE]  StackOverflowError  	4	1	replace
121	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	add	if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }	          this.enable(f);    	compilable	  [FE]  StackOverflowError  	4	1	replace
122	[BUG]  [BUGGY]  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }	          this.enable(f);    	compilable	  [FE]  StackOverflowError  	4	1	replace
123	[BUG]  [BUGGY]  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames!=  null)));  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames!=  null)));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	((  _cfgUnqNames!=  null)&&(_cfgUnqNames!=  null)));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    >>    null)||(_cfgUnqNames!=    null)));    	non-compiled	[CE]  not  a  statement	33	None	replace
124	[BUG]  [BUGGY]  ((  _cfgUnqNames!=  null)||(_cfgUnqNames!=  null)));  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ((  _cfgUnqNames!=  null)||(_cfgUnqNames!=  null)));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	((  _cfgUnqNames!=  null)||(_cfgUnqNames!=  null)));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    >>    null)||(_cfgUnqNames!=    null)));    	non-compiled	[CE]  not  a  statement	33	None	replace
125	[BUG]  [BUGGY]  ||(_cfgUnqNames!=  null  &&!_cfgUnqNames.contains(f)));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||(_cfgUnqNames!=  null  &&!_cfgUnqNames.contains(f)));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||(_cfgUnqNames!=  null  &&!_cfgUnqNames.contains(f)));	  ||    _cfgUnqNames!=    null;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
126	[BUG]  [BUGGY]  _cfgUnqNames  =  false;  ||  _cfgUnqNames  ==  null;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  false;  ||  _cfgUnqNames  ==  null;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  false;  ||  _cfgUnqNames  ==  null;	  _cfgUnqNames    =    true;    ||    _cfgUnqNames    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
127	[BUG]  [BUGGY]  _cfgUnqNames  =  false;  ||  _cfgUnqNames!=  null;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  false;  ||  _cfgUnqNames!=  null;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  false;  ||  _cfgUnqNames!=  null;	  _cfgUnqNames    =    true;    ||    _cfgUnqNames    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
128	[BUG]  [BUGGY]  ||(_cfgUnqNames  ==  null)&&  _cfgUnqNames.contains(f)))  {  _cfgUnqNames  =  true;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||(_cfgUnqNames  ==  null)&&  _cfgUnqNames.contains(f)))  {  _cfgUnqNames  =  true;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||(_cfgUnqNames  ==  null)&&  _cfgUnqNames.contains(f)))  {  _cfgUnqNames  =  true;	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    ==    null)&&    _cfgUnqNames.contains(f)))    {    _cfgUnqNames    =    true;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
129	[BUG]  [BUGGY]  ||(_cfgUnqNames  ==  null)&&  _cfgUnqNames.contains(f))  {  _cfgUnqNames  =  true;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||(_cfgUnqNames  ==  null)&&  _cfgUnqNames.contains(f))  {  _cfgUnqNames  =  true;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||(_cfgUnqNames  ==  null)&&  _cfgUnqNames.contains(f))  {  _cfgUnqNames  =  true;	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    ==    null)&&    _cfgUnqNames.contains(f)))    {    _cfgUnqNames    =    true;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
130	[BUG]  [BUGGY]  ||(_cfgUnqNames  ==  null  &&  _cfgUnqNames.contains(f)))  {  _cfgUnqNames  =  true;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||(_cfgUnqNames  ==  null  &&  _cfgUnqNames.contains(f)))  {  _cfgUnqNames  =  true;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||(_cfgUnqNames  ==  null  &&  _cfgUnqNames.contains(f)))  {  _cfgUnqNames  =  true;	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    ==    null)&&    _cfgUnqNames.contains(f)))    {    _cfgUnqNames    =    true;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
131	[BUG]  [BUGGY]  _cfgUnqNames  |=  f.getMask()  *  2;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  |=  f.getMask()  *  2;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  |=  f.getMask()  *  2;	  _cfgUnqNames    |=    f.getMask();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	18	None	replace
132	[BUG]  [BUGGY]  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null)))  {  _cfgUnqNames  =  true;  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null)))  {  _cfgUnqNames  =  true;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null)))  {  _cfgUnqNames  =  true;	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    ==    null)||(_cfgUnqNames!=    null)))    {    _cfgUnqNames    =    true;    	non-compiled	[CE]  not  a  statement	25	None	replace
133	[BUG]  [BUGGY]  ((  _cfgUnqNames  ==  null)||(_cfgUnqNames!=  null)))  {  _cfgUnqNames  =  true;  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ((  _cfgUnqNames  ==  null)||(_cfgUnqNames!=  null)))  {  _cfgUnqNames  =  true;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	((  _cfgUnqNames  ==  null)||(_cfgUnqNames!=  null)))  {  _cfgUnqNames  =  true;	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    ==    null)||(_cfgUnqNames!=    null)))    {    _cfgUnqNames    =    true;    	non-compiled	[CE]  not  a  statement	25	None	replace
134	[BUG]  [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  0;  System.arraycopy(_maximumNonEscapedChar,  0,  this._maximumNonEscapedChar  [CE]  ')'  expected  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  0;  System.arraycopy(_maximumNonEscapedChar,  0,  this._maximumNonEscapedChar  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                this.enable(f);    if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  0;  System.arraycopy(_maximumNonEscapedChar,  0,  this._maximumNonEscapedChar	  	non-compiled	[CE]  ')'  expected	3	None	add
135	[BUG]  [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  0;  System.arraycopy(_maximumNonEscapedChar,  0,  this._maximumNonEscapedChar,  [CE]  ')'  expected  [FE]      StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  0;  System.arraycopy(_maximumNonEscapedChar,  0,  this._maximumNonEscapedChar,  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                this.enable(f);    if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  0;  System.arraycopy(_maximumNonEscapedChar,  0,  this._maximumNonEscapedChar,	  	non-compiled	[CE]  ')'  expected	3	None	add
136	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	add	                this.enable(f);    if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  StackOverflowError  	3	1	add
137	[BUG]  [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  0;  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  0;  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                this.enable(f);    if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  0;  }	  	compilable	  [FE]  StackOverflowError  	3	1	add
138	[BUG]  [BUGGY]  _cfgUnqNames  =  f._cfgUnqNames.getDeclaredValueSeparator();  [CE]  cannot  find  symbol  _cfgUnqNames  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  f._cfgUnqNames.getDeclaredValueSeparator();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  f._cfgUnqNames.getDeclaredValueSeparator();	  _cfgUnqNames    =    f.getDeclaredValueSeparator();    	non-compiled	[CE]  cannot  find  symbol  _cfgUnqNames	42	None	replace
139	[BUG]  [BUGGY]  _cfgUnqNames  =  _config.getDeclaredValueSeparator();  [CE]  cannot  find  symbol  _config  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  _config.getDeclaredValueSeparator();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  _config.getDeclaredValueSeparator();	  _cfgUnqNames    =    f.getDeclaredValueSeparator();    	non-compiled	[CE]  cannot  find  symbol  _config	42	None	replace
140	[BUG]  [BUGGY]  _cfgUnqNames  =  new  String[_rootValueSeparator];  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  new  String[_rootValueSeparator];  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  new  String[_rootValueSeparator];	  _cfgUnqNames    =    new    String[_maximumNonEscapedCharIndexes];    	non-compiled	[CE]  incompatible  types	30	None	replace
141	[BUG]  [BUGGY]  _cfgUnqNames  =  new  String[_outputEscapes];  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  new  String[_outputEscapes];  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  new  String[_outputEscapes];	  _cfgUnqNames    =    new    String[_maximumNonEscapedCharIndexes];    	non-compiled	[CE]  incompatible  types	30	None	replace
142	[BUG]  [BUGGY]  _cfgUnqNames  =(_cfgUnqNames  ==  null)?  _cfgUnqNames  :  _cfgUnqNames;  [CE]  incomparable  types:  boolean  and  <null>  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =(_cfgUnqNames  ==  null)?  _cfgUnqNames  :  _cfgUnqNames;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =(_cfgUnqNames  ==  null)?  _cfgUnqNames  :  _cfgUnqNames;	  _cfgUnqNames    =    _cfgUnqNames;    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	21	None	replace
143	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  _cfgUnqNames  =  true;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  _cfgUnqNames  =  true;  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  _cfgUnqNames  =  true;  }	  _cfgUnqNames    =    true;    _cfgUnqNames    =    true;    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	14	None	replace
144	[BUG]  [BUGGY]          enable(f);  _reportError( "Current  context  not  an  ARRAY  but "+f.getMessage());  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          enable(f);  _reportError( "Current  context  not  an  ARRAY  but "+f.getMessage());  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                enable(f);    _reportError( "Current  context  not  an  ARRAY  but "+f.getMessage());	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
145	[BUG]  [BUGGY]          enable(f);  _reportError( "Current  context  not  an  IllegalArgumentException ");  [CE]  unreported  exception  JsonGenerationException;  must  be  caught  or  declared  to  be  thrown  [FE]      StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          enable(f);  _reportError( "Current  context  not  an  IllegalArgumentException ");  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                enable(f);    _reportError( "Current  context  not  an  IllegalArgumentException ");	  	non-compiled	[CE]  unreported  exception  JsonGenerationException;  must  be  caught  or  declared  to  be  thrown	1	None	add
146	[BUG]  [BUGGY]          enable(f);  _reportError( "Unable  to  parse: "+f.getMessage());  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          enable(f);  _reportError( "Unable  to  parse: "+f.getMessage());  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                enable(f);    _reportError( "Unable  to  parse: "+f.getMessage());	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
147	[BUG]  [BUGGY]  _cfgUnqNames  =  f._cfgUnqNames();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  f._cfgUnqNames();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  f._cfgUnqNames();	  _cfgUnqNames    =    f.getCfgUnqNames();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
148	[BUG]  [BUGGY]  _throwUnquotedSpace(f);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _throwUnquotedSpace(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_throwUnquotedSpace(f);	          _reportUnexpectedChar(f);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
149	[BUG]  [BUGGY]  _reportUndetectableSource(f,  _rootValueSeparator);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _reportUndetectableSource(f,  _rootValueSeparator);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_reportUndetectableSource(f,  _rootValueSeparator);	  _reportUndetectableSource(f);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
150	[BUG]  [BUGGY]  _throwUndetectableSource(f);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _throwUndetectableSource(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_throwUndetectableSource(f);	  _reportUndetectableSource(f);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
151	[BUG]  [BUGGY]  _cfgUnqNames  =  false;  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames!=  null)));  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  false;  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames!=  null)));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  false;  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames!=  null)));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    >>    null)||(_cfgUnqNames!=    null)));    	non-compiled	[CE]  not  a  statement	33	None	replace
152	[BUG]  [BUGGY]  _cfgUnqNames  =  false;  ((  _cfgUnqNames!=  null)||(_cfgUnqNames!=  null)));  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  false;  ((  _cfgUnqNames!=  null)||(_cfgUnqNames!=  null)));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  false;  ((  _cfgUnqNames!=  null)||(_cfgUnqNames!=  null)));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    >>    null)||(_cfgUnqNames!=    null)));    	non-compiled	[CE]  not  a  statement	33	None	replace
153	[BUG]  [BUGGY]  _cfgUnqNames  =  true;  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames!=  null)));  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  true;  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames!=  null)));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  true;  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames!=  null)));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    >>    null)||(_cfgUnqNames!=    null)));    	non-compiled	[CE]  not  a  statement	33	None	replace
154	[BUG]  [BUGGY]  JsonContext  _ioContext  =  _ioContext.createChildObjectContext(f);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  JsonContext  _ioContext  =  _ioContext.createChildObjectContext(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	JsonContext  _ioContext  =  _ioContext.createChildObjectContext(f);	          _ioContext    =    _ioContext.createChildObjectContext(f);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
155	[BUG]  [BUGGY]  _cfgUnqNames  =  _cfgUnqNames;  ||  _cfgUnqNames  ==  null)  {  _cfgUnqNames  =  _cfgUnqNames;  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  _cfgUnqNames;  ||  _cfgUnqNames  ==  null)  {  _cfgUnqNames  =  _cfgUnqNames;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames    =    _cfgUnqNames;    ||  _cfgUnqNames  ==  null)  {  _cfgUnqNames  =  _cfgUnqNames;	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
156	[BUG]  [BUGGY]  _cfgUnqNames  =  _cfgUnqNames;  ||  _cfgUnqNames  ==  null)  {  _cfgUnqNames  =  _cfgUnqNames;  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  _cfgUnqNames;  ||  _cfgUnqNames  ==  null)  {  _cfgUnqNames  =  _cfgUnqNames;  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames    =    _cfgUnqNames;    ||  _cfgUnqNames  ==  null)  {  _cfgUnqNames  =  _cfgUnqNames;  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
157	[BUG]  [BUGGY]  ((  _cfgUnqNames  ==  null)&&  _cfgUnqNames.contains(f)))  {  _cfgUnqNames  =  true;  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ((  _cfgUnqNames  ==  null)&&  _cfgUnqNames.contains(f)))  {  _cfgUnqNames  =  true;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	((  _cfgUnqNames  ==  null)&&  _cfgUnqNames.contains(f)))  {  _cfgUnqNames  =  true;	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    ==    null)&&    _cfgUnqNames.contains(f)))    {    _cfgUnqNames    =    true;    	non-compiled	[CE]  not  a  statement	26	None	replace
158	[BUG]  [BUGGY]  ((  _cfgUnqNames  ==  null)&&  _cfgUnqNames.contains(f)))  {  _cfgUnqNames  =  true;  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ((  _cfgUnqNames  ==  null)&&  _cfgUnqNames.contains(f)))  {  _cfgUnqNames  =  true;  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	((  _cfgUnqNames  ==  null)&&  _cfgUnqNames.contains(f)))  {  _cfgUnqNames  =  true;  }	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    ==    null)&&    _cfgUnqNames.contains(f)))    {    _cfgUnqNames    =    true;    	non-compiled	[CE]  not  a  statement	26	None	replace
159	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_ioContext.hasOperation(f))  {  _reportUnsupportedOperation();  }  [CE]  cannot  find  symbol  [FE]    UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          _reportUnsupportedOperation();  if(_ioContext.hasOperation(f))  {  _reportUnsupportedOperation();  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                _reportUnsupportedOperation();    if(_ioContext.hasOperation(f))  {  _reportUnsupportedOperation();  }	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
160	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_ioContext.hasFeature(f))  {  _reportUnsupportedOperation();  }  [CE]  cannot  find  symbol  [FE]      UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          _reportUnsupportedOperation();  if(_ioContext.hasFeature(f))  {  _reportUnsupportedOperation();  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                _reportUnsupportedOperation();    if(_ioContext.hasFeature(f))  {  _reportUnsupportedOperation();  }	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
161	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_ioContext.hasOperationDeclaration())  {  _reportUnsupportedOperation();  }  [CE]  cannot  find  symbol  [FE]        UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          _reportUnsupportedOperation();  if(_ioContext.hasOperationDeclaration())  {  _reportUnsupportedOperation();  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                _reportUnsupportedOperation();    if(_ioContext.hasOperationDeclaration())  {  _reportUnsupportedOperation();  }	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
162	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_ioContext.hasOperation(this))  {  _reportUnsupportedOperation();  }  [CE]  cannot  find  symbol  [FE]          UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          _reportUnsupportedOperation();  if(_ioContext.hasOperation(this))  {  _reportUnsupportedOperation();  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                _reportUnsupportedOperation();    if(_ioContext.hasOperation(this))  {  _reportUnsupportedOperation();  }	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
163	[BUG]  [BUGGY]  _handleUnsupportedOperation();  [CE]  cannot  find  symbol  [FE]    UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _handleUnsupportedOperation();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_handleUnsupportedOperation();	          _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
164	[BUG]  [BUGGY]  this._maximumNonEscapedChar  =  f.getMaximumNonEscapedChar()  +  1;  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  this._maximumNonEscapedChar  =  f.getMaximumNonEscapedChar()  +  1;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	this._maximumNonEscapedChar  =  f.getMaximumNonEscapedChar()  +  1;	  this._maximumNonEscapedChar    =    f.getMaximumNonEscapedChar();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
165	[BUG]  [BUGGY]  _cfgUnqNames  =  false;  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames  ==  null)));  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  false;  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames  ==  null)));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  false;  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames  ==  null)));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    >>    null)||(_cfgUnqNames    ==    null)));    	non-compiled	[CE]  not  a  statement	35	None	replace
166	[BUG]  [BUGGY]  _cfgUnqNames  =  true;  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames  ==  null)));  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  true;  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames  ==  null)));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  true;  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames  ==  null)));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    >>    null)||(_cfgUnqNames    ==    null)));    	non-compiled	[CE]  not  a  statement	35	None	replace
167	[BUG]  [BUGGY]  _cfgUnqNames  =  false;  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames  ==  null)));  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  false;  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames  ==  null)));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  false;  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames  ==  null)));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    >>    null)||(_cfgUnqNames    ==    null)));    	non-compiled	[CE]  not  a  statement	35	None	replace
168	[BUG]  [BUGGY]  _cfgUnqNames  =  false;  ((  _cfgUnqNames!=  null)||(_cfgUnqNames  ==  null)));  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  false;  ((  _cfgUnqNames!=  null)||(_cfgUnqNames  ==  null)));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  false;  ((  _cfgUnqNames!=  null)||(_cfgUnqNames  ==  null)));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    >>    null)||(_cfgUnqNames    ==    null)));    	non-compiled	[CE]  not  a  statement	35	None	replace
169	[BUG]  [BUGGY]  ||  f  ==  0;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||  f  ==  0;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||  f  ==  0;	  ||    _cfgUnqNames    ==    0;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
170	[BUG]  [BUGGY]  _cfgUnqNames  =  false;  ((  _cfgUnqNames!=  null)||(_cfgUnqNames!=  null));  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  false;  ((  _cfgUnqNames!=  null)||(_cfgUnqNames!=  null));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  false;  ((  _cfgUnqNames!=  null)||(_cfgUnqNames!=  null));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    >>    null)||(_cfgUnqNames!=    null));    	non-compiled	[CE]  not  a  statement	34	None	replace
171	[BUG]  [BUGGY]  _cfgUnqNames  =  true;  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null));  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  true;  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  true;  ((  _cfgUnqNames  ==  null)&&(_cfgUnqNames!=  null));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    >>    null)||(_cfgUnqNames!=    null));    	non-compiled	[CE]  not  a  statement	34	None	replace
172	[BUG]  [BUGGY]  _cfgUnqNames  =  true;  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames!=  null));  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  true;  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames!=  null));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  true;  ((  _cfgUnqNames!=  null)&&(_cfgUnqNames!=  null));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    >>    null)||(_cfgUnqNames!=    null));    	non-compiled	[CE]  not  a  statement	34	None	replace
173	[BUG]  [BUGGY]  ((  _cfgUnqNames  ==  null)&&  _cfgUnqNames.length  >  0))  {  _cfgUnqNames  =  true;  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ((  _cfgUnqNames  ==  null)&&  _cfgUnqNames.length  >  0))  {  _cfgUnqNames  =  true;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	((  _cfgUnqNames  ==  null)&&  _cfgUnqNames.length  >  0))  {  _cfgUnqNames  =  true;	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    ==    null)&&    _cfgUnqNames.length    >    0))    {    _cfgUnqNames    =    true;    	non-compiled	[CE]  not  a  statement	27	None	replace
174	[BUG]  [BUGGY]  this.enable(f,  _maximumNonEscapedChar);  [CE]  no  suitable  method  found  for  enable(Feature,int)  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  this.enable(f,  _maximumNonEscapedChar);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	this.enable(f,  _maximumNonEscapedChar);	          this.enable(f);    	non-compiled	[CE]  no  suitable  method  found  for  enable(Feature,int)	4	None	replace
175	[BUG]  [BUGGY]  this.setMask(f);  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  this.setMask(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	this.setMask(f);	          this.enable(f);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
176	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          disable(f);  _reportUnsupportedOperation();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	add	                disable(f);    _reportUnsupportedOperation();	  	compilable	  [FE]  UnsupportedOperationException  	8	1	add
177	[BUG]  [BUGGY]          disable(f);  _reportUnsupportedOperation();  [FE]  UnsupportedOperationException  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          disable(f);  _reportUnsupportedOperation();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                disable(f);    _reportUnsupportedOperation();	  	compilable	  [FE]  UnsupportedOperationException  	8	1	add
178	[BUG]  [BUGGY]          disable(f);  _reportUndetectableSource(f);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          disable(f);  _reportUndetectableSource(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                disable(f);    _reportUndetectableSource(f);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
179	[BUG]  [BUGGY]          disable(f);  _detectBooleanProperty(f);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          disable(f);  _detectBooleanProperty(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                disable(f);    _detectBooleanProperty(f);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
180	[BUG]  [BUGGY]  _cfgUnqNames    =    true;    _cfgUnqNames  =  true;  CharacterEscapes  _cfgUnqNames  =  true;  _cfgUnqNames  =  true;  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames    =    true;    _cfgUnqNames  =  true;  CharacterEscapes  _cfgUnqNames  =  true;  _cfgUnqNames  =  true;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames        =        true;        _cfgUnqNames    =    true;    CharacterEscapes  _cfgUnqNames  =  true;  _cfgUnqNames  =  true;	  	non-compiled	[CE]  incompatible  types	13	None	add
181	[BUG]  [BUGGY]  JsonContext  _ioContext  =  _ioContext.createChildObjectContext(-1,  -1);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  JsonContext  _ioContext  =  _ioContext.createChildObjectContext(-1,  -1);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	JsonContext  _ioContext  =  _ioContext.createChildObjectContext(-1,  -1);	  _ioContext    =    _ioContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
182	[BUG]  [BUGGY]  _cfgUnqNames  =  new  String[_maximumNonEscapedChar  +  3];  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  new  String[_maximumNonEscapedChar  +  3];  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  new  String[_maximumNonEscapedChar  +  3];	  _cfgUnqNames    =    new    String[_maximumNonEscapedChar];    	non-compiled	[CE]  incompatible  types	29	None	replace
183	[BUG]  [BUGGY]  _cfgUnqNames  =  false;  ((  _cfgUnqNames  ==  null)||(_cfgUnqNames!=  null)));  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  false;  ((  _cfgUnqNames  ==  null)||(_cfgUnqNames!=  null)));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  false;  ((  _cfgUnqNames  ==  null)||(_cfgUnqNames!=  null)));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    ==    null)||(_cfgUnqNames!=    null)));    	non-compiled	[CE]  not  a  statement	28	None	replace
184	[BUG]  [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  ||  _cfgUnqNames  ==  false;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  ||  _cfgUnqNames  ==  false;  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  ||  _cfgUnqNames  ==  false;  }	  _cfgUnqNames    =    true;    ||    _cfgUnqNames    ==    false;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
185	[BUG]  [BUGGY]  _cfgUnqNames  =  null;  ||  _cfgUnqNames  ==  false;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  null;  ||  _cfgUnqNames  ==  false;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  null;  ||  _cfgUnqNames  ==  false;	  _cfgUnqNames    =    true;    ||    _cfgUnqNames    ==    false;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
186	[BUG]  [BUGGY]  ||  f  ==  JsonNull.createJsonNull();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ||  f  ==  JsonNull.createJsonNull();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	||  f  ==  JsonNull.createJsonNull();	  ||    f    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
187	[BUG]  [BUGGY]  _ioContext.setCurrentName(f,  _config.getName());  [CE]  cannot  find  symbol  _config  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _ioContext.setCurrentName(f,  _config.getName());  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_ioContext.setCurrentName(f,  _config.getName());	  _ioContext.setCurrentName(f.getName());    	non-compiled	[CE]  cannot  find  symbol  _config	38	None	replace
188	[BUG]  [BUGGY]          disable(f);  _ioContext.setCurrentName(f.getName());  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          disable(f);  _ioContext.setCurrentName(f.getName());  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                disable(f);    _ioContext.setCurrentName(f.getName());	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
189	[BUG]  [BUGGY]          disable(f);  _ioContext.setCurrentName(f);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          disable(f);  _ioContext.setCurrentName(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                disable(f);    _ioContext.setCurrentName(f);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
190	[BUG]  [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  f.intValue();  }  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  f.intValue();  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                this.enable(f);    if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  f.intValue();  }	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
191	[BUG]  [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  f.intValue();  [CE]  ';'  expected  [FE]      StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  f.intValue();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                this.enable(f);    if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  f.intValue();	  	non-compiled	[CE]  ';'  expected	3	None	add
192	[BUG]  [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  f.intValue();  return  JsonGeneratorImpl  [CE]  ';'  expected  [FE]        StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  f.intValue();  return  JsonGeneratorImpl  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                this.enable(f);    if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  f.intValue();  return  JsonGeneratorImpl	  	non-compiled	[CE]  ';'  expected	3	None	add
193	[BUG]  [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  f.intValue();  return  JsonGeneratorImpl.  [CE]  ';'  expected  [FE]          StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          this.enable(f);  if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  f.intValue();  return  JsonGeneratorImpl.  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                this.enable(f);    if(_maximumNonEscapedChar  ==  0)  {  this.enable(f);  }  else  {  _maximumNonEscapedChar  =  f.intValue();  _maximumNonEscapedChar  =  f.intValue();  return  JsonGeneratorImpl.	  	non-compiled	[CE]  ';'  expected	3	None	add
194	[BUG]  [BUGGY]  _ioContext.setCurrentName(f,  f.getName());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _ioContext.setCurrentName(f,  f.getName());  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_ioContext.setCurrentName(f,  f.getName());	  _ioContext.setCurrentName(f.getName());    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
195	[BUG]  [BUGGY]  _cfgUnqNames  =  f.getCfgUnqNames(_maximumNonEscapedChar);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  f.getCfgUnqNames(_maximumNonEscapedChar);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  f.getCfgUnqNames(_maximumNonEscapedChar);	  _cfgUnqNames    =    f.getCfgUnqNames();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
196	[BUG]  [BUGGY]  _cfgUnqNames  =  f.getCfgUnqNames(_ioContext);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  f.getCfgUnqNames(_ioContext);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  f.getCfgUnqNames(_ioContext);	  _cfgUnqNames    =    f.getCfgUnqNames();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
197	[BUG]  [BUGGY]  ((  _cfgUnqNames  ==  null)||(_cfgUnqNames  ==  null)));  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  ((  _cfgUnqNames  ==  null)||(_cfgUnqNames  ==  null)));  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	((  _cfgUnqNames  ==  null)||(_cfgUnqNames  ==  null)));	  _cfgUnqNames    =    true;    ((    _cfgUnqNames    >>    null)||(_cfgUnqNames    ==    null)));    	non-compiled	[CE]  not  a  statement	35	None	replace
198	[BUG]  [BUGGY]  _reportUnexpectedNonEscapedChar(f);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _reportUnexpectedNonEscapedChar(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_reportUnexpectedNonEscapedChar(f);	          _reportUnexpectedChar(f);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
199	[BUG]  [BUGGY]  _throwUnquotedSpace(f,  _maximumNonEscapedChar);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _throwUnquotedSpace(f,  _maximumNonEscapedChar);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_throwUnquotedSpace(f,  _maximumNonEscapedChar);	          _reportUnexpectedChar(f);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
200	[BUG]  [BUGGY]  _ioContext  =  config.getCurrentNodePointer();  [CE]  cannot  assign  a  value  to  final  variable  _ioContext  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _ioContext  =  config.getCurrentNodePointer();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_ioContext  =  config.getCurrentNodePointer();	  _ioContext    =    _ioContext.getCurrentNodePointer();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _ioContext	39	None	replace
201	[BUG]  [BUGGY]  _cfgUnqNames  |=  f.getMask()  &  f.getMask();  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  |=  f.getMask()  &  f.getMask();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  |=  f.getMask()  &  f.getMask();	  _cfgUnqNames    |=    f.getMask();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	18	None	replace
202	[BUG]  [BUGGY]  _cfgUnqNames    =    true;    _cfgUnqNames  =  true;  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  _cfgUnqNames  =  true;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]    ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames    =    true;    _cfgUnqNames  =  true;  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  _cfgUnqNames  =  true;  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames        =        true;        _cfgUnqNames    =    true;    if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  true;  _cfgUnqNames  =  true;  }	  	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	13	None	add
203	[BUG]  [BUGGY]  _cfgUnqNames    =    true;    _cfgUnqNames  =  true;  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  _cfgUnqNames  =  true;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]      ComparisonFailure    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames    =    true;    _cfgUnqNames  =  true;  if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  _cfgUnqNames  =  true;  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames        =        true;        _cfgUnqNames    =    true;    if(_cfgUnqNames  ==  null)  {  _cfgUnqNames  =  false;  _cfgUnqNames  =  true;  }	  	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	13	None	add
204	[BUG]  [BUGGY]  this.enableValue(f);  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  this.enableValue(f);  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	this.enableValue(f);	          this.enable(f);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
205	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_cfgUnqNames  ==  null)  {  _reportUnsupportedOperation();  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]    UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          _reportUnsupportedOperation();  if(_cfgUnqNames  ==  null)  {  _reportUnsupportedOperation();  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                _reportUnsupportedOperation();    if(_cfgUnqNames  ==  null)  {  _reportUnsupportedOperation();  }	  	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	5	None	add
206	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          _reportUnsupportedOperation();  if(_cfgUnqNames)  {  _reportUnsupportedOperation();  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	add	                _reportUnsupportedOperation();    if(_cfgUnqNames)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	5	1	add
207	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_cfgUnqNames)  {  _reportUnsupportedOperation();  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          _reportUnsupportedOperation();  if(_cfgUnqNames)  {  _reportUnsupportedOperation();  }  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                _reportUnsupportedOperation();    if(_cfgUnqNames)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	5	1	add
208	[BUG]  [BUGGY]  _cfgUnqNames  =  new  String[_defaultCharIndexes];  [CE]  cannot  find  symbol  _defaultCharIndexes  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  new  String[_defaultCharIndexes];  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  new  String[_defaultCharIndexes];	  _cfgUnqNames    =    new    String[_maximumNonEscapedCharIndexes];    	non-compiled	[CE]  cannot  find  symbol  _defaultCharIndexes	30	None	replace
209	[BUG]  [BUGGY]  _throwUnquotedSpace();  [CE]  cannot  find  symbol  [FE]    UnsupportedOperationException    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _throwUnquotedSpace();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_throwUnquotedSpace();	          _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
210	[BUG]  [BUGGY]  _cfgUnqNames  =  f.declaredValueSeparator();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  f.declaredValueSeparator();  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  f.declaredValueSeparator();	  _cfgUnqNames    =    f.getDeclaredValueSeparator();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
211	[BUG]  [BUGGY]  _reportUndetectableSource(f.getMask());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _reportUndetectableSource(f.getMask());  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_reportUndetectableSource(f.getMask());	  _reportUndetectableSource(f);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
212	[BUG]  [BUGGY]          enable(f);  _reportError( "Current  context  not  an  ARRAY  but "+f.getClass().getName());  [CE]  unreported  exception  JsonGenerationException;  must  be  caught  or  declared  to  be  thrown  [FE]    StackOverflowError    [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]          enable(f);  _reportError( "Current  context  not  an  ARRAY  but "+f.getClass().getName());  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	                enable(f);    _reportError( "Current  context  not  an  ARRAY  but "+f.getClass().getName());	  	non-compiled	[CE]  unreported  exception  JsonGenerationException;  must  be  caught  or  declared  to  be  thrown	1	None	add
213	[BUG]  [BUGGY]  _cfgUnqNames  =  null;  CharacterEscapes  _cfgUnqNames  =  true;  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  null;  CharacterEscapes  _cfgUnqNames  =  true;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  null;  CharacterEscapes  _cfgUnqNames  =  true;	  _cfgUnqNames    =    true;    CharacterEscapes    _cfgUnqNames    =    true;    	non-compiled	[CE]  incompatible  types	15	None	replace
214	[BUG]  [BUGGY]  _cfgUnqNames  =  f.getMask(),  _maximumNonEscapedChar;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  JsonGenerator  enable(Feature  f)  {  super.enable(f);  if  (f  ==  Feature.QUOTE_FIELD_NAMES)  {      [BUGGY]  _cfgUnqNames  =  f.getMask(),  _maximumNonEscapedChar;  [BUGGY]      }  return  this;  }  [CLASS]  JsonGeneratorImpl  [METHOD]  enable  [RETURN_TYPE]  JsonGenerator  Feature  f  [VARIABLES]  SerializableString  _rootValueSeparator  boolean  _cfgUnqNames  CharacterEscapes  _characterEscapes  IOContext  _ioContext  ctxt  int[]  _outputEscapes  sOutputEscapes  Feature  f  int  _maximumNonEscapedChar  features  	projects/JacksonCore13/src/main/java/com/fasterxml/jackson/core/json/JsonGeneratorImpl.java	1.0	122	122	1	replace	_cfgUnqNames  =  f.getMask(),  _maximumNonEscapedChar;	  _cfgUnqNames    =    f.getMask();    	non-compiled	[CE]  ';'  expected	41	None	replace
