projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==MAX_SEGMENT_LEN)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>>1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==MIN_SEGMENT_LEN)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>>1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==MAX_SEGMENT_LEN)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>=1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==0)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>>1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>>1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==MIN_SEGMENT_LEN)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>=1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=_currentSegment.length;
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){for(inti=0,len=_segmentSize;i<len;++i){System.arraycopy(_currentSegment,0,curr.length);}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586((char[])_currentSegment).getChars(0,len);
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){for(inti=0,len=_segmentSize;i<len;++i){buf[i]=newTextBuffer();}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>>2));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,MIN_SEGMENT_LEN+(len>>1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>=1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==0)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>=1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>MAX_SEGMENT_LEN){if(_hasSegments){returnnewchar[len];}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>MAX_SEGMENT_LEN){if(_hasSegments){thrownewIllegalArgumentException("");}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>MAX_SEGMENT_LEN){if(_hasSegments){System.arraycopy(curr,0,newCurrentSegment,0,len);}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==0)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len<1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>>0));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len>=1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>>1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==0)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>>2));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>0){for(inti=0;i<len;++i){curr[i]=getCurrentSegment();}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>0){for(inti=0;i<len;++i){curr[i]=_currentSegment[i];}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>0){for(inti=0,len=_currentSegment.length;i<len;++i){char[]curr=curr.toCharArray();System.arraycopy(curr,0,
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586((char[])_currentSegment).getChars(0,len+1);
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586((char[])_currentSegment).getChars(0,len,_currentSize);
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586((char[])_currentSegment).getChars(0,len,_inputStart);
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586((char[])_currentSegment).getChars(0,len+2);
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){for(inti=0,len=curr.length;i<len;++i){System.arraycopy(_currentSegment,0,curr.length);}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){for(inti=0,len=curr.length;i<len;++i){System.arraycopy(curr,0,curr.length);}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){for(inti=0,len=_currentSize;i<len;++i){System.arraycopy(_currentSegment,0,curr.length);}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){for(inti=0,len=curr.length;i<len;++i){System.arraycopy(_currentSegment,1,curr.length);}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,curr.length+(len>>1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,MAX_SEGMENT_LEN+(len>>1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){for(inti=0,len=curr.length;i<len;++i){buf[i]=newTextBuffer();}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){for(inti=0,len=curr.length;i<len;++i){buffer[i]=newTextBuffer();}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){for(inti=0,len=curr.length;i<len;++i){returnnewTextBuffer();}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){for(inti=0,len=curr.length;i<len;++i){thrownewIllegalArgumentException("");}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len<MAX_SEGMENT_LEN){if(_hasSegments){returnnewchar[len];}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len==MAX_SEGMENT_LEN){if(_hasSegments){returnnewchar[len];}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){returnnewchar[len];}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>=0));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=len;
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586charnewLen=_currentSegment.length;
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=curr.length;
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=_currentSegment.length-1;
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len==MAX_SEGMENT_LEN){if(_hasSegments){thrownewIllegalArgumentException("");}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len<MAX_SEGMENT_LEN){if(_hasSegments){thrownewIllegalArgumentException("");}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len<=MAX_SEGMENT_LEN){if(_hasSegments){thrownewIllegalArgumentException("");}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){thrownewIllegalArgumentException("");}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){if(len>0){for(inti=0;i<len;++i){curr[i]=getCurrentSegment();}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){for(inti=0;i<len;++i){curr[i]=getCurrentSegment();}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>0){for(inti=0;i<curr.length;++i){curr[i]=getCurrentSegment();}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==MIN_SEGMENT_LEN)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len<1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){if(len>0){for(inti=0,len=curr.length;i<len;++i){System.arraycopy(_currentSegment,0,}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){if(len>0){for(inti=0,len=curr.length;i<len;++i){System.arraycopy(curr,0,}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(newLen>0){for(inti=0,len=curr.length;i<len;++i){char[]curr=curr.toCharArray();System.arraycopy(curr,0,
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(newLen>0){for(inti=0,len=curr.length;i<len;++i){char[]newLen=curr.toCharArray();System.arraycopy(_currentSegment,0,
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len>=1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>>2));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len>=1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>>6));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>>6));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>=2));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>>4));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len<MAX_SEGMENT_LEN){if(_hasSegments){System.arraycopy(curr,0,newCurrentSegment,0,len);}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){if(len>MAX_SEGMENT_LEN){System.arraycopy(curr,0,newCurrentSegment,0,len);}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){System.arraycopy(curr,0,newCurrentSegment,0,len);}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){if(len>0){for(inti=0;i<len;++i){curr[i]=_currentSegment[i];}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>0){for(inti=0;i<len;++i){curr[i]=curr[i];}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>0){for(inti=0;i<curr.length;++i){curr[i]=_currentSegment[i];}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len<1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==0)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len<2));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len<1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len<1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len>0)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len<1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){for(inti=0,len=curr.length;i<len;++i){char[]newLen=curr.toCharArray();System.arraycopy(_currentSegment,0,
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){for(inti=0,len=curr.length;i<len;++i){char[]curr=curr.toCharArray();System.arraycopy(curr,0,
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=len.length;
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586finalintnewLen=_currentSegment.length;
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>MIN_SEGMENT_LEN){if(_hasSegments){returnnewchar[len];}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>=MAX_SEGMENT_LEN){if(_hasSegments){returnnewchar[len];}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){for(inti=0,newLen=curr.length;i<len;++i){buf[i]=newTextBuffer();}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){for(inti=0,len=_currentSize;i<len;++i){buf[i]=newTextBuffer();}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>MIN_SEGMENT_LEN){if(_hasSegments){thrownewIllegalArgumentException("");}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>MAX_SEGMENT_LEN){for(inti=0;i<len;++i){curr[i]=_currentSegment[i];}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>0){for(inti=0;i<len;++i){curr[i]=newchar[_currentSegment.length];}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586((char[])_currentSegment).getChars(0,len+1,_currentSize);
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>MIN_SEGMENT_LEN){if(_hasSegments){System.arraycopy(curr,0,newCurrentSegment,0,len);}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len>1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>>1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>MAX_SEGMENT_LEN){for(inti=0;i<len;++i){curr[i]=getCurrentSegment();}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>0){for(inti=0;i<length;++i){curr[i]=getCurrentSegment();}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==0)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>=2));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>0));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len>1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>>0));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(!_hasSegments){for(inti=0,len=_currentSize;i<len;++i){System.arraycopy(_currentSegment,0,curr.length);}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(!_hasSegments){for(inti=0,len=curr.length;i<len;++i){System.arraycopy(_currentSegment,0,curr.length);}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==0)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){for(inti=0;i<len;++i){curr[i]=_currentSegment[i];}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>0){for(inti=0;i<len;++i){curr[i]=newString(_currentSegment.length);}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){for(inti=0,len=_currentSegment.length;i<len;++i){buf[i]=newTextBuffer();}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>0){if(_hasSegments){System.arraycopy(curr,0,newCurrentSegment,0,len);}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len<1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>>2));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>0){if(_hasSegments){thrownewIllegalArgumentException("");}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len<1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>>1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len==1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+1);
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len>=0)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len<1));
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){for(inti=0,len=_currentSegment.length;i<len;++i){char[]curr=curr.toCharArray();System.arraycopy(curr,0,
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>0){for(inti=0,len=curr.length;i<len;++i){char[]curr=curr.toCharArray();System.arraycopy(curr,0,
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){for(inti=0,len=_currentSegment.length;i<len;++i){System.arraycopy(_currentSegment,0,curr.length);}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(_hasSegments){for(inti=0,len=_currentSegment.length;i<len;++i){System.arraycopy(curr,0,curr.length);}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>0){for(inti=0;i<segLen;++i){curr[i]=getCurrentSegment();}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586if(len>0){if(_hasSegments){returnnewchar[len];}
projects/JacksonCore4/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java586intnewLen=(len>>1)?(MAX_SEGMENT_LEN+1):Math.min(MAX_SEGMENT_LEN,len+(len>>1));
