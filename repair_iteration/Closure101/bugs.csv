bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] Matcher matcher = argPattern.matcher(arg); [FE] AssertionFailedError [CONTEXT] throws CmdLineException {    Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); List<String> processedArgs = Lists.newArrayList(); for (String arg : args) { [BUGGY] Matcher matcher = argPattern.matcher(arg); [BUGGY] if (matcher.matches()) { processedArgs.add(matcher.group(1)); String value = matcher.group(2); Matcher quotesMatcher = quotesPattern.matcher(value); if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { processedArgs.add(value); } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.25	364	364	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] throws CmdLineException {    Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); List<String> processedArgs = Lists.newArrayList(); for (String arg : args) { [BUGGY] [BUGGY] Matcher matcher = argPattern.matcher(arg); if (matcher.matches()) { processedArgs.add(matcher.group(1)); String value = matcher.group(2); Matcher quotesMatcher = quotesPattern.matcher(value); if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { processedArgs.add(value); } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.25	364	364	1	add	
3	[BUG] [BUGGY] if (matcher.matches()) { [FE] AssertionFailedError [CONTEXT] throws CmdLineException {    Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); List<String> processedArgs = Lists.newArrayList(); for (String arg : args) { Matcher matcher = argPattern.matcher(arg); [BUGGY] if (matcher.matches()) { [BUGGY] processedArgs.add(matcher.group(1)); String value = matcher.group(2); Matcher quotesMatcher = quotesPattern.matcher(value); if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { processedArgs.add(value); } } else { [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.25	365	365	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] throws CmdLineException {    Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); List<String> processedArgs = Lists.newArrayList(); for (String arg : args) { Matcher matcher = argPattern.matcher(arg); [BUGGY] [BUGGY] if (matcher.matches()) { processedArgs.add(matcher.group(1)); String value = matcher.group(2); Matcher quotesMatcher = quotesPattern.matcher(value); if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { processedArgs.add(value); } } else { [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.25	365	365	1	add	
5	[BUG] [BUGGY] processedArgs.add(matcher.group(1)); [FE] AssertionFailedError [CONTEXT] throws CmdLineException {    Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); List<String> processedArgs = Lists.newArrayList(); for (String arg : args) { Matcher matcher = argPattern.matcher(arg); if (matcher.matches()) { [BUGGY] processedArgs.add(matcher.group(1)); [BUGGY]  String value = matcher.group(2); Matcher quotesMatcher = quotesPattern.matcher(value); if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { processedArgs.add(value); } } else { processedArgs.add(arg); [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.25	366	366	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] throws CmdLineException {    Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); List<String> processedArgs = Lists.newArrayList(); for (String arg : args) { Matcher matcher = argPattern.matcher(arg); if (matcher.matches()) { [BUGGY] [BUGGY] processedArgs.add(matcher.group(1)); String value = matcher.group(2); Matcher quotesMatcher = quotesPattern.matcher(value); if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { processedArgs.add(value); } } else { processedArgs.add(arg); [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.25	366	366	1	add	
7	[BUG] [BUGGY] String value = matcher.group(2); [FE] AssertionFailedError [CONTEXT]   Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); List<String> processedArgs = Lists.newArrayList(); for (String arg : args) { Matcher matcher = argPattern.matcher(arg); if (matcher.matches()) { processedArgs.add(matcher.group(1)); [BUGGY] String value = matcher.group(2); [BUGGY] Matcher quotesMatcher = quotesPattern.matcher(value); if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { processedArgs.add(value); } } else { processedArgs.add(arg); } } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.25	368	368	1	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]   Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); List<String> processedArgs = Lists.newArrayList(); for (String arg : args) { Matcher matcher = argPattern.matcher(arg); if (matcher.matches()) { processedArgs.add(matcher.group(1)); [BUGGY] [BUGGY] String value = matcher.group(2); Matcher quotesMatcher = quotesPattern.matcher(value); if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { processedArgs.add(value); } } else { processedArgs.add(arg); } } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.25	368	368	1	add	
9	[BUG] [BUGGY] Matcher quotesMatcher = quotesPattern.matcher(value); [FE] AssertionFailedError [CONTEXT]  Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); List<String> processedArgs = Lists.newArrayList(); for (String arg : args) { Matcher matcher = argPattern.matcher(arg); if (matcher.matches()) { processedArgs.add(matcher.group(1)); String value = matcher.group(2); [BUGGY] Matcher quotesMatcher = quotesPattern.matcher(value); [BUGGY] if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { processedArgs.add(value); } } else { processedArgs.add(arg); } }  [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.25	369	369	1	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); List<String> processedArgs = Lists.newArrayList(); for (String arg : args) { Matcher matcher = argPattern.matcher(arg); if (matcher.matches()) { processedArgs.add(matcher.group(1)); String value = matcher.group(2); [BUGGY] [BUGGY] Matcher quotesMatcher = quotesPattern.matcher(value); if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { processedArgs.add(value); } } else { processedArgs.add(arg); } }  [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.25	369	369	1	add	
11	[BUG] [BUGGY] if (quotesMatcher.matches()) { [FE] AssertionFailedError [CONTEXT] Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); List<String> processedArgs = Lists.newArrayList(); for (String arg : args) { Matcher matcher = argPattern.matcher(arg); if (matcher.matches()) { processedArgs.add(matcher.group(1)); String value = matcher.group(2); Matcher quotesMatcher = quotesPattern.matcher(value); [BUGGY] if (quotesMatcher.matches()) { [BUGGY] processedArgs.add(quotesMatcher.group(1)); } else { processedArgs.add(value); } } else { processedArgs.add(arg); } } CmdLineParser parser = new CmdLineParser(flags); [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.25	370	370	1	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); List<String> processedArgs = Lists.newArrayList(); for (String arg : args) { Matcher matcher = argPattern.matcher(arg); if (matcher.matches()) { processedArgs.add(matcher.group(1)); String value = matcher.group(2); Matcher quotesMatcher = quotesPattern.matcher(value); [BUGGY] [BUGGY] if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { processedArgs.add(value); } } else { processedArgs.add(arg); } } CmdLineParser parser = new CmdLineParser(flags); [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.25	370	370	1	add	
13	[BUG] [BUGGY] processedArgs.add(value); [FE] AssertionFailedError [CONTEXT] if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { [BUGGY] processedArgs.add(value); [BUGGY] } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.25	373	373	1	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { [BUGGY] [BUGGY] processedArgs.add(value); } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.25	373	373	1	add	
15	[BUG] [BUGGY] } else { [FE] AssertionFailedError [CONTEXT] if (matcher.matches()) { processedArgs.add(matcher.group(1)); String value = matcher.group(2); Matcher quotesMatcher = quotesPattern.matcher(value); if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { processedArgs.add(value); } [BUGGY] } else { [BUGGY] processedArgs.add(arg); } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.25	375	375	1	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (matcher.matches()) { processedArgs.add(matcher.group(1)); String value = matcher.group(2); Matcher quotesMatcher = quotesPattern.matcher(value); if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { processedArgs.add(value); } [BUGGY] [BUGGY] } else { processedArgs.add(arg); } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.25	375	375	1	add	
17	[BUG] [BUGGY] super(); [FE] AssertionFailedError [CONTEXT] protected CommandLineRunner(String[] args) throws CmdLineException { [BUGGY] super(); [BUGGY] initConfigFromFlags(args, System.err); } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] <init> [RETURN_TYPE] String[])  String[] args [VARIABLES] CompilationLevel compilation_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper String charset create_source_map js_output_file logging_level module_output_path_prefix output_wrapper output_wrapper_marker property_map_input_file property_map_output_file variable_map_input_file variable_map_output_file Flags flags String[] args DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	344	344	1	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected CommandLineRunner(String[] args) throws CmdLineException { [BUGGY] [BUGGY] super(); initConfigFromFlags(args, System.err); } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] <init> [RETURN_TYPE] String[])  String[] args [VARIABLES] CompilationLevel compilation_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper String charset create_source_map js_output_file logging_level module_output_path_prefix output_wrapper output_wrapper_marker property_map_input_file property_map_output_file variable_map_input_file variable_map_output_file Flags flags String[] args DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	344	344	1	add	
19	[BUG] [BUGGY] private final Flags flags = new Flags(); [FE] AssertionFailedError [CONTEXT] [BUGGY] private final Flags flags = new Flags(); [BUGGY]  [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption  [VARIABLES] 	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	335	335	1	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] private final Flags flags = new Flags(); [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption  [VARIABLES] 	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	335	335	1	add	
21	[BUG] [BUGGY] initConfigFromFlags(args, System.err); [FE] AssertionFailedError [CONTEXT] protected CommandLineRunner(String[] args) throws CmdLineException { super(); [BUGGY] initConfigFromFlags(args, System.err); [BUGGY] } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] <init> [RETURN_TYPE] String[])  String[] args [VARIABLES] CompilationLevel compilation_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper String charset create_source_map js_output_file logging_level module_output_path_prefix output_wrapper output_wrapper_marker property_map_input_file property_map_output_file variable_map_input_file variable_map_output_file Flags flags String[] args DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	345	345	1	replace	
22	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected CommandLineRunner(String[] args) throws CmdLineException { super(); [BUGGY] [BUGGY] initConfigFromFlags(args, System.err); } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] <init> [RETURN_TYPE] String[])  String[] args [VARIABLES] CompilationLevel compilation_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper String charset create_source_map js_output_file logging_level module_output_path_prefix output_wrapper output_wrapper_marker property_map_input_file property_map_output_file variable_map_input_file variable_map_output_file Flags flags String[] args DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	345	345	1	add	
23	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] protected CommandLineRunner(String[] args) throws CmdLineException { super(); initConfigFromFlags(args, System.err); [BUGGY] } [BUGGY]  [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] <init> [RETURN_TYPE] String[])  String[] args [VARIABLES] CompilationLevel compilation_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper String charset create_source_map js_output_file logging_level module_output_path_prefix output_wrapper output_wrapper_marker property_map_input_file property_map_output_file variable_map_input_file variable_map_output_file Flags flags String[] args DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	346	346	1	replace	
24	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected CommandLineRunner(String[] args) throws CmdLineException { super(); initConfigFromFlags(args, System.err); [BUGGY] [BUGGY] } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] <init> [RETURN_TYPE] String[])  String[] args [VARIABLES] CompilationLevel compilation_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper String charset create_source_map js_output_file logging_level module_output_path_prefix output_wrapper output_wrapper_marker property_map_input_file property_map_output_file variable_map_input_file variable_map_output_file Flags flags String[] args DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	346	346	1	add	
25	[BUG] [BUGGY] Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); [FE] AssertionFailedError [CONTEXT] throws CmdLineException {    [BUGGY] Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); [BUGGY] Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); List<String> processedArgs = Lists.newArrayList(); for (String arg : args) { Matcher matcher = argPattern.matcher(arg); if (matcher.matches()) { processedArgs.add(matcher.group(1)); String value = matcher.group(2); Matcher quotesMatcher = quotesPattern.matcher(value); if (quotesMatcher.matches()) { [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	360	360	1	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] throws CmdLineException {    [BUGGY] [BUGGY] Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); List<String> processedArgs = Lists.newArrayList(); for (String arg : args) { Matcher matcher = argPattern.matcher(arg); if (matcher.matches()) { processedArgs.add(matcher.group(1)); String value = matcher.group(2); Matcher quotesMatcher = quotesPattern.matcher(value); if (quotesMatcher.matches()) { [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	360	360	1	add	
27	[BUG] [BUGGY] Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); [FE] AssertionFailedError [CONTEXT] throws CmdLineException {    Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); [BUGGY] Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); [BUGGY] List<String> processedArgs = Lists.newArrayList(); for (String arg : args) { Matcher matcher = argPattern.matcher(arg); if (matcher.matches()) { processedArgs.add(matcher.group(1)); String value = matcher.group(2); Matcher quotesMatcher = quotesPattern.matcher(value); if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	361	361	1	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] throws CmdLineException {    Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); [BUGGY] [BUGGY] Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); List<String> processedArgs = Lists.newArrayList(); for (String arg : args) { Matcher matcher = argPattern.matcher(arg); if (matcher.matches()) { processedArgs.add(matcher.group(1)); String value = matcher.group(2); Matcher quotesMatcher = quotesPattern.matcher(value); if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	361	361	1	add	
29	[BUG] [BUGGY] List<String> processedArgs = Lists.newArrayList(); [FE] AssertionFailedError [CONTEXT] throws CmdLineException {    Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); [BUGGY] List<String> processedArgs = Lists.newArrayList(); [BUGGY] for (String arg : args) { Matcher matcher = argPattern.matcher(arg); if (matcher.matches()) { processedArgs.add(matcher.group(1)); String value = matcher.group(2); Matcher quotesMatcher = quotesPattern.matcher(value); if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	362	362	1	replace	
30	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] throws CmdLineException {    Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); [BUGGY] [BUGGY] List<String> processedArgs = Lists.newArrayList(); for (String arg : args) { Matcher matcher = argPattern.matcher(arg); if (matcher.matches()) { processedArgs.add(matcher.group(1)); String value = matcher.group(2); Matcher quotesMatcher = quotesPattern.matcher(value); if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	362	362	1	add	
31	[BUG] [BUGGY] for (String arg : args) { [FE] AssertionFailedError [CONTEXT] throws CmdLineException {    Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); List<String> processedArgs = Lists.newArrayList(); [BUGGY] for (String arg : args) { [BUGGY] Matcher matcher = argPattern.matcher(arg); if (matcher.matches()) { processedArgs.add(matcher.group(1)); String value = matcher.group(2); Matcher quotesMatcher = quotesPattern.matcher(value); if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { processedArgs.add(value); [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	363	363	1	replace	
32	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] throws CmdLineException {    Pattern argPattern = Pattern.compile("(--[a-zA-Z_]+)=(.*)"); Pattern quotesPattern = Pattern.compile("^['\"](.*)['\"]$"); List<String> processedArgs = Lists.newArrayList(); [BUGGY] [BUGGY] for (String arg : args) { Matcher matcher = argPattern.matcher(arg); if (matcher.matches()) { processedArgs.add(matcher.group(1)); String value = matcher.group(2); Matcher quotesMatcher = quotesPattern.matcher(value); if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { processedArgs.add(value); [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	363	363	1	add	
33	[BUG] [BUGGY] CmdLineParser parser = new CmdLineParser(flags); [FE] AssertionFailedError [CONTEXT] if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { processedArgs.add(value); } } else { processedArgs.add(arg); } } [BUGGY] CmdLineParser parser = new CmdLineParser(flags); [BUGGY] try { parser.parseArgument(processedArgs.toArray(new String[] {})); } catch (CmdLineException e) { err.println(e.getMessage()); parser.printUsage(err); throw e; } getCommandLineConfig() .setPrintTree(flags.print_tree) .setComputePhaseOrdering(flags.compute_phase_ordering) [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	380	380	1	replace	
34	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (quotesMatcher.matches()) { processedArgs.add(quotesMatcher.group(1)); } else { processedArgs.add(value); } } else { processedArgs.add(arg); } } [BUGGY] [BUGGY] CmdLineParser parser = new CmdLineParser(flags); try { parser.parseArgument(processedArgs.toArray(new String[] {})); } catch (CmdLineException e) { err.println(e.getMessage()); parser.printUsage(err); throw e; } getCommandLineConfig() .setPrintTree(flags.print_tree) .setComputePhaseOrdering(flags.compute_phase_ordering) [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	380	380	1	add	
35	[BUG] [BUGGY] parser.parseArgument(processedArgs.toArray(new String[] {})); [FE] AssertionFailedError [CONTEXT] } else { processedArgs.add(value); } } else { processedArgs.add(arg); } } CmdLineParser parser = new CmdLineParser(flags); try { [BUGGY] parser.parseArgument(processedArgs.toArray(new String[] {})); [BUGGY] } catch (CmdLineException e) { err.println(e.getMessage()); parser.printUsage(err); throw e; } getCommandLineConfig() .setPrintTree(flags.print_tree) .setComputePhaseOrdering(flags.compute_phase_ordering) .setPrintAst(flags.print_ast) .setPrintPassGraph(flags.print_pass_graph) [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	382	382	1	replace	
36	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } else { processedArgs.add(value); } } else { processedArgs.add(arg); } } CmdLineParser parser = new CmdLineParser(flags); try { [BUGGY] [BUGGY] parser.parseArgument(processedArgs.toArray(new String[] {})); } catch (CmdLineException e) { err.println(e.getMessage()); parser.printUsage(err); throw e; } getCommandLineConfig() .setPrintTree(flags.print_tree) .setComputePhaseOrdering(flags.compute_phase_ordering) .setPrintAst(flags.print_ast) .setPrintPassGraph(flags.print_pass_graph) [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	382	382	1	add	
37	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] } } CmdLineParser parser = new CmdLineParser(flags); try { parser.parseArgument(processedArgs.toArray(new String[] {})); } catch (CmdLineException e) { err.println(e.getMessage()); parser.printUsage(err); throw e; [BUGGY] } [BUGGY] getCommandLineConfig() .setPrintTree(flags.print_tree) .setComputePhaseOrdering(flags.compute_phase_ordering) .setPrintAst(flags.print_ast) .setPrintPassGraph(flags.print_pass_graph) .setJscompDevMode(flags.jscomp_dev_mode) .setLoggingLevel(flags.logging_level) .setExterns(flags.externs) .setJs(flags.js) .setJsOutputFile(flags.js_output_file) [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	387	387	1	replace	
38	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } } CmdLineParser parser = new CmdLineParser(flags); try { parser.parseArgument(processedArgs.toArray(new String[] {})); } catch (CmdLineException e) { err.println(e.getMessage()); parser.printUsage(err); throw e; [BUGGY] [BUGGY] } getCommandLineConfig() .setPrintTree(flags.print_tree) .setComputePhaseOrdering(flags.compute_phase_ordering) .setPrintAst(flags.print_ast) .setPrintPassGraph(flags.print_pass_graph) .setJscompDevMode(flags.jscomp_dev_mode) .setLoggingLevel(flags.logging_level) .setExterns(flags.externs) .setJs(flags.js) .setJsOutputFile(flags.js_output_file) [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	387	387	1	add	
39	[BUG] [BUGGY] getCommandLineConfig() .setPrintTree(flags.print_tree) .setComputePhaseOrdering(flags.compute_phase_ordering) [FE] AssertionFailedError [CONTEXT] } CmdLineParser parser = new CmdLineParser(flags); try { parser.parseArgument(processedArgs.toArray(new String[] {})); } catch (CmdLineException e) { err.println(e.getMessage()); parser.printUsage(err); throw e; } [BUGGY] getCommandLineConfig()  .setPrintTree(flags.print_tree)    .setComputePhaseOrdering(flags.compute_phase_ordering) [BUGGY] .setPrintTree(flags.print_tree) .setComputePhaseOrdering(flags.compute_phase_ordering) .setPrintAst(flags.print_ast) .setPrintPassGraph(flags.print_pass_graph) .setJscompDevMode(flags.jscomp_dev_mode) .setLoggingLevel(flags.logging_level) .setExterns(flags.externs) .setJs(flags.js) .setJsOutputFile(flags.js_output_file) .setModule(flags.module) [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	388	390	1	replace	
40	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } CmdLineParser parser = new CmdLineParser(flags); try { parser.parseArgument(processedArgs.toArray(new String[] {})); } catch (CmdLineException e) { err.println(e.getMessage()); parser.printUsage(err); throw e; } [BUGGY] [BUGGY] getCommandLineConfig()  .setPrintTree(flags.print_tree)    .setComputePhaseOrdering(flags.compute_phase_ordering) .setPrintTree(flags.print_tree) .setComputePhaseOrdering(flags.compute_phase_ordering) .setPrintAst(flags.print_ast) .setPrintPassGraph(flags.print_pass_graph) .setJscompDevMode(flags.jscomp_dev_mode) .setLoggingLevel(flags.logging_level) .setExterns(flags.externs) .setJs(flags.js) .setJsOutputFile(flags.js_output_file) .setModule(flags.module) [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] initConfigFromFlags [RETURN_TYPE] void  String[] args PrintStream err [VARIABLES] PrintStream err Pattern argPattern quotesPattern CompilationLevel compilation_level Set FALSES TRUES CmdLineParser parser WarningLevel warning_level Matcher matcher quotesMatcher String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags String[] args int summary_detail_level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs DevMode jscomp_dev_mode CmdLineException e  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	388	390	1	add	
42	[BUG] [BUGGY] CompilerOptions options = new CompilerOptions(); [FE] AssertionFailedError [CONTEXT] protected CompilerOptions createOptions() { [BUGGY] CompilerOptions options = new CompilerOptions(); [BUGGY] options.setCodingConvention(new ClosureCodingConvention()); CompilationLevel level = flags.compilation_level; level.setOptionsForCompilationLevel(options); if (flags.debug) { level.setDebugOptionsForCompilationLevel(options); } WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	420	420	1	replace	
43	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected CompilerOptions createOptions() { [BUGGY] [BUGGY] CompilerOptions options = new CompilerOptions(); options.setCodingConvention(new ClosureCodingConvention()); CompilationLevel level = flags.compilation_level; level.setOptionsForCompilationLevel(options); if (flags.debug) { level.setDebugOptionsForCompilationLevel(options); } WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	420	420	1	add	
44	[BUG] [BUGGY] options.setCodingConvention(new ClosureCodingConvention()); [FE] AssertionFailedError [CONTEXT] protected CompilerOptions createOptions() { CompilerOptions options = new CompilerOptions(); [BUGGY] options.setCodingConvention(new ClosureCodingConvention()); [BUGGY] CompilationLevel level = flags.compilation_level; level.setOptionsForCompilationLevel(options); if (flags.debug) { level.setDebugOptionsForCompilationLevel(options); } WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	421	421	1	replace	
45	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected CompilerOptions createOptions() { CompilerOptions options = new CompilerOptions(); [BUGGY] [BUGGY] options.setCodingConvention(new ClosureCodingConvention()); CompilationLevel level = flags.compilation_level; level.setOptionsForCompilationLevel(options); if (flags.debug) { level.setDebugOptionsForCompilationLevel(options); } WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	421	421	1	add	
46	[BUG] [BUGGY] CompilationLevel level = flags.compilation_level; [FE] AssertionFailedError [CONTEXT] protected CompilerOptions createOptions() { CompilerOptions options = new CompilerOptions(); options.setCodingConvention(new ClosureCodingConvention()); [BUGGY] CompilationLevel level = flags.compilation_level; [BUGGY] level.setOptionsForCompilationLevel(options); if (flags.debug) { level.setDebugOptionsForCompilationLevel(options); } WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	422	422	1	replace	
47	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected CompilerOptions createOptions() { CompilerOptions options = new CompilerOptions(); options.setCodingConvention(new ClosureCodingConvention()); [BUGGY] [BUGGY] CompilationLevel level = flags.compilation_level; level.setOptionsForCompilationLevel(options); if (flags.debug) { level.setDebugOptionsForCompilationLevel(options); } WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	422	422	1	add	
48	[BUG] [BUGGY] level.setOptionsForCompilationLevel(options); [FE] AssertionFailedError [CONTEXT] protected CompilerOptions createOptions() { CompilerOptions options = new CompilerOptions(); options.setCodingConvention(new ClosureCodingConvention()); CompilationLevel level = flags.compilation_level; [BUGGY] level.setOptionsForCompilationLevel(options); [BUGGY] if (flags.debug) { level.setDebugOptionsForCompilationLevel(options); } WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); } if (flags.process_closure_primitives) { [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	423	423	1	replace	
49	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected CompilerOptions createOptions() { CompilerOptions options = new CompilerOptions(); options.setCodingConvention(new ClosureCodingConvention()); CompilationLevel level = flags.compilation_level; [BUGGY] [BUGGY] level.setOptionsForCompilationLevel(options); if (flags.debug) { level.setDebugOptionsForCompilationLevel(options); } WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); } if (flags.process_closure_primitives) { [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	423	423	1	add	
50	[BUG] [BUGGY] if (flags.debug) { [FE] AssertionFailedError [CONTEXT] protected CompilerOptions createOptions() { CompilerOptions options = new CompilerOptions(); options.setCodingConvention(new ClosureCodingConvention()); CompilationLevel level = flags.compilation_level; level.setOptionsForCompilationLevel(options); [BUGGY] if (flags.debug) { [BUGGY] level.setDebugOptionsForCompilationLevel(options); } WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); } if (flags.process_closure_primitives) { options.closurePass = true; [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	424	424	1	replace	
51	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected CompilerOptions createOptions() { CompilerOptions options = new CompilerOptions(); options.setCodingConvention(new ClosureCodingConvention()); CompilationLevel level = flags.compilation_level; level.setOptionsForCompilationLevel(options); [BUGGY] [BUGGY] if (flags.debug) { level.setDebugOptionsForCompilationLevel(options); } WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); } if (flags.process_closure_primitives) { options.closurePass = true; [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	424	424	1	add	
52	[BUG] [BUGGY] WarningLevel wLevel = flags.warning_level; [FE] AssertionFailedError [CONTEXT] protected CompilerOptions createOptions() { CompilerOptions options = new CompilerOptions(); options.setCodingConvention(new ClosureCodingConvention()); CompilationLevel level = flags.compilation_level; level.setOptionsForCompilationLevel(options); if (flags.debug) { level.setDebugOptionsForCompilationLevel(options); } [BUGGY] WarningLevel wLevel = flags.warning_level; [BUGGY] wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); } if (flags.process_closure_primitives) { options.closurePass = true; } initOptionsFromFlags(options); return options; [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	428	428	1	replace	
53	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected CompilerOptions createOptions() { CompilerOptions options = new CompilerOptions(); options.setCodingConvention(new ClosureCodingConvention()); CompilationLevel level = flags.compilation_level; level.setOptionsForCompilationLevel(options); if (flags.debug) { level.setDebugOptionsForCompilationLevel(options); } [BUGGY] [BUGGY] WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); } if (flags.process_closure_primitives) { options.closurePass = true; } initOptionsFromFlags(options); return options; [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	428	428	1	add	
54	[BUG] [BUGGY] wLevel.setOptionsForWarningLevel(options); [FE] AssertionFailedError [CONTEXT] protected CompilerOptions createOptions() { CompilerOptions options = new CompilerOptions(); options.setCodingConvention(new ClosureCodingConvention()); CompilationLevel level = flags.compilation_level; level.setOptionsForCompilationLevel(options); if (flags.debug) { level.setDebugOptionsForCompilationLevel(options); } WarningLevel wLevel = flags.warning_level; [BUGGY] wLevel.setOptionsForWarningLevel(options); [BUGGY] for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); } if (flags.process_closure_primitives) { options.closurePass = true; } initOptionsFromFlags(options); return options; } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	429	429	1	replace	
55	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected CompilerOptions createOptions() { CompilerOptions options = new CompilerOptions(); options.setCodingConvention(new ClosureCodingConvention()); CompilationLevel level = flags.compilation_level; level.setOptionsForCompilationLevel(options); if (flags.debug) { level.setDebugOptionsForCompilationLevel(options); } WarningLevel wLevel = flags.warning_level; [BUGGY] [BUGGY] wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); } if (flags.process_closure_primitives) { options.closurePass = true; } initOptionsFromFlags(options); return options; } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	429	429	1	add	
56	[BUG] [BUGGY] for (FormattingOption formattingOption : flags.formatting) { [FE] AssertionFailedError [CONTEXT] CompilerOptions options = new CompilerOptions(); options.setCodingConvention(new ClosureCodingConvention()); CompilationLevel level = flags.compilation_level; level.setOptionsForCompilationLevel(options); if (flags.debug) { level.setDebugOptionsForCompilationLevel(options); } WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); [BUGGY] for (FormattingOption formattingOption : flags.formatting) { [BUGGY] formattingOption.applyToOptions(options); } if (flags.process_closure_primitives) { options.closurePass = true; } initOptionsFromFlags(options); return options; } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	430	430	1	replace	
57	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] CompilerOptions options = new CompilerOptions(); options.setCodingConvention(new ClosureCodingConvention()); CompilationLevel level = flags.compilation_level; level.setOptionsForCompilationLevel(options); if (flags.debug) { level.setDebugOptionsForCompilationLevel(options); } WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); [BUGGY] [BUGGY] for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); } if (flags.process_closure_primitives) { options.closurePass = true; } initOptionsFromFlags(options); return options; } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	430	430	1	add	
58	[BUG] [BUGGY] if (flags.process_closure_primitives) { [FE] AssertionFailedError [CONTEXT] level.setOptionsForCompilationLevel(options); if (flags.debug) { level.setDebugOptionsForCompilationLevel(options); } WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); } [BUGGY] if (flags.process_closure_primitives) { [BUGGY] options.closurePass = true; } initOptionsFromFlags(options); return options; } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	replace	
59	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] level.setOptionsForCompilationLevel(options); if (flags.debug) { level.setDebugOptionsForCompilationLevel(options); } WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); } [BUGGY] [BUGGY] if (flags.process_closure_primitives) { options.closurePass = true; } initOptionsFromFlags(options); return options; } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	433	433	1	add	
60	[BUG] [BUGGY] options.closurePass = true; [FE] AssertionFailedError [CONTEXT] if (flags.debug) { level.setDebugOptionsForCompilationLevel(options); } WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); } if (flags.process_closure_primitives) { [BUGGY] options.closurePass = true; [BUGGY] } initOptionsFromFlags(options); return options; } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	
61	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (flags.debug) { level.setDebugOptionsForCompilationLevel(options); } WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); } if (flags.process_closure_primitives) { [BUGGY] [BUGGY] options.closurePass = true; } initOptionsFromFlags(options); return options; } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	
62	[BUG] [BUGGY] initOptionsFromFlags(options); [FE] AssertionFailedError [CONTEXT] WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); } if (flags.process_closure_primitives) { options.closurePass = true; } [BUGGY] initOptionsFromFlags(options); [BUGGY] return options; } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	replace	
63	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); } if (flags.process_closure_primitives) { options.closurePass = true; } [BUGGY] [BUGGY] initOptionsFromFlags(options); return options; } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	437	437	1	add	
64	[BUG] [BUGGY] return options; [FE] AssertionFailedError [CONTEXT] WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); } if (flags.process_closure_primitives) { options.closurePass = true; } initOptionsFromFlags(options); [BUGGY] return options; [BUGGY] } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	replace	
65	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] WarningLevel wLevel = flags.warning_level; wLevel.setOptionsForWarningLevel(options); for (FormattingOption formattingOption : flags.formatting) { formattingOption.applyToOptions(options); } if (flags.process_closure_primitives) { options.closurePass = true; } initOptionsFromFlags(options); [BUGGY] [BUGGY] return options; } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createOptions [RETURN_TYPE] CompilerOptions  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption CompilerOptions options List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	438	438	1	add	
66	[BUG] [BUGGY] return new Compiler(getErrorPrintStream()); [FE] AssertionFailedError [CONTEXT] protected Compiler createCompiler() { [BUGGY] return new Compiler(getErrorPrintStream()); [BUGGY] } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createCompiler [RETURN_TYPE] Compiler  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	443	443	1	replace	
67	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected Compiler createCompiler() { [BUGGY] [BUGGY] return new Compiler(getErrorPrintStream()); } [CLASS] CommandLineRunner Flags BooleanOptionHandler FormattingOption [METHOD] createCompiler [RETURN_TYPE] Compiler  [VARIABLES] CompilationLevel compilation_level level boolean compute_phase_ordering create_name_map_files debug print_ast print_pass_graph print_tree process_closure_primitives third_party use_only_custom_externs Set FALSES TRUES WarningLevel wLevel warning_level FormattingOption PRETTY_PRINT PRINT_INPUT_DELIMITER formattingOption List define externs formatting js jscomp_error jscomp_off jscomp_warning module module_wrapper processedArgs String arg charset create_source_map js_output_file logging_level lowerParam module_output_path_prefix output_wrapper output_wrapper_marker param property_map_input_file property_map_output_file value variable_map_input_file variable_map_output_file Flags flags DevMode jscomp_dev_mode int summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	443	443	1	add	
