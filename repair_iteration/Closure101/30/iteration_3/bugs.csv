bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  OptionsHandler  optionHandler  =  flags.process_closure_primitives;  options.closurePass  |=  false;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  OptionsHandler  optionHandler  =  flags.process_closure_primitives;  options.closurePass  |=  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	OptionsHandler  optionHandler  =  flags.process_closure_primitives;  options.closurePass  |=  false;	  options.closurePass    |=    false;    OptionHandler    optionHandler    =    flags.process_closure_primitives;    options.closurePass    |=    false;    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
2	[BUG]  [BUGGY]  optionHandler  |=  flags.process_closure_primitives;  options.closurePass  |=  false;  [CE]  cannot  find  symbol  optionHandler  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  optionHandler  |=  flags.process_closure_primitives;  options.closurePass  |=  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	optionHandler  |=  flags.process_closure_primitives;  options.closurePass  |=  false;	  options.closurePass    |=    false;    OptionHandler    optionHandler    =    flags.process_closure_primitives;    options.closurePass    |=    false;    	non-compiled	[CE]  cannot  find  symbol  optionHandler	95	None	replace
3	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  flags.process_closure_primitives;  options.closurePass  |=  false;  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  OptionHandler  optionHandler  =  flags.process_closure_primitives;  options.closurePass  |=  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	OptionHandler  optionHandler  =  flags.process_closure_primitives;  options.closurePass  |=  false;	  options.closurePass    |=    false;    OptionHandler    optionHandler    =    flags.process_closure_primitives;    options.closurePass    |=    false;    	non-compiled	[CE]  incompatible  types	95	None	replace
4	[BUG]  [BUGGY]  optionHandler  =  flags.process_closure_primitives;  options.closurePass  |=  false;  [CE]  cannot  find  symbol  optionHandler  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  optionHandler  =  flags.process_closure_primitives;  options.closurePass  |=  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	optionHandler  =  flags.process_closure_primitives;  options.closurePass  |=  false;	  options.closurePass    |=    false;    OptionHandler    optionHandler    =    flags.process_closure_primitives;    options.closurePass    |=    false;    	non-compiled	[CE]  cannot  find  symbol  optionHandler	95	None	replace
5	[BUG]  [BUGGY]  options.closurePass  =  true;  Options.closurePass  =  false;  [CE]  cannot  find  symbol  Options  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  true;  Options.closurePass  =  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  true;  Options.closurePass  =  false;	  options.closurePass    =    false;    Options.closurePass    =    false;    	non-compiled	[CE]  cannot  find  symbol  Options	65	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          initOptionsFromFlags(options);  initOptionsFromFlags(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	                initOptionsFromFlags(options);    initOptionsFromFlags(options);	  	compilable	  [FE]  AssertionFailedError  	61	1	add
7	[BUG]  [BUGGY]          initOptionsFromFlags(options);  initOptionsFromFlags(options);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          initOptionsFromFlags(options);  initOptionsFromFlags(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                initOptionsFromFlags(options);    initOptionsFromFlags(options);	  	compilable	  [FE]  AssertionFailedError  	61	1	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          initOptionsFromFlags(options);  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	                initOptionsFromFlags(options);    if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
9	[BUG]  [BUGGY]          initOptionsFromFlags(options);  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          initOptionsFromFlags(options);  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                initOptionsFromFlags(options);    if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
10	[BUG]  [BUGGY]          initOptionsFromFlags(options);  if(flags.process_closure_primitives)  {  for(AssertionFailedError  error  :  flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          initOptionsFromFlags(options);  if(flags.process_closure_primitives)  {  for(AssertionFailedError  error  :  flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                initOptionsFromFlags(options);    if(flags.process_closure_primitives)  {  for(AssertionFailedError  error  :  flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }	  	non-compiled	[CE]  ';'  expected	61	None	add
11	[BUG]  [BUGGY]          initOptionsFromFlags(options);  if(flags.process_closure_primitives)  {  for(FormattingOption  p  :  flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          initOptionsFromFlags(options);  if(flags.process_closure_primitives)  {  for(FormattingOption  p  :  flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                initOptionsFromFlags(options);    if(flags.process_closure_primitives)  {  for(FormattingOption  p  :  flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }	  	non-compiled	[CE]  ';'  expected	61	None	add
12	[BUG]  [BUGGY]          initOptionsFromFlags(options);  if(flags.process_closure_primitives)  {  for(AssertionFailedError  <  FALSES>)  {  level.setDebugOptionsForCompilationLevel(options);  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          initOptionsFromFlags(options);  if(flags.process_closure_primitives)  {  for(AssertionFailedError  <  FALSES>)  {  level.setDebugOptionsForCompilationLevel(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                initOptionsFromFlags(options);    if(flags.process_closure_primitives)  {  for(AssertionFailedError  <  FALSES>)  {  level.setDebugOptionsForCompilationLevel(options);  }	  	non-compiled	[CE]  not  a  statement	61	None	add
13	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.logging_level,  flags.logging_level);  [CE]  boolean  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.logging_level,  flags.logging_level);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.logging_level,  flags.logging_level);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.logging_level);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	70	None	replace
14	[BUG]  [BUGGY]  options.closurePass  |=  flags.logging_level.isEnabled(flags.logging_level);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.logging_level.isEnabled(flags.logging_level);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.logging_level.isEnabled(flags.logging_level);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.logging_level);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
15	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.logging_level,  wLevel);  [CE]  boolean  cannot  be  dereferenced  [FE]                        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.logging_level,  wLevel);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.logging_level,  wLevel);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.logging_level);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	70	None	replace
16	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.logging_level,  warning_level);  [CE]  cannot  find  symbol  warning_level  [FE]                          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.logging_level,  warning_level);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.logging_level,  warning_level);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.logging_level);    	non-compiled	[CE]  cannot  find  symbol  warning_level	70	None	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  options.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	options.closurePass        |=!flags.process_closure_primitives;        if(flags.process_closure_primitives)    {    options.closurePass    |=!flags.process_closure_primitives;    }    options.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }	  	compilable	  [FE]  AssertionFailedError  	72	1	add
18	[BUG]  [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  options.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  options.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=!flags.process_closure_primitives;        if(flags.process_closure_primitives)    {    options.closurePass    |=!flags.process_closure_primitives;    }    options.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }	  	compilable	  [FE]  AssertionFailedError  	72	1	add
19	[BUG]  [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  Options.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  [CE]  cannot  find  symbol  Options  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  Options.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=!flags.process_closure_primitives;        if(flags.process_closure_primitives)    {    options.closurePass    |=!flags.process_closure_primitives;    }    Options.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }	  	non-compiled	[CE]  cannot  find  symbol  Options	72	None	add
20	[BUG]  [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  OptionPass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  [CE]  cannot  find  symbol  OptionPass  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  OptionPass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=!flags.process_closure_primitives;        if(flags.process_closure_primitives)    {    options.closurePass    |=!flags.process_closure_primitives;    }    OptionPass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }	  	non-compiled	[CE]  cannot  find  symbol  OptionPass	72	None	add
21	[BUG]  [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  options.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  options.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=!flags.process_closure_primitives;        if(flags.process_closure_primitives)    {    options.closurePass    |=!flags.process_closure_primitives;    }    options.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;	  	non-compiled	[CE]  ';'  expected	72	None	add
22	[BUG]  [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=!flags.process_closure_primitives;        if(flags.process_closure_primitives)    {    options.closurePass    |=!flags.process_closure_primitives;    }    if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }	  	non-compiled	[CE]  ';'  expected	72	None	add
23	[BUG]  [BUGGY]  optionPass  =  false;  if(flags.closurePass!=  false)  {  options.closurePass  =  false;  }  [CE]  cannot  find  symbol  optionPass  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  optionPass  =  false;  if(flags.closurePass!=  false)  {  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	optionPass  =  false;  if(flags.closurePass!=  false)  {  options.closurePass  =  false;  }	  options.closurePass    =    false;    if(flags.closurePass    >=    false)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  cannot  find  symbol  optionPass	66	None	replace
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  false;  if(flags.process_closure_primitives!=  false)  {  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	options.closurePass  =  false;  if(flags.process_closure_primitives!=  false)  {  options.closurePass  =  false;  }	  options.closurePass    =    false;    if(flags.closurePass    >=    false)    {    options.closurePass    =    false;    }    	compilable	  [FE]  AssertionFailedError  	66	1	replace
25	[BUG]  [BUGGY]  options.closurePass  =  false;  if(flags.process_closure_primitives!=  false)  {  options.closurePass  =  false;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  false;  if(flags.process_closure_primitives!=  false)  {  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  false;  if(flags.process_closure_primitives!=  false)  {  options.closurePass  =  false;  }	  options.closurePass    =    false;    if(flags.closurePass    >=    false)    {    options.closurePass    =    false;    }    	compilable	  [FE]  AssertionFailedError  	66	1	replace
26	[BUG]  [BUGGY]  optionPass  =  false;  if(flags.closurePass  ==  false)  {  options.closurePass  =  false;  }  [CE]  cannot  find  symbol  optionPass  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  optionPass  =  false;  if(flags.closurePass  ==  false)  {  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	optionPass  =  false;  if(flags.closurePass  ==  false)  {  options.closurePass  =  false;  }	  options.closurePass    =    false;    if(flags.closurePass    >=    false)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  cannot  find  symbol  optionPass	66	None	replace
27	[BUG]  [BUGGY]  flags.process_closure_primitives(options,  wLevel);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives(options,  wLevel);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives(options,  wLevel);	  flags.process_closure_primitives(options);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
28	[BUG]  [BUGGY]  Flags  flags  =  flags.process_closure_primitives(options);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Flags  flags  =  flags.process_closure_primitives(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Flags  flags  =  flags.process_closure_primitives(options);	  flags.process_closure_primitives(options);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
29	[BUG]  [BUGGY]  flags.process_closure_primitives(options,  formattingOption);  [CE]  cannot  find  symbol  formattingOption  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives(options,  formattingOption);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives(options,  formattingOption);	  flags.process_closure_primitives(options);    	non-compiled	[CE]  cannot  find  symbol  formattingOption	5	None	replace
30	[BUG]  [BUGGY]  flags.process_closure_primitives(options,  flags);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives(options,  flags);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives(options,  flags);	  flags.process_closure_primitives(options);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	options.closurePass  =  flags.process_closure_primitives;	  options.closurePass    =    flags.closurepass;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
32	[BUG]  [BUGGY]  options.closurePass  =  flags.process_closure_primitives;  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  flags.process_closure_primitives;	  options.closurePass    =    flags.closurepass;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
33	[BUG]  [BUGGY]  options.closurePass  =  flags.prototype_closure_primitives;  [CE]  cannot  find  symbol  prototype_closure_primitives  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  flags.prototype_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  flags.prototype_closure_primitives;	  options.closurePass    =    flags.closurepass;    	non-compiled	[CE]  cannot  find  symbol  prototype_closure_primitives	56	None	replace
34	[BUG]  [BUGGY]  options.closurePass  |=!process_closure_primitives;  OptionPass  |=!flags.process_closure_primitives;  [CE]  cannot  find  symbol  process_closure_primitives  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!process_closure_primitives;  OptionPass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!process_closure_primitives;  OptionPass  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    OptionPass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  cannot  find  symbol  process_closure_primitives	39	None	replace
35	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  OptionsPass  |=!flags.process_closure_primitives;  [CE]  cannot  find  symbol  OptionsPass  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  OptionsPass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.process_closure_primitives;  OptionsPass  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    OptionPass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  cannot  find  symbol  OptionsPass	39	None	replace
36	[BUG]  [BUGGY]  options  |=!flags.process_closure_primitives;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    OptionPass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	39	None	replace
37	[BUG]  [BUGGY]  OptionsPass  |=!flags.process_closure_primitives;  [CE]  cannot  find  symbol  OptionsPass  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  OptionsPass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	OptionsPass  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    OptionPass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  cannot  find  symbol  OptionsPass	39	None	replace
38	[BUG]  [BUGGY]  options.closurePass  =  wLevel.closure_pass;  [CE]  cannot  find  symbol  closure_pass  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  wLevel.closure_pass;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  wLevel.closure_pass;	  options.closurePass    =    wLevel;    	non-compiled	[CE]  cannot  find  symbol  closure_pass	55	None	replace
39	[BUG]  [BUGGY]  options.closurePass  =  wLevel.warning_level;  [CE]  cannot  find  symbol  warning_level  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  wLevel.warning_level;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  wLevel.warning_level;	  options.closurePass    =    wLevel;    	non-compiled	[CE]  cannot  find  symbol  warning_level	55	None	replace
40	[BUG]  [BUGGY]  options.closurePass  =  wLevel.closurePass;  [CE]  cannot  find  symbol  closurePass  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  wLevel.closurePass;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  wLevel.closurePass;	  options.closurePass    =    wLevel;    	non-compiled	[CE]  cannot  find  symbol  closurePass	55	None	replace
41	[BUG]  [BUGGY]  Options.closurePass  =  flags.process_closure_primitives;  [CE]  cannot  find  symbol  Options  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  =  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  =  flags.process_closure_primitives;	  Options.closurePass    =    true;    	non-compiled	[CE]  cannot  find  symbol  Options	26	None	replace
42	[BUG]  [BUGGY]  Options.closurePass  =  flags.prototype_closure_primitives;  [CE]  cannot  find  symbol  Options  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  =  flags.prototype_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  =  flags.prototype_closure_primitives;	  Options.closurePass    =    true;    	non-compiled	[CE]  cannot  find  symbol  Options	26	None	replace
43	[BUG]  [BUGGY]  Option.closurePass  =  false;  [CE]  cannot  find  symbol  closurePass  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Option.closurePass  =  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Option.closurePass  =  false;	  Options.closurePass    =    true;    	non-compiled	[CE]  cannot  find  symbol  closurePass	26	None	replace
44	[BUG]  [BUGGY]  options.closurePass  =  'n',  flags.process_closure_primitives;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  'n',  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  'n',  flags.process_closure_primitives;	  options.closurePass    =    'n';    	non-compiled	[CE]  ';'  expected	10	None	replace
45	[BUG]  [BUGGY]  options.closurePass  =  'n'  ||  flags.process_closure_primitives;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  'n'  ||  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  'n'  ||  flags.process_closure_primitives;	  options.closurePass    =    'n';    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	10	None	replace
46	[BUG]  [BUGGY]  options.closurePass  =  'n',  flags.prototype_closure_primitives;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  'n',  flags.prototype_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  'n',  flags.prototype_closure_primitives;	  options.closurePass    =    'n';    	non-compiled	[CE]  ';'  expected	10	None	replace
47	[BUG]  [BUGGY]  options.closurePass  =  'n'  ||  flags.closurePass;  [CE]  cannot  find  symbol  closurePass  [FE]                        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  'n'  ||  flags.closurePass;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  'n'  ||  flags.closurePass;	  options.closurePass    =    'n';    	non-compiled	[CE]  cannot  find  symbol  closurePass	10	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	          initOptionsFromFlags(options);    	compilable	  [FE]  AssertionFailedError  	62	1	replace
49	[BUG]  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	          initOptionsFromFlags(options);    	compilable	  [FE]  AssertionFailedError  	62	1	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  level.setDebugOptionsForCompilationLevel(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  level.setDebugOptionsForCompilationLevel(options);  }	          initOptionsFromFlags(options);    	compilable	  [FE]  AssertionFailedError  	62	6	replace
51	[BUG]  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  level.setDebugOptionsForCompilationLevel(options);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  level.setDebugOptionsForCompilationLevel(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  level.setDebugOptionsForCompilationLevel(options);  }	          initOptionsFromFlags(options);    	compilable	  [FE]  AssertionFailedError  	62	6	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(!flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	if(!flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	          initOptionsFromFlags(options);    	compilable	  [FE]  AssertionFailedError  	62	1	replace
53	[BUG]  [BUGGY]  if(!flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(!flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	if(!flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	          initOptionsFromFlags(options);    	compilable	  [FE]  AssertionFailedError  	62	1	replace
54	[BUG]  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  level.setDebugOptionsForWarningLevel(options);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  level.setDebugOptionsForWarningLevel(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  level.setDebugOptionsForWarningLevel(options);  }	          initOptionsFromFlags(options);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
55	[BUG]  [BUGGY]  this.logging_level  =  flags.process_closure_primitives;  [CE]  cannot  find  symbol  logging_level  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  this.logging_level  =  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	this.logging_level  =  flags.process_closure_primitives;	          logging_level    =    flags.process_closure_primitives;    	non-compiled	[CE]  cannot  find  symbol  logging_level	60	None	replace
56	[BUG]  [BUGGY]  processing_level  =  flags.process_closure_primitives;  [CE]  cannot  find  symbol  processing_level  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  processing_level  =  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	processing_level  =  flags.process_closure_primitives;	          logging_level    =    flags.process_closure_primitives;    	non-compiled	[CE]  cannot  find  symbol  processing_level	60	None	replace
57	[BUG]  [BUGGY]  flags.process_closure_primitives;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives;	          logging_level    =    flags.process_closure_primitives;    	non-compiled	[CE]  not  a  statement	60	None	replace
58	[BUG]  [BUGGY]  flags.setDebugOptionsForCompilationLevel(options);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.setDebugOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.setDebugOptionsForCompilationLevel(options);	          logging_level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
59	[BUG]  [BUGGY]  this.logging_level.setDebugOptionsForCompilationLevel(options);  [CE]  cannot  find  symbol  logging_level  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  this.logging_level.setDebugOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	this.logging_level.setDebugOptionsForCompilationLevel(options);	          logging_level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  cannot  find  symbol  logging_level	59	None	replace
60	[BUG]  [BUGGY]  implementation_level.setDebugOptionsForCompilationLevel(options);  [CE]  cannot  find  symbol  implementation_level  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  implementation_level.setDebugOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	implementation_level.setDebugOptionsForCompilationLevel(options);	          logging_level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  cannot  find  symbol  implementation_level	59	None	replace
61	[BUG]  [BUGGY]  bugs.setDebugOptionsForCompilationLevel(options);  [CE]  cannot  find  symbol  bugs  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  bugs.setDebugOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	bugs.setDebugOptionsForCompilationLevel(options);	          logging_level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  cannot  find  symbol  bugs	59	None	replace
62	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level,  wLevel.process_closure_primitives);  [CE]  cannot  find  symbol  process_closure_primitives  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level,  wLevel.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level,  wLevel.process_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.warning_level,    flags.process_closure_primitives);    	non-compiled	[CE]  cannot  find  symbol  process_closure_primitives	43	None	replace
63	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(wLevel,  flags.warning_level,  flags.process_closure_primitives);  [CE]  boolean  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(wLevel,  flags.warning_level,  flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(wLevel,  flags.warning_level,  flags.process_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.warning_level,    flags.process_closure_primitives);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	43	None	replace
64	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags,  flags.warning_level,  flags.process_closure_primitives);  [CE]  boolean  cannot  be  dereferenced  [FE]                        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags,  flags.warning_level,  flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags,  flags.warning_level,  flags.process_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.warning_level,    flags.process_closure_primitives);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	43	None	replace
65	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level,  flags.factory_closure_primitives);  [CE]  cannot  find  symbol  factory_closure_primitives  [FE]                          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level,  flags.factory_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level,  flags.factory_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.warning_level,    flags.process_closure_primitives);    	non-compiled	[CE]  cannot  find  symbol  factory_closure_primitives	43	None	replace
66	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  &&  flags.debug);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  &&  flags.debug);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.process_closure_primitives  &&  flags.debug);	  options.closurePass    |=!flags.process_closure_primitives    ||    flags.debug);    	non-compiled	[CE]  ';'  expected	12	None	replace
67	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||  flags.warning_level);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||  flags.warning_level);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.process_closure_primitives  ||  flags.warning_level);	  options.closurePass    |=!flags.process_closure_primitives    ||    flags.debug);    	non-compiled	[CE]  ';'  expected	12	None	replace
68	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||  flags.error);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||  flags.error);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.process_closure_primitives  ||  flags.error);	  options.closurePass    |=!flags.process_closure_primitives    ||    flags.debug);    	non-compiled	[CE]  ';'  expected	12	None	replace
69	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||  flags.warning_pass);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||  flags.warning_pass);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.process_closure_primitives  ||  flags.warning_pass);	  options.closurePass    |=!flags.process_closure_primitives    ||    flags.debug);    	non-compiled	[CE]  ';'  expected	12	None	replace
70	[BUG]  [BUGGY]  options.closurePass  |=  false;  if(flags.prototype_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  [CE]  cannot  find  symbol  prototype_closure_primitives  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  false;  if(flags.prototype_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  false;  if(flags.prototype_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }	  options.closurePass    |=    false;    if(flags.closurePass    |=    false)    {    options.closurePass    |=    false;    }    	non-compiled	[CE]  cannot  find  symbol  prototype_closure_primitives	20	None	replace
71	[BUG]  [BUGGY]  options.closurePass  |=  false;  if(flags.closurePass  |=  true)  {  options.closurePass  |=  false;  }  [CE]  cannot  find  symbol  closurePass  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  false;  if(flags.closurePass  |=  true)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  false;  if(flags.closurePass  |=  true)  {  options.closurePass  |=  false;  }	  options.closurePass    |=    false;    if(flags.closurePass    |=    false)    {    options.closurePass    |=    false;    }    	non-compiled	[CE]  cannot  find  symbol  closurePass	20	None	replace
72	[BUG]  [BUGGY]  optionPass  =  false;  if(flags.closurePass  =  false)  {  options.closurePass  =  false;  }  [CE]  cannot  find  symbol  optionPass  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  optionPass  =  false;  if(flags.closurePass  =  false)  {  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	optionPass  =  false;  if(flags.closurePass  =  false)  {  options.closurePass  =  false;  }	  options.closurePass    =    false;    if(flags.closurePass    =    false)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  cannot  find  symbol  optionPass	53	None	replace
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  false;  if(flags.process_closure_primitives  =  false)  {  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	options.closurePass  =  false;  if(flags.process_closure_primitives  =  false)  {  options.closurePass  =  false;  }	  options.closurePass    =    false;    if(flags.closurePass    =    false)    {    options.closurePass    =    false;    }    	compilable	  [FE]  AssertionFailedError  	53	1	replace
74	[BUG]  [BUGGY]  options.closurePass  =  false;  if(flags.process_closure_primitives  =  false)  {  options.closurePass  =  false;  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  false;  if(flags.process_closure_primitives  =  false)  {  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  false;  if(flags.process_closure_primitives  =  false)  {  options.closurePass  =  false;  }	  options.closurePass    =    false;    if(flags.closurePass    =    false)    {    options.closurePass    =    false;    }    	compilable	  [FE]  AssertionFailedError  	53	1	replace
75	[BUG]  [BUGGY]  options.closurePass  =  false;  if(flags.closurePass  =  true)  {  options.closurePass  =  false;  }  [CE]  cannot  find  symbol  closurePass  [FE]                      AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  false;  if(flags.closurePass  =  true)  {  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  false;  if(flags.closurePass  =  true)  {  options.closurePass  =  false;  }	  options.closurePass    =    false;    if(flags.closurePass    =    false)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  cannot  find  symbol  closurePass	53	None	replace
76	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level,  wLevel);  [CE]  boolean  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level,  wLevel);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level,  wLevel);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.warning_level);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	42	None	replace
77	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(wLevel,  flags.warning_level);  [CE]  boolean  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(wLevel,  flags.warning_level);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(wLevel,  flags.warning_level);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.warning_level);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	42	None	replace
78	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags,  formattingOption.warning_level);  [CE]  cannot  find  symbol  formattingOption  [FE]                      AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags,  formattingOption.warning_level);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags,  formattingOption.warning_level);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.warning_level);    	non-compiled	[CE]  cannot  find  symbol  formattingOption	42	None	replace
79	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(wLevel.warning_level);  [CE]  cannot  find  symbol  warning_level  [FE]                        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(wLevel.warning_level);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(wLevel.warning_level);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.warning_level);    	non-compiled	[CE]  cannot  find  symbol  warning_level	42	None	replace
80	[BUG]  [BUGGY]  Options.closurePass  |=!factory.process_closure_primitives;  [CE]  cannot  find  symbol  Options  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  |=!factory.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  |=!factory.process_closure_primitives;	  Options.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  cannot  find  symbol  Options	84	None	replace
81	[BUG]  [BUGGY]  Options.closurePass  |=!process_closure_primitives;  [CE]  cannot  find  symbol  Options  [FE]                      AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  |=!process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  |=!process_closure_primitives;	  Options.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  cannot  find  symbol  Options	84	None	replace
82	[BUG]  [BUGGY]  Options.closurePass  |=!flags.prototype_closure_primitives;  [CE]  cannot  find  symbol  Options  [FE]                        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  |=!flags.prototype_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  |=!flags.prototype_closure_primitives;	  Options.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  cannot  find  symbol  Options	84	None	replace
83	[BUG]  [BUGGY]  Options.closurePass  |=!factors.process_closure_primitives;  [CE]  cannot  find  symbol  Options  [FE]                          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  |=!factors.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  |=!factors.process_closure_primitives;	  Options.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  cannot  find  symbol  Options	84	None	replace
84	[BUG]  [BUGGY]  options.closurePass  |=  flags.prototype_closure_primitives;  [CE]  cannot  find  symbol  prototype_closure_primitives  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.prototype_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.prototype_closure_primitives;	  options.closurePass    |=    0;    	non-compiled	[CE]  cannot  find  symbol  prototype_closure_primitives	31	None	replace
85	[BUG]  [BUGGY]  options.closurePass  |=  flags.protocol_closure_primitives;  [CE]  cannot  find  symbol  protocol_closure_primitives  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.protocol_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.protocol_closure_primitives;	  options.closurePass    |=    0;    	non-compiled	[CE]  cannot  find  symbol  protocol_closure_primitives	31	None	replace
86	[BUG]  [BUGGY]  options.closurePass  |=  flags.test_closure_primitives;  [CE]  cannot  find  symbol  test_closure_primitives  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.test_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.test_closure_primitives;	  options.closurePass    |=    0;    	non-compiled	[CE]  cannot  find  symbol  test_closure_primitives	31	None	replace
87	[BUG]  [BUGGY]  options.closurePass  |=  flags.warning_level;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.warning_level;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.warning_level;	  options.closurePass    |=    0;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	31	None	replace
88	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  false;  if(flags.process_closure_primitives  ==  false)  {  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	options.closurePass  =  false;  if(flags.process_closure_primitives  ==  false)  {  options.closurePass  =  false;  }	  options.closurePass    =    false;    if(flags.closurePass    ==    false)    {    options.closurePass    =    false;    }    	compilable	  [FE]  AssertionFailedError  	63	1	replace
89	[BUG]  [BUGGY]  options.closurePass  =  false;  if(flags.process_closure_primitives  ==  false)  {  options.closurePass  =  false;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  false;  if(flags.process_closure_primitives  ==  false)  {  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  false;  if(flags.process_closure_primitives  ==  false)  {  options.closurePass  =  false;  }	  options.closurePass    =    false;    if(flags.closurePass    ==    false)    {    options.closurePass    =    false;    }    	compilable	  [FE]  AssertionFailedError  	63	1	replace
90	[BUG]  [BUGGY]  optionPass  =  false;  if(flags.closurePass)  {  options.closurePass  =  false;  }  [CE]  cannot  find  symbol  optionPass  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  optionPass  =  false;  if(flags.closurePass)  {  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	optionPass  =  false;  if(flags.closurePass)  {  options.closurePass  =  false;  }	  options.closurePass    =    false;    if(flags.closurePass)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  cannot  find  symbol  optionPass	49	None	replace
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  false;  if(flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	options.closurePass  =  false;  if(flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  options.closurePass    =    false;    if(flags.closurePass)    {    options.closurePass    =    false;    }    	compilable	  [FE]  AssertionFailedError  	49	1	replace
92	[BUG]  [BUGGY]  options.closurePass  =  false;  if(flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  false;  if(flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  false;  if(flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  options.closurePass    =    false;    if(flags.closurePass)    {    options.closurePass    =    false;    }    	compilable	  [FE]  AssertionFailedError  	49	1	replace
93	[BUG]  [BUGGY]  optionPass  =  false;  if(flags.closurePass  ||  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [CE]  cannot  find  symbol  optionPass  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  optionPass  =  false;  if(flags.closurePass  ||  flags.process_closure_primitives)  {  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	optionPass  =  false;  if(flags.closurePass  ||  flags.process_closure_primitives)  {  options.closurePass  =  false;  }	  options.closurePass    =    false;    if(flags.closurePass)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  cannot  find  symbol  optionPass	49	None	replace
94	[BUG]  [BUGGY]  options.closurePass  |=  FALSES;  [CE]  cannot  find  symbol  FALSES  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  FALSES;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  FALSES;	  options.closurePass    |=    true;    	non-compiled	[CE]  cannot  find  symbol  FALSES	30	None	replace
95	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_pass);  [CE]  cannot  find  symbol  warning_pass  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_pass);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_pass);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.closure_pass);    	non-compiled	[CE]  cannot  find  symbol  warning_pass	69	None	replace
96	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.source_closure_pass);  [CE]  cannot  find  symbol  source_closure_pass  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.source_closure_pass);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.source_closure_pass);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.closure_pass);    	non-compiled	[CE]  cannot  find  symbol  source_closure_pass	69	None	replace
97	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.source_closure_primitives);  [CE]  cannot  find  symbol  source_closure_primitives  [FE]                      AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.source_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.source_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.closure_pass);    	non-compiled	[CE]  cannot  find  symbol  source_closure_primitives	69	None	replace
98	[BUG]  [BUGGY]  options.closurePass  |=  flags.factory_closure_primitives.isEnabled(flags.factory_closure_primitives);  [CE]  cannot  find  symbol  factory_closure_primitives  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.factory_closure_primitives.isEnabled(flags.factory_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.factory_closure_primitives.isEnabled(flags.factory_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.factory_closure_primitives);    	non-compiled	[CE]  cannot  find  symbol  factory_closure_primitives	90	None	replace
99	[BUG]  [BUGGY]  options.closurePass  |=  flags.factory_closure_primitives.isEnabled(flags.process_closure_primitives);  [CE]  cannot  find  symbol  factory_closure_primitives  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.factory_closure_primitives.isEnabled(flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.factory_closure_primitives.isEnabled(flags.process_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.factory_closure_primitives);    	non-compiled	[CE]  cannot  find  symbol  factory_closure_primitives	90	None	replace
100	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.factory_closure_primits);  [CE]  cannot  find  symbol  factory_closure_primits  [FE]                      AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.factory_closure_primits);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.factory_closure_primits);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.factory_closure_primitives);    	non-compiled	[CE]  cannot  find  symbol  factory_closure_primits	90	None	replace
101	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.factory_closure_primitives,  wLevel);  [CE]  cannot  find  symbol  factory_closure_primitives  [FE]                        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.factory_closure_primitives,  wLevel);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.factory_closure_primitives,  wLevel);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.factory_closure_primitives);    	non-compiled	[CE]  cannot  find  symbol  factory_closure_primitives	90	None	replace
102	[BUG]  [BUGGY]  options.closurePass  |=  true;  if(flags.process_closure_primitives)  {  if(options.closurePass  |=  false;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  true;  if(flags.process_closure_primitives)  {  if(options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  true;  if(flags.process_closure_primitives)  {  if(options.closurePass  |=  false;  }	  options.closurePass    |=    false;    if(flags.process_closure_primitives)    {    if(options.closurePass    |=    false;    }    	non-compiled	[CE]  ')'  expected	23	None	replace
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(options.closurePass  ==  false)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	if(options.closurePass  ==  false)  {  options.closurePass  |=  false;  }	  options.closurePass    |=    false;    if(flags.process_closure_primitives)    {    if(options.closurePass    |=    false;    }    	compilable	  [FE]  AssertionFailedError  	23	1	replace
104	[BUG]  [BUGGY]  if(options.closurePass  ==  false)  {  options.closurePass  |=  false;  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(options.closurePass  ==  false)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	if(options.closurePass  ==  false)  {  options.closurePass  |=  false;  }	  options.closurePass    |=    false;    if(flags.process_closure_primitives)    {    if(options.closurePass    |=    false;    }    	compilable	  [FE]  AssertionFailedError  	23	1	replace
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(options.closurePass!=  false)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	if(options.closurePass!=  false)  {  options.closurePass  |=  false;  }	  options.closurePass    |=    false;    if(flags.process_closure_primitives)    {    if(options.closurePass    |=    false;    }    	compilable	  [FE]  AssertionFailedError  	23	1	replace
106	[BUG]  [BUGGY]  if(options.closurePass!=  false)  {  options.closurePass  |=  false;  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(options.closurePass!=  false)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	if(options.closurePass!=  false)  {  options.closurePass  |=  false;  }	  options.closurePass    |=    false;    if(flags.process_closure_primitives)    {    if(options.closurePass    |=    false;    }    	compilable	  [FE]  AssertionFailedError  	23	1	replace
107	[BUG]  [BUGGY]  Options.closurePass  |=  false;  [CE]  cannot  find  symbol  Options  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  |=  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  |=  false;	  options.closurePass    |=    false;    if(flags.process_closure_primitives    |=    false)    {    options.closurePass    |=    false;    }    	non-compiled	[CE]  cannot  find  symbol  Options	22	None	replace
108	[BUG]  [BUGGY]  flags.process_closure_primitives();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives();  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives();	  flags.process_closure_primitives    =    flags.process_closure_primitives();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
109	[BUG]  [BUGGY]  flags.process_closure_primitives(flags.process_closure_primitives());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives(flags.process_closure_primitives());  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives(flags.process_closure_primitives());	  flags.process_closure_primitives    =    flags.process_closure_primitives();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
110	[BUG]  [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primits();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primits();  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives  =  flags.process_closure_primits();	  flags.process_closure_primitives    =    flags.process_closure_primitives();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
111	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	options.closurePass    |=!flags.process_closure_primitives    ||!flags.process_closure_primitives;    options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;	  	compilable	  [FE]  AssertionFailedError  	13	1	add
112	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=!flags.process_closure_primitives    ||!flags.process_closure_primitives;    options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;	  	compilable	  [FE]  AssertionFailedError  	13	1	add
113	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  Options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  [CE]  cannot  find  symbol  Options  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  Options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=!flags.process_closure_primitives    ||!flags.process_closure_primitives;    Options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;	  	non-compiled	[CE]  cannot  find  symbol  Options	13	None	add
114	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  OptionPass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  [CE]  cannot  find  symbol  OptionPass  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  OptionPass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=!flags.process_closure_primitives    ||!flags.process_closure_primitives;    OptionPass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;	  	non-compiled	[CE]  cannot  find  symbol  OptionPass	13	None	add
115	[BUG]  [BUGGY]  flags  =  flags.process_closure_primitives();  level.setDebugOptionsForCompilationLevel(options);  [CE]  cannot  assign  a  value  to  final  variable  flags  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags  =  flags.process_closure_primitives();  level.setDebugOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags  =  flags.process_closure_primitives();  level.setDebugOptionsForCompilationLevel(options);	  Flags    flags    =    flags.process_closure_primitives();    level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  flags	93	None	replace
116	[BUG]  [BUGGY]  Flags  flags  =  flags.process_closure_primitives();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Flags  flags  =  flags.process_closure_primitives();  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Flags  flags  =  flags.process_closure_primitives();	  Flags    flags    =    flags.process_closure_primitives();    level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
117	[BUG]  [BUGGY]  Flags  flags  =  flags.process_closure_primitives();  wLevel.setDebugOptionsForCompilationLevel(options);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Flags  flags  =  flags.process_closure_primitives();  wLevel.setDebugOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Flags  flags  =  flags.process_closure_primitives();  wLevel.setDebugOptionsForCompilationLevel(options);	  Flags    flags    =    flags.process_closure_primitives();    level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
118	[BUG]  [BUGGY]  OptionsHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  options.closurePass  |=  false;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  OptionsHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  options.closurePass  |=  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	OptionsHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  options.closurePass  |=  false;	  options.closurePass    |=    false;    OptionHandler    optionHandler    =    new    OptionHandler(flags.process_closure_primitives);    options.closurePass    |=    false;    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
119	[BUG]  [BUGGY]  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  options.closurePass  |=  false;  [CE]  cannot  find  symbol  optionHandler  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  options.closurePass  |=  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  options.closurePass  |=  false;	  options.closurePass    |=    false;    OptionHandler    optionHandler    =    new    OptionHandler(flags.process_closure_primitives);    options.closurePass    |=    false;    	non-compiled	[CE]  cannot  find  symbol  optionHandler	94	None	replace
120	[BUG]  [BUGGY]  optionHandler  |=  flags.process_closure_primitives;  [CE]  cannot  find  symbol  optionHandler  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  optionHandler  |=  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	optionHandler  |=  flags.process_closure_primitives;	  options.closurePass    |=    false;    OptionHandler    optionHandler    =    new    OptionHandler(flags.process_closure_primitives);    options.closurePass    |=    false;    	non-compiled	[CE]  cannot  find  symbol  optionHandler	94	None	replace
121	[BUG]  [BUGGY]  Option.closurePass  =  flags.process_closure_primitives;  [CE]  cannot  find  symbol  closurePass  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Option.closurePass  =  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Option.closurePass  =  flags.process_closure_primitives;	  Option.closurePass    =    true;    	non-compiled	[CE]  cannot  find  symbol  closurePass	27	None	replace
122	[BUG]  [BUGGY]  Option.closurePass  =  flags.prototype_closure_primitives;  [CE]  cannot  find  symbol  closurePass  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Option.closurePass  =  flags.prototype_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Option.closurePass  =  flags.prototype_closure_primitives;	  Option.closurePass    =    true;    	non-compiled	[CE]  cannot  find  symbol  closurePass	27	None	replace
123	[BUG]  [BUGGY]  Option.closurePass  =  flags.protocol_closure_primitives;  [CE]  cannot  find  symbol  closurePass  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Option.closurePass  =  flags.protocol_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Option.closurePass  =  flags.protocol_closure_primitives;	  Option.closurePass    =    true;    	non-compiled	[CE]  cannot  find  symbol  closurePass	27	None	replace
124	[BUG]  [BUGGY]  options.closurePass  |=  1;  if(flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  1;  if(flags.process_closure_primitives)  {  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  1;  if(flags.process_closure_primitives)  {	  options.closurePass    |=    false;    if(flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	82	None	replace
125	[BUG]  [BUGGY]  options.closurePass  |=  true;  if(flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  true;  if(flags.process_closure_primitives)  {  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  true;  if(flags.process_closure_primitives)  {	  options.closurePass    |=    false;    if(flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	82	None	replace
126	[BUG]  [BUGGY]  options.closurePass  |=  0;  if(flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  0;  if(flags.process_closure_primitives)  {  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  0;  if(flags.process_closure_primitives)  {	  options.closurePass    |=    false;    if(flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	82	None	replace
127	[BUG]  [BUGGY]  options.closurePass  |=  1;  if(!flags.process_closure_primitives)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  1;  if(!flags.process_closure_primitives)  {  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  1;  if(!flags.process_closure_primitives)  {	  options.closurePass    |=    false;    if(flags.process_closure_primitives)    {    	non-compiled	[CE]  ';'  expected	82	None	replace
128	[BUG]  [BUGGY]  options.closurePass  |=  wLevel.process_closure_primitives.isEnabled(flags.process_closure_primitives);  [CE]  cannot  find  symbol  process_closure_primitives  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  wLevel.process_closure_primitives.isEnabled(flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  wLevel.process_closure_primitives.isEnabled(flags.process_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(wLevel.process_closure_primitives);    	non-compiled	[CE]  cannot  find  symbol  process_closure_primitives	41	None	replace
129	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(wLevel,  flags.process_closure_primitives);  [CE]  boolean  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(wLevel,  flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(wLevel,  flags.process_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(wLevel.process_closure_primitives);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	41	None	replace
130	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(wLevel,  wLevel.process_closure_primitives);  [CE]  cannot  find  symbol  process_closure_primitives  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(wLevel,  wLevel.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(wLevel,  wLevel.process_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(wLevel.process_closure_primitives);    	non-compiled	[CE]  cannot  find  symbol  process_closure_primitives	41	None	replace
131	[BUG]  [BUGGY]  options.closurePass  =  this.process_closure_primitives;  [CE]  cannot  find  symbol  process_closure_primitives  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  this.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  this.process_closure_primitives;	  options.closurePass    =    password;    	non-compiled	[CE]  cannot  find  symbol  process_closure_primitives	78	None	replace
132	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_primitives);  [CE]  cannot  find  symbol  warning_primitives  [FE]                      AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.protocol_closure_primitives);    	non-compiled	[CE]  cannot  find  symbol  warning_primitives	44	None	replace
133	[BUG]  [BUGGY]  options.closurePass  |=  flags.protocol_closure_primitives.isEnabled(flags.protocol_closure_primitives);  [CE]  cannot  find  symbol  protocol_closure_primitives  [FE]                        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.protocol_closure_primitives.isEnabled(flags.protocol_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.protocol_closure_primitives.isEnabled(flags.protocol_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.protocol_closure_primitives);    	non-compiled	[CE]  cannot  find  symbol  protocol_closure_primitives	44	None	replace
134	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.compiler_closure_primitives);  [CE]  cannot  find  symbol  compiler_closure_primitives  [FE]                          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.compiler_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.compiler_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.protocol_closure_primitives);    	non-compiled	[CE]  cannot  find  symbol  compiler_closure_primitives	44	None	replace
135	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  level.setDebugOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	                level.setDebugOptionsForCompilationLevel(options);    level.setDebugOptionsForCompilationLevel(options);	  	compilable	  [FE]  AssertionFailedError  	57	6	add
136	[BUG]  [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  level.setDebugOptionsForCompilationLevel(options);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  level.setDebugOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                level.setDebugOptionsForCompilationLevel(options);    level.setDebugOptionsForCompilationLevel(options);	  	compilable	  [FE]  AssertionFailedError  	57	6	add
137	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  flags.process_closure_primitives  =  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	                level.setDebugOptionsForCompilationLevel(options);    flags.process_closure_primitives  =  flags.process_closure_primitives;	  	compilable	  [FE]  AssertionFailedError  	57	6	add
138	[BUG]  [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  flags.process_closure_primitives  =  flags.process_closure_primitives;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  flags.process_closure_primitives  =  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                level.setDebugOptionsForCompilationLevel(options);    flags.process_closure_primitives  =  flags.process_closure_primitives;	  	compilable	  [FE]  AssertionFailedError  	57	6	add
139	[BUG]  [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  wLevel.setDebugOptionsForCompilationLevel(options);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  wLevel.setDebugOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                level.setDebugOptionsForCompilationLevel(options);    wLevel.setDebugOptionsForCompilationLevel(options);	  	non-compiled	[CE]  cannot  find  symbol	57	None	add
140	[BUG]  [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  level.setPropertyOptionsForCompilationLevel(options);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  level.setPropertyOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                level.setDebugOptionsForCompilationLevel(options);    level.setPropertyOptionsForCompilationLevel(options);	  	non-compiled	[CE]  cannot  find  symbol	57	None	add
141	[BUG]  [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  level.setDebugOptionsForProcessingLevel(options);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  level.setDebugOptionsForProcessingLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                level.setDebugOptionsForCompilationLevel(options);    level.setDebugOptionsForProcessingLevel(options);	  	non-compiled	[CE]  cannot  find  symbol	57	None	add
142	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException(   "   ");  }  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	add	options.closurePass        |=        false;        if(flags.process_closure_primitives)    {    throw    new    IllegalArgumentException(   "   ");    }    options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	24	21	add
143	[BUG]  [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException(   "   ");  }  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException(   "   ");  }  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        if(flags.process_closure_primitives)    {    throw    new    IllegalArgumentException(   "   ");    }    options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	24	21	add
144	[BUG]  [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException(   "   ");  }  Options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  cannot  find  symbol  Options  [FE]      IllegalArgumentException    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException(   "   ");  }  Options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        if(flags.process_closure_primitives)    {    throw    new    IllegalArgumentException(   "   ");    }    Options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  cannot  find  symbol  Options	24	None	add
145	[BUG]  [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException(   "   ");  }  OptionPass  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  cannot  find  symbol  OptionPass  [FE]        IllegalArgumentException    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException(   "   ");  }  OptionPass  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        if(flags.process_closure_primitives)    {    throw    new    IllegalArgumentException(   "   ");    }    OptionPass  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  cannot  find  symbol  OptionPass	24	None	add
146	[BUG]  [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException(   "   ");  }  if(flags.closurePass  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException(   "   ");  }  if(flags.closurePass  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        if(flags.process_closure_primitives)    {    throw    new    IllegalArgumentException(   "   ");    }    if(flags.closurePass  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  <identifier>  expected	24	None	add
147	[BUG]  [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException(   "   ");  }  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException(   "   ");  }  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        if(flags.process_closure_primitives)    {    throw    new    IllegalArgumentException(   "   ");    }    |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  <identifier>  expected	24	None	add
148	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.prototype_collection_primitives);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.prototype_collection_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.prototype_collection_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.closure_primitives);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
149	[BUG]  [BUGGY]  solutions.closurePass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  solutions.closurePass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	solutions.closurePass  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    solutions.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
150	[BUG]  [BUGGY]  options.closurePass  |=!process_closure_primitives;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    solutions.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
151	[BUG]  [BUGGY]  Solutions.closurePass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Solutions.closurePass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Solutions.closurePass  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    solutions.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
152	[BUG]  [BUGGY]  Lösungen.closurePass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Lösungen.closurePass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Lösungen.closurePass  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    solutions.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
153	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  OptionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	OptionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);	  options.closurePass    |=    false;    OptionHandler    optionHandler    =    new    OptionHandler(flags.process_closure_primitives);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
154	[BUG]  [BUGGY]  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	optionHandler  =  new  OptionHandler(flags.process_closure_primitives);	  options.closurePass    |=    false;    OptionHandler    optionHandler    =    new    OptionHandler(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
155	[BUG]  [BUGGY]  options.closurePass  |=  0;  OptionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  0;  OptionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  0;  OptionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);	  options.closurePass    |=    false;    OptionHandler    optionHandler    =    new    OptionHandler(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
156	[BUG]  [BUGGY]  OptionsHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  OptionsHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	OptionsHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);	  options.closurePass    |=    false;    OptionHandler    optionHandler    =    new    OptionHandler(flags.process_closure_primitives);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
157	[BUG]  [BUGGY]  options.closurePass  |=  1;  OptionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  1;  OptionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  1;  OptionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);	  options.closurePass    |=    false;    OptionHandler    optionHandler    =    new    OptionHandler(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
158	[BUG]  [BUGGY]  options.closurePass  |=  true;  options.closurePass  |=  true;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  true;  options.closurePass  |=  true;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    true;    options.closurePass  |=  true;	  	non-compiled	[CE]  <identifier>  expected	29	None	add
159	[BUG]  [BUGGY]  options.closurePass  |=  true;  if(flags.process_closure_primitives)  {  options.closurePass  |=  true;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  true;  if(flags.process_closure_primitives)  {  options.closurePass  |=  true;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    true;    if(flags.process_closure_primitives)  {  options.closurePass  |=  true;  }	  	non-compiled	[CE]  <identifier>  expected	29	None	add
160	[BUG]  [BUGGY]  options.closurePass  |=  true;  if(flags.closurePass  |=  true)  {  options.closurePass  |=  true;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  true;  if(flags.closurePass  |=  true)  {  options.closurePass  |=  true;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    true;    if(flags.closurePass  |=  true)  {  options.closurePass  |=  true;  }	  	non-compiled	[CE]  <identifier>  expected	29	None	add
161	[BUG]  [BUGGY]  options.closurePass  |=  true;  if(flags.process_closure_primitives  |=  true)  {  options.closurePass  |=  true;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  true;  if(flags.process_closure_primitives  |=  true)  {  options.closurePass  |=  true;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    true;    if(flags.process_closure_primitives  |=  true)  {  options.closurePass  |=  true;  }	  	non-compiled	[CE]  <identifier>  expected	29	None	add
162	[BUG]  [BUGGY]  options.closurePass  |=  true;  Options.closurePass  |=  true;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  true;  Options.closurePass  |=  true;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    true;    Options.closurePass  |=  true;	  	non-compiled	[CE]  <identifier>  expected	29	None	add
163	[BUG]  [BUGGY]  options.closurePass  |=  true;  if(flags.process_closure_primitives)  {  if(options.closurePass  |=  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  true;  if(flags.process_closure_primitives)  {  if(options.closurePass  |=  true;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    true;    if(flags.process_closure_primitives)  {  if(options.closurePass  |=  true;  }	  	non-compiled	[CE]  <identifier>  expected	29	None	add
164	[BUG]  [BUGGY]  options.closurePass  =  flags.protocol_closure_primitives;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  flags.protocol_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  flags.protocol_closure_primitives;	  options.closurePass    =    flags.closure_primitives;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
165	[BUG]  [BUGGY]  options.closurePass  =  flags.block_closure_primitives;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  flags.block_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  flags.block_closure_primitives;	  options.closurePass    =    flags.closure_primitives;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
166	[BUG]  [BUGGY]  options.closurePass  =  new  CompilerOption(flags,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  new  CompilerOption(flags,  flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  new  CompilerOption(flags,  flags.process_closure_primitives);	  options.closurePass    =    new    CompilerOption(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
167	[BUG]  [BUGGY]  options.closurePass  =  new  CompilerOption(flags,  formattingOption.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  new  CompilerOption(flags,  formattingOption.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  new  CompilerOption(flags,  formattingOption.process_closure_primitives);	  options.closurePass    =    new    CompilerOption(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
168	[BUG]  [BUGGY]  options.closurePass  =  new  CompilerOption(process_closure_primitives,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  new  CompilerOption(process_closure_primitives,  flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  new  CompilerOption(process_closure_primitives,  flags.process_closure_primitives);	  options.closurePass    =    new    CompilerOption(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
169	[BUG]  [BUGGY]  options.closurePass  =  new  CompilerOption(flags.process_closure_primitives,  flags.warning_level);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  new  CompilerOption(flags.process_closure_primitives,  flags.warning_level);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  new  CompilerOption(flags.process_closure_primitives,  flags.warning_level);	  options.closurePass    =    new    CompilerOption(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
170	[BUG]  [BUGGY]  options.closurePass  =  true;  ||  flags.process_closure_primitives  ||  flags.closurePass)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  true;  ||  flags.process_closure_primitives  ||  flags.closurePass)  {  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  true;  ||  flags.process_closure_primitives  ||  flags.closurePass)  {	  options.closurePass    =    false;    ||    flags.process_closure_primitives    ||    flags.closurePass)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
171	[BUG]  [BUGGY]  ||  flags.process_closure_primitives  ||  flags.closurePass)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  ||  flags.process_closure_primitives  ||  flags.closurePass)  {  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	||  flags.process_closure_primitives  ||  flags.closurePass)  {	  options.closurePass    =    false;    ||    flags.process_closure_primitives    ||    flags.closurePass)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
172	[BUG]  [BUGGY]  options.closurePass  =  true;  ||  flags.process_closure_primitives  &&  flags.closurePass)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  true;  ||  flags.process_closure_primitives  &&  flags.closurePass)  {  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  true;  ||  flags.process_closure_primitives  &&  flags.closurePass)  {	  options.closurePass    =    false;    ||    flags.process_closure_primitives    ||    flags.closurePass)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
173	[BUG]  [BUGGY]  options.closurePass    |=    false;    options.closurePass  |=  false;  options.closurePass  |=  false;  options.closurePass  |=  false;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    options.closurePass  |=  false;  options.closurePass  |=  false;  options.closurePass  |=  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        options.closurePass    |=    false;    options.closurePass  |=  false;  options.closurePass  |=  false;	  	non-compiled	[CE]  <identifier>  expected	16	None	add
174	[BUG]  [BUGGY]  options.closurePass    |=    false;    options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  options.closurePass  |=  false;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  options.closurePass  |=  false;  }	  	non-compiled	[CE]  <identifier>  expected	16	None	add
175	[BUG]  [BUGGY]  options.closurePass    |=    false;    options.closurePass  |=  false;  Options.closurePass  |=  false;  options.closurePass  |=  false;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    options.closurePass  |=  false;  Options.closurePass  |=  false;  options.closurePass  |=  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        options.closurePass    |=    false;    Options.closurePass  |=  false;  options.closurePass  |=  false;	  	non-compiled	[CE]  <identifier>  expected	16	None	add
176	[BUG]  [BUGGY]  options.closurePass    |=    false;    options.closurePass  |=  false;  OptionPass  |=  false;  options.closurePass  |=  false;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    options.closurePass  |=  false;  OptionPass  |=  false;  options.closurePass  |=  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        options.closurePass    |=    false;    OptionPass  |=  false;  options.closurePass  |=  false;	  	non-compiled	[CE]  <identifier>  expected	16	None	add
177	[BUG]  [BUGGY]  options.closurePass  |=!flags.protocol_closure_primitives;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.protocol_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.protocol_closure_primitives;	  options.closurePass    |=!flags.source_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
178	[BUG]  [BUGGY]  options.closurePass  = "/ "  +  flags.prototype_closure_primitives;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  = "/ "  +  flags.prototype_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  = "/ "  +  flags.prototype_closure_primitives;	  options.closurePass    =       "/   ";    	non-compiled	[CE]  <identifier>  expected	79	None	replace
179	[BUG]  [BUGGY]  options.closurePass  = "/ "  +  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  = "/ "  +  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  = "/ "  +  flags.process_closure_primitives;	  options.closurePass    =       "/   ";    	non-compiled	[CE]  <identifier>  expected	79	None	replace
180	[BUG]  [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives  ||  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives  ||  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives  =  flags.process_closure_primitives  ||  flags.process_closure_primitives;	  flags.process_closure_primitives    =    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
181	[BUG]  [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives  +  1;  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives  +  1;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives  =  flags.process_closure_primitives  +  1;	  flags.process_closure_primitives    =    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
182	[BUG]  [BUGGY]  options.closurePass  |=!process_closure_primitives;  Options.closurePass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!process_closure_primitives;  Options.closurePass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!process_closure_primitives;  Options.closurePass  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    Options.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
183	[BUG]  [BUGGY]  options.closePass  =  true;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closePass  =  true;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closePass  =  true;	  options.closurePass    =    false;    options.closurePass    =    false;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
184	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(options);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(options);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
185	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(false);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(false);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(false);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
186	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags));  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags));	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
187	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flag);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flag);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flag);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
188	[BUG]  [BUGGY]  options.closurePass  |=  true;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]    IllegalArgumentException    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  true;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  true;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( " ");  }	  options.closurePass    |=    false;    if(flags.process_closure_primitives)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
189	[BUG]  [BUGGY]  options.closurePass  |=  1;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]      IllegalArgumentException    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  1;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  1;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( " ");  }	  options.closurePass    |=    false;    if(flags.process_closure_primitives)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
190	[BUG]  [BUGGY]  options.closurePass  |=  true;  if(!flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  true;  if(!flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  true;  if(!flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( " ");  }	  options.closurePass    |=    false;    if(flags.process_closure_primitives)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
191	[BUG]  [BUGGY]  options.closurePass  |=  3;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  3;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  3;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( " ");  }	  options.closurePass    |=    false;    if(flags.process_closure_primitives)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
192	[BUG]  [BUGGY]  options.closurePass  |=  flags.prototype_closure_primitives.isEnabled(flags.prototype_closure_primitives);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.prototype_closure_primitives.isEnabled(flags.prototype_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.prototype_closure_primitives.isEnabled(flags.prototype_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.prototype_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
193	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(options.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(options.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(options.process_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
194	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(this.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(this.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(this.process_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
195	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.process_closure_primits);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.process_closure_primits);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.process_closure_primits);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
196	[BUG]  [BUGGY]  flags.setDebugOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.setDebugOptionsForWarningLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.setDebugOptionsForWarningLevel(options);	          wLevel.setDebugOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
197	[BUG]  [BUGGY]  warning_level.setDebugOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  warning_level.setDebugOptionsForWarningLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	warning_level.setDebugOptionsForWarningLevel(options);	          wLevel.setDebugOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
198	[BUG]  [BUGGY]  Flags  flags.setDebugOptionsForWarningLevel(options);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Flags  flags.setDebugOptionsForWarningLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Flags  flags.setDebugOptionsForWarningLevel(options);	          wLevel.setDebugOptionsForWarningLevel(options);    	non-compiled	[CE]  ';'  expected	46	None	replace
199	[BUG]  [BUGGY]  options.closurePass  |=  false;  Options.closurePass  |=  true;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  false;  Options.closurePass  |=  true;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  false;  Options.closurePass  |=  true;	  options.closurePass    |=    false;    Options.closurePass    |=    false;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
200	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  &&!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  &&!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.process_closure_primitives  &&!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives    ||!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
201	[BUG]  [BUGGY]  options.closurePass  =  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  1;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  1;	  options.closurePass    =    0;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
202	[BUG]  [BUGGY]  options.closurePass  =  0L;  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  0L;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  0L;	  options.closurePass    =    0;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
203	[BUG]  [BUGGY]  Options.closurePass  =  flags.closure_primitives;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  =  flags.closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  =  flags.closure_primitives;	  Options.closurePass    =    null;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
204	[BUG]  [BUGGY]  Options.closurePass  =  flags.closure_pass;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  =  flags.closure_pass;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  =  flags.closure_pass;	  Options.closurePass    =    null;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
205	[BUG]  [BUGGY]  Options.closurePass  =  wLevel;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  =  wLevel;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  =  wLevel;	  Options.closurePass    =    null;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
206	[BUG]  [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  options.closurePass  |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  options.closurePass  |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        if(flags.process_closure_primitives    |=    false)    {    options.closurePass    |=    false;    }    options.closurePass  |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }	  	non-compiled	[CE]  <identifier>  expected	21	None	add
207	[BUG]  [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  Options.closurePass  |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  Options.closurePass  |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        if(flags.process_closure_primitives    |=    false)    {    options.closurePass    |=    false;    }    Options.closurePass  |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }	  	non-compiled	[CE]  <identifier>  expected	21	None	add
208	[BUG]  [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  OptionPass  |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  OptionPass  |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        if(flags.process_closure_primitives    |=    false)    {    options.closurePass    |=    false;    }    OptionPass  |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }	  	non-compiled	[CE]  <identifier>  expected	21	None	add
209	[BUG]  [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        if(flags.process_closure_primitives    |=    false)    {    options.closurePass    |=    false;    }    if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }	  	non-compiled	[CE]  <identifier>  expected	21	None	add
210	[BUG]  [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        if(flags.process_closure_primitives    |=    false)    {    options.closurePass    |=    false;    }    |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }	  	non-compiled	[CE]  <identifier>  expected	21	None	add
211	[BUG]  [BUGGY]  options.closurePass  = "null ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  = "null ";  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  = "null ";	  options.closurePass    =   "n   ";    	non-compiled	[CE]  <identifier>  expected	9	None	replace
212	[BUG]  [BUGGY]  options.closure_pass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closure_pass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closure_pass  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_pass;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
213	[BUG]  [BUGGY]  options.closurePass  |=!flags.prototype_closure_pass;  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.prototype_closure_pass;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.prototype_closure_pass;	  options.closurePass    |=!flags.process_closure_pass;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
214	[BUG]  [BUGGY]  options.closurePass  =  process_closure_primitives;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  process_closure_primitives;	  options.closurePass    =    closure_pass;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
215	[BUG]  [BUGGY]  options.closurePass  =  new  CompilerOptions(flags.closure_primitives,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  new  CompilerOptions(flags.closure_primitives,  flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  new  CompilerOptions(flags.closure_primitives,  flags.process_closure_primitives);	  options.closurePass    =    new    CompilerOptions(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
216	[BUG]  [BUGGY]  options.closurePass  =  new  CompilerOptions(flags,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  new  CompilerOptions(flags,  flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  new  CompilerOptions(flags,  flags.process_closure_primitives);	  options.closurePass    =    new    CompilerOptions(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
217	[BUG]  [BUGGY]  options.closurePass  =  new  CompilerOptions(flags.closure_primitives,  wLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  new  CompilerOptions(flags.closure_primitives,  wLevel);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  new  CompilerOptions(flags.closure_primitives,  wLevel);	  options.closurePass    =    new    CompilerOptions(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
218	[BUG]  [BUGGY]  options.closurePass  =  new  CompilerOptions(flags,  formattingOption.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  new  CompilerOptions(flags,  formattingOption.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  new  CompilerOptions(flags,  formattingOption.process_closure_primitives);	  options.closurePass    =    new    CompilerOptions(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
219	[BUG]  [BUGGY]  options.closurePass  =  new  CompilerOptions(flags.process_closure_primitives,  flags.warning_level);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  new  CompilerOptions(flags.process_closure_primitives,  flags.warning_level);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  new  CompilerOptions(flags.process_closure_primitives,  flags.warning_level);	  options.closurePass    =    new    CompilerOptions(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
220	[BUG]  [BUGGY]  options.closurePass    =    false;    options.closurePass  =  false;  options.closurePass  =  false;  options.closurePass  =  false;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    =    false;    options.closurePass  =  false;  options.closurePass  =  false;  options.closurePass  =  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        =        false;        options.closurePass    =    false;    options.closurePass  =  false;  options.closurePass  =  false;	  	non-compiled	[CE]  <identifier>  expected	47	None	add
221	[BUG]  [BUGGY]  options.closurePass    =    false;    options.closurePass  =  false;  if(flags.process_closure_primitives)  {  options.closurePass  =  false;  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    =    false;    options.closurePass  =  false;  if(flags.process_closure_primitives)  {  options.closurePass  =  false;  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        =        false;        options.closurePass    =    false;    if(flags.process_closure_primitives)  {  options.closurePass  =  false;  options.closurePass  =  false;  }	  	non-compiled	[CE]  <identifier>  expected	47	None	add
222	[BUG]  [BUGGY]  options.closurePass    =    false;    options.closurePass  =  false;  Options.closurePass  =  false;  options.closurePass  =  false;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    =    false;    options.closurePass  =  false;  Options.closurePass  =  false;  options.closurePass  =  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        =        false;        options.closurePass    =    false;    Options.closurePass  =  false;  options.closurePass  =  false;	  	non-compiled	[CE]  <identifier>  expected	47	None	add
223	[BUG]  [BUGGY]  options.closurePass    =    false;    options.closurePass  =  false;  if(flags.process_closure_primitives)  {  options.closurePass  =  false;  options.closurePass  =  false;  }  else  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    =    false;    options.closurePass  =  false;  if(flags.process_closure_primitives)  {  options.closurePass  =  false;  options.closurePass  =  false;  }  else  {  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        =        false;        options.closurePass    =    false;    if(flags.process_closure_primitives)  {  options.closurePass  =  false;  options.closurePass  =  false;  }  else  {	  	non-compiled	[CE]  <identifier>  expected	47	None	add
224	[BUG]  [BUGGY]  option.closurePass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  option.closurePass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	option.closurePass  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    option.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
225	[BUG]  [BUGGY]  |=!flags.process_closure_primitives;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	|=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    |=!flags.process_closure_primitives;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
226	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.process_closure_primitives  ||  flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    |=!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
227	[BUG]  [BUGGY]  warning_level.setDebugOptionsForCompilationLevel(options);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  warning_level.setDebugOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	warning_level.setDebugOptionsForCompilationLevel(options);	  wLevel.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
228	[BUG]  [BUGGY]  ||  flags.process_closure_primitives  ||  flags.closurePass  =  true;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  ||  flags.process_closure_primitives  ||  flags.closurePass  =  true;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	||  flags.process_closure_primitives  ||  flags.closurePass  =  true;	  options.closurePass    =    false;    ||    flags.process_closure_primitives    ||    flags.closurePass    =    false;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
229	[BUG]  [BUGGY]  options.closurePass  =  true;  ||  flags.process_closure_primitives  ||  flags.closurePass  =  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  true;  ||  flags.process_closure_primitives  ||  flags.closurePass  =  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  true;  ||  flags.process_closure_primitives  ||  flags.closurePass  =  false;	  options.closurePass    =    false;    ||    flags.process_closure_primitives    ||    flags.closurePass    =    false;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
230	[BUG]  [BUGGY]  ||  flags.process_closure_primitives  ||  flags.closurePass  =  false;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  ||  flags.process_closure_primitives  ||  flags.closurePass  =  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	||  flags.process_closure_primitives  ||  flags.closurePass  =  false;	  options.closurePass    =    false;    ||    flags.process_closure_primitives    ||    flags.closurePass    =    false;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
231	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  options.closurePass  =  false;  ||  flags.process_closure_primitives  ||  flags.closurePass  =  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(flags.process_closure_primitives)  {  options.closurePass  =  false;  ||  flags.process_closure_primitives  ||  flags.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	if(flags.process_closure_primitives)  {  options.closurePass  =  false;  ||  flags.process_closure_primitives  ||  flags.closurePass  =  false;  }	  options.closurePass    =    false;    ||    flags.process_closure_primitives    ||    flags.closurePass    =    false;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
232	[BUG]  [BUGGY]  level.setOptionsForCompilationLevel(options);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  level.setOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	level.setOptionsForCompilationLevel(options);	          level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
233	[BUG]  [BUGGY]  level.setDebugOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  level.setDebugOptionsForWarningLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	level.setDebugOptionsForWarningLevel(options);	          level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
234	[BUG]  [BUGGY]  level.setOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  level.setOptionsForWarningLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	level.setOptionsForWarningLevel(options);	          level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
235	[BUG]  [BUGGY]  Flags  flags  =  flags.process_closure_primitives;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Flags  flags  =  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Flags  flags  =  flags.process_closure_primitives;	  Flags    flags    =    flags.process_closure_primitives;    level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
236	[BUG]  [BUGGY]  flags  =  flags.process_closure_primitives;  level.setDebugOptionsForCompilationLevel(options);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags  =  flags.process_closure_primitives;  level.setDebugOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags  =  flags.process_closure_primitives;  level.setDebugOptionsForCompilationLevel(options);	  Flags    flags    =    flags.process_closure_primitives;    level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
237	[BUG]  [BUGGY]  Flags  flags  =  flags.factory_closure_primitives;  level.setDebugOptionsForCompilationLevel(options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Flags  flags  =  flags.factory_closure_primitives;  level.setDebugOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Flags  flags  =  flags.factory_closure_primitives;  level.setDebugOptionsForCompilationLevel(options);	  Flags    flags    =    flags.process_closure_primitives;    level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
238	[BUG]  [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    options.closurePass  |=!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    options.closurePass  |=!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=!flags.process_closure_primitives;        options.closurePass    |=!flags.process_closure_primitives;    options.closurePass  |=!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	36	None	add
239	[BUG]  [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    options.closurePass  |=!flags.process_closure_primitives;  Options.closurePass  |=!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    options.closurePass  |=!flags.process_closure_primitives;  Options.closurePass  |=!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=!flags.process_closure_primitives;        options.closurePass    |=!flags.process_closure_primitives;    Options.closurePass  |=!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	36	None	add
240	[BUG]  [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    options.closurePass  |=!flags.process_closure_primitives;  OptionPass  |=!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    options.closurePass  |=!flags.process_closure_primitives;  OptionPass  |=!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=!flags.process_closure_primitives;        options.closurePass    |=!flags.process_closure_primitives;    OptionPass  |=!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	36	None	add
241	[BUG]  [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    options.closurePass  |=!flags.process_closure_primitives;  optionPass  |=!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    options.closurePass  |=!flags.process_closure_primitives;  optionPass  |=!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=!flags.process_closure_primitives;        options.closurePass    |=!flags.process_closure_primitives;    optionPass  |=!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	36	None	add
242	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives  +  1;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives  +  1;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives  +  1;	  options.closurePass    |=    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
243	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives  |  1;  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives  |  1;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives  |  1;	  options.closurePass    |=    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
244	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives  -  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives  -  1;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives  -  1;	  options.closurePass    |=    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
245	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives  &&  flags.warning_level;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives  &&  flags.warning_level;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives  &&  flags.warning_level;	  options.closurePass    |=    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
246	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_tree;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_tree;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_tree;	  options.closurePass    |=!flags.process_closure_primitives    ||!flags.process_closure_pass;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
247	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  &&!flags.process_closure_pass;  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  &&!flags.process_closure_pass;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.process_closure_primitives  &&!flags.process_closure_pass;	  options.closurePass    |=!flags.process_closure_primitives    ||!flags.process_closure_pass;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
248	[BUG]  [BUGGY]  Flags  flags  =  options.process_closure_primitives(flags);  level.setDebugOptionsForCompilationLevel(options);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Flags  flags  =  options.process_closure_primitives(flags);  level.setDebugOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Flags  flags  =  options.process_closure_primitives(flags);  level.setDebugOptionsForCompilationLevel(options);	          Flags    flags    =    flags.process_closure_primitives(options);    level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
249	[BUG]  [BUGGY]  flags  =  flags.process_closure_primitives(options);  level.setDebugOptionsForCompilationLevel(options);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags  =  flags.process_closure_primitives(options);  level.setDebugOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags  =  flags.process_closure_primitives(options);  level.setDebugOptionsForCompilationLevel(options);	          Flags    flags    =    flags.process_closure_primitives(options);    level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
250	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  +  2;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  +  2;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.process_closure_primitives  +  2;	  options.closurePass    |=!flags.process_closure_primitives    +    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
251	[BUG]  [BUGGY]  options.closurePass  |=!process_closure_primitives  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!process_closure_primitives  +  1;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!process_closure_primitives  +  1;	  options.closurePass    |=!flags.process_closure_primitives    +    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
252	[BUG]  [BUGGY]  flags.process_closure_primitives  =  options.process_closure_primitives(flags);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives  =  options.process_closure_primitives(flags);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives  =  options.process_closure_primitives(flags);	  flags.process_closure_primitives    =    flags.process_closure_primitives(options);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
253	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.stat_closure_primitives);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.stat_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.stat_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.statement_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
254	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.statement_closure_primits);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.statement_closure_primits);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.statement_closure_primits);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.statement_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
255	[BUG]  [BUGGY]  options.closurePass  =' "'  +  flags.prototype_closure_primitives;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =' "'  +  flags.prototype_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =' "'  +  flags.prototype_closure_primitives;	  options.closurePass    ='   "';    	non-compiled	[CE]  <identifier>  expected	80	None	replace
256	[BUG]  [BUGGY]  options.closurePass  |=!process_closure_primitives;  Solutions.closurePass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!process_closure_primitives;  Solutions.closurePass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!process_closure_primitives;  Solutions.closurePass  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    Solutions.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	74	None	replace
257	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives;  options.closurePass  |=  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives;  options.closurePass  |=  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    flags.process_closure_primitives;    options.closurePass  |=  flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	33	None	add
258	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives;  Options.closurePass  |=  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives;  Options.closurePass  |=  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    flags.process_closure_primitives;    Options.closurePass  |=  flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	33	None	add
259	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives;  OptionPass  |=  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives;  OptionPass  |=  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    flags.process_closure_primitives;    OptionPass  |=  flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	33	None	add
260	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives;  Solutions.closurePass  |=  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives;  Solutions.closurePass  |=  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    flags.process_closure_primitives;    Solutions.closurePass  |=  flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	33	None	add
261	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives;  |=  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives;  |=  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    flags.process_closure_primitives;    |=  flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	33	None	add
262	[BUG]  [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        if(flags.process_closure_primitives)    {    options.closurePass    |=    false;    }    options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }	  	non-compiled	[CE]  <identifier>  expected	18	None	add
263	[BUG]  [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  Options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  Options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        if(flags.process_closure_primitives)    {    options.closurePass    |=    false;    }    Options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }	  	non-compiled	[CE]  <identifier>  expected	18	None	add
264	[BUG]  [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  if(flags.process_closure_pass)  {  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  if(flags.process_closure_pass)  {  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        if(flags.process_closure_primitives)    {    options.closurePass    |=    false;    }    if(flags.process_closure_pass)  {  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }	  	non-compiled	[CE]  <identifier>  expected	18	None	add
265	[BUG]  [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        if(flags.process_closure_primitives)    {    options.closurePass    |=    false;    }    if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }	  	non-compiled	[CE]  <identifier>  expected	18	None	add
266	[BUG]  [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  OptionPass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  OptionPass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        if(flags.process_closure_primitives)    {    options.closurePass    |=    false;    }    OptionPass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }	  	non-compiled	[CE]  <identifier>  expected	18	None	add
267	[BUG]  [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  flags.process_closure_primitives  =  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  flags.process_closure_primitives  =  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives    =    flags.process_closure_primitives;    flags.process_closure_primitives  =  flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	1	None	add
268	[BUG]  [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  Flags  flags.process_closure_primitives  =  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  Flags  flags.process_closure_primitives  =  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives    =    flags.process_closure_primitives;    Flags  flags.process_closure_primitives  =  flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	1	None	add
269	[BUG]  [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  Flags.process_closure_primitives  =  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  Flags.process_closure_primitives  =  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives    =    flags.process_closure_primitives;    Flags.process_closure_primitives  =  flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	1	None	add
270	[BUG]  [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  flags.process_closure_primitives  =  flags.process_closure_primits;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  flags.process_closure_primitives  =  flags.process_closure_primits;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives    =    flags.process_closure_primitives;    flags.process_closure_primitives  =  flags.process_closure_primits;	  	non-compiled	[CE]  <identifier>  expected	1	None	add
271	[BUG]  [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  s.process_closure_primitives  =  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  s.process_closure_primitives  =  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives    =    flags.process_closure_primitives;    s.process_closure_primitives  =  flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	1	None	add
272	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  +  3;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  +  3;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.process_closure_primitives  +  3;	  options.closurePass    |=!flags.process_closure_primitives    +    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
273	[BUG]  [BUGGY]  options.closurePass  =  flags.prototype_closure_pass;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  flags.prototype_closure_pass;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  flags.prototype_closure_pass;	  options.closurePass    =    flags.closure_pass;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
274	[BUG]  [BUGGY]  options.closurePass  =  'n'  &&  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  'n'  &&  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  'n'  &&  flags.process_closure_primitives;	  options.closurePass    =    'n';    	non-compiled	[CE]  <identifier>  expected	10	None	replace
275	[BUG]  [BUGGY]  flags  =  flags.process_closure_primitives(options);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags  =  flags.process_closure_primitives(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags  =  flags.process_closure_primitives(options);	  flags.process_closure_primitives(options);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
276	[BUG]  [BUGGY]  options.closurePass  |=!flags.source_closure_pass;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.source_closure_pass;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.source_closure_pass;	  options.closurePass    |=!flags.source_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
277	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_pass;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_pass;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_pass;	  options.closurePass    |=    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
278	[BUG]  [BUGGY]  options.closurePass  =  new  CompilerOption(factory_closure_primitives,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  new  CompilerOption(factory_closure_primitives,  flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  new  CompilerOption(factory_closure_primitives,  flags.process_closure_primitives);	  options.closurePass    =    new    CompilerOption(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
279	[BUG]  [BUGGY]  logging_level  =  flags.logging_level;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  logging_level  =  flags.logging_level;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	logging_level  =  flags.logging_level;	          logging_level    =    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
280	[BUG]  [BUGGY]  ProcessingLevel  logging_level  =  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  ProcessingLevel  logging_level  =  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	ProcessingLevel  logging_level  =  flags.process_closure_primitives;	          logging_level    =    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
281	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level,  flags.for_closure_primitives);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level,  flags.for_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level,  flags.for_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.warning_level,    flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
282	[BUG]  [BUGGY]  options.closurePass  |=  false;  if(flags.closure_pass  |=  false)  {  options.closurePass  |=  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  false;  if(flags.closure_pass  |=  false)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  false;  if(flags.closure_pass  |=  false)  {  options.closurePass  |=  false;  }	  options.closurePass    |=    false;    if(flags.closurePass    |=    false)    {    options.closurePass    |=    false;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
283	[BUG]  [BUGGY]  options.closurePass  |=  2;  if(flags.process_closure_primitives)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  2;  if(flags.process_closure_primitives)  {  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  2;  if(flags.process_closure_primitives)  {	  options.closurePass    |=    false;    if(flags.process_closure_primitives)    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
284	[BUG]  [BUGGY]          initOptionsFromFlags(options);  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          initOptionsFromFlags(options);  if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                initOptionsFromFlags(options);    if(flags.process_closure_primitives  ||  flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	add
285	[BUG]  [BUGGY]          initOptionsFromFlags(options);  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  logging_level  :  flags.process_closure_primitives)  {  level.setDebugOptionsForComp  [CE]  invalid  method  declaration;  return  type  required  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          initOptionsFromFlags(options);  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  logging_level  :  flags.process_closure_primitives)  {  level.setDebugOptionsForComp  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                initOptionsFromFlags(options);    if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  logging_level  :  flags.process_closure_primitives)  {  level.setDebugOptionsForComp	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	add
286	[BUG]  [BUGGY]          initOptionsFromFlags(options);  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  p  :  flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          initOptionsFromFlags(options);  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  p  :  flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                initOptionsFromFlags(options);    if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  p  :  flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	add
287	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  Solutions.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  Solutions.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=!flags.process_closure_primitives    ||!flags.process_closure_primitives;    Solutions.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	13	None	add
288	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  solutions.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  solutions.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=!flags.process_closure_primitives    ||!flags.process_closure_primitives;    solutions.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	13	None	add
289	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level,  logging_level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level,  logging_level);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.warning_level,  logging_level);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.warning_level);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
290	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.formatting_level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.formatting_level);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.formatting_level);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.warning_level);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
291	[BUG]  [BUGGY]  options.closurePass    =    false;    options.closurePass  =  false;  if(flags.process_closure_primitives)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    =    false;    options.closurePass  =  false;  if(flags.process_closure_primitives)  {  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        =        false;        options.closurePass    =    false;    if(flags.process_closure_primitives)  {	  	non-compiled	[CE]  <identifier>  expected	47	None	add
292	[BUG]  [BUGGY]  wLevel.setDebugOptionsForWarningLevel(options,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  wLevel.setDebugOptionsForWarningLevel(options,  flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	wLevel.setDebugOptionsForWarningLevel(options,  flags.process_closure_primitives);	          wLevel.setDebugOptionsForWarningLevel(options);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
293	[BUG]  [BUGGY]  options.closurePass  |=  true;  if(options.closurePass)  {  if(options.closurePass  |=  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  true;  if(options.closurePass)  {  if(options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  true;  if(options.closurePass)  {  if(options.closurePass  |=  false;  }	  options.closurePass    |=    false;    if(flags.process_closure_primitives)    {    if(options.closurePass    |=    false;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
294	[BUG]  [BUGGY]  flags.process_closure_primitives  =  flags.prototype_closure_primitives(options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives  =  flags.prototype_closure_primitives(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives  =  flags.prototype_closure_primitives(options);	  flags.process_closure_primitives    =    flags.process_closure_primitives(options);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
295	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives;  solutions.closurePass  |=  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives;  solutions.closurePass  |=  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    flags.process_closure_primitives;    solutions.closurePass  |=  flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	33	None	add
296	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives;  Opportunities.closurePass  |=  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives;  Opportunities.closurePass  |=  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    flags.process_closure_primitives;    Opportunities.closurePass  |=  flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	33	None	add
297	[BUG]  [BUGGY]  level.setOptionsForProcessingLevel(options);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  level.setOptionsForProcessingLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	level.setOptionsForProcessingLevel(options);	          level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
298	[BUG]  [BUGGY]  options.closurePass  =   "true ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =   "true ";  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =   "true ";	  options.closurePass    =   "n   ";    	non-compiled	[CE]  <identifier>  expected	9	None	replace
299	[BUG]  [BUGGY]  options.closurePass  |=  wLevel;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  wLevel;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  wLevel;	  options.closurePass    |=    null;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
300	[BUG]  [BUGGY]  options.closurePass  |=  flags.prototype_closure_pass;  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.prototype_closure_pass;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.prototype_closure_pass;	  options.closurePass    |=    null;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
301	[BUG]  [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  if(flags.process_closure_pass  |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  if(flags.process_closure_pass  |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        if(flags.process_closure_primitives    |=    false)    {    options.closurePass    |=    false;    }    if(flags.process_closure_pass  |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }	  	non-compiled	[CE]  <identifier>  expected	21	None	add
302	[BUG]  [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  Solutions.closurePass  |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  Solutions.closurePass  |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        if(flags.process_closure_primitives    |=    false)    {    options.closurePass    |=    false;    }    Solutions.closurePass  |=  false;  if(flags.process_closure_primitives  |=  false)  {  options.closurePass  |=  false;  }	  	non-compiled	[CE]  <identifier>  expected	21	None	add
303	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_pass;  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_pass;  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.process_closure_pass;  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    |=!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
304	[BUG]  [BUGGY]  flags.process_closure_primitives  =  flags.prototype_closure_primitives();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives  =  flags.prototype_closure_primitives();  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives  =  flags.prototype_closure_primitives();	  flags.process_closure_primitives    =    flags.process_closure_primitives();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
305	[BUG]  [BUGGY]  options.closurePass  =  PRINT_INPUT_DELIMITER;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  PRINT_INPUT_DELIMITER;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  PRINT_INPUT_DELIMITER;	  options.closurePass    =    password;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
306	[BUG]  [BUGGY]  options.closurePass  =  wlevel;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  wlevel;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  wlevel;	  options.closurePass    =    password;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
307	[BUG]  [BUGGY]  options.closurePass  =  format_closure_primitives;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  format_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  format_closure_primitives;	  options.closurePass    =    password;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
308	[BUG]  [BUGGY]  options.closurePass  |=!flags.factory_closure_pass;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.factory_closure_pass;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.factory_closure_pass;	  options.closurePass    |=!flags.factory_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
309	[BUG]  [BUGGY]  Options.closurePass  |=!flags.factory_closure_primitives;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  |=!flags.factory_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  |=!flags.factory_closure_primitives;	  options.closurePass    |=!flags.factory_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
310	[BUG]  [BUGGY]  wLevel.setDebugOptionsForCompilationLevel(options,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  wLevel.setDebugOptionsForCompilationLevel(options,  flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	wLevel.setDebugOptionsForCompilationLevel(options,  flags.process_closure_primitives);	  wLevel.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
311	[BUG]  [BUGGY]  Options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.factory_closure_primitives);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.factory_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.factory_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.factory_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
312	[BUG]  [BUGGY]  options.closePass  =  false;  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closePass  =  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closePass  =  false;	  options.closurePass    =    false;    if(flags.closurePass!=    false)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
313	[BUG]  [BUGGY]  options.closurePass  =  true;  &&  flags.process_closure_primitives  ||  flags.closurePass  =  false;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  true;  &&  flags.process_closure_primitives  ||  flags.closurePass  =  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  true;  &&  flags.process_closure_primitives  ||  flags.closurePass  =  false;	  options.closurePass    =    false;    ||    flags.process_closure_primitives    ||    flags.closurePass    =    false;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
314	[BUG]  [BUGGY]  Options.closurePass  =  true;  ||  flags.process_closure_primitives  ||  flags.closurePass  =  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  =  true;  ||  flags.process_closure_primitives  ||  flags.closurePass  =  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  =  true;  ||  flags.process_closure_primitives  ||  flags.closurePass  =  false;	  options.closurePass    =    false;    ||    flags.process_closure_primitives    ||    flags.closurePass    =    false;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
315	[BUG]  [BUGGY]  options.closurePass  =  new  CompilerOptions(flags.closure_password,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  new  CompilerOptions(flags.closure_password,  flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  new  CompilerOptions(flags.closure_password,  flags.process_closure_primitives);	  options.closurePass    =    new    CompilerOptions(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
316	[BUG]  [BUGGY]  options.closurePass  =  new  CompilerOptions(flags.closure_pass,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  new  CompilerOptions(flags.closure_pass,  flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  new  CompilerOptions(flags.closure_pass,  flags.process_closure_primitives);	  options.closurePass    =    new    CompilerOptions(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
317	[BUG]  [BUGGY]  options.closurePass  =  new  CompilerOptions(flags.closure_pass);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  new  CompilerOptions(flags.closure_pass);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  new  CompilerOptions(flags.closure_pass);	  options.closurePass    =    new    CompilerOptions(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
318	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.version);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.version);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.version);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.closure_pass);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
319	[BUG]  [BUGGY]  options.closurePass    |=    false;    options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    options.closurePass  |=  false;  if(flags.process_closure_primitives)  {  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        options.closurePass    |=    false;    if(flags.process_closure_primitives)  {	  	non-compiled	[CE]  <identifier>  expected	16	None	add
320	[BUG]  [BUGGY]  optionPass  =  false;  if(flags.closure_pass)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  optionPass  =  false;  if(flags.closure_pass)  {  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	optionPass  =  false;  if(flags.closure_pass)  {  options.closurePass  =  false;  }	  options.closurePass    =    false;    if(flags.closurePass)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
321	[BUG]  [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  Solutions.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  Solutions.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=!flags.process_closure_primitives;        if(flags.process_closure_primitives)    {    options.closurePass    |=!flags.process_closure_primitives;    }    Solutions.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }	  	non-compiled	[CE]  <identifier>  expected	72	None	add
322	[BUG]  [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException(   "   ");  }  Solutions.closurePass  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  <identifier>  expected  [FE]    IllegalArgumentException    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException(   "   ");  }  Solutions.closurePass  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        if(flags.process_closure_primitives)    {    throw    new    IllegalArgumentException(   "   ");    }    Solutions.closurePass  |=  false;  if(flags.process_closure_primitives)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  <identifier>  expected	24	None	add
323	[BUG]  [BUGGY]  Options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.process_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
324	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(default_closure_primitives);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(default_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(default_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
325	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(errors);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(errors);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(errors);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
326	[BUG]  [BUGGY]  options.closurePass  =  wlevel.closure_pass;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  wlevel.closure_pass;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  wlevel.closure_pass;	  options.closurePass    =    wLevel;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
327	[BUG]  [BUGGY]  options.closurePass  =  wLevel.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  wLevel.toString();  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  wLevel.toString();	  options.closurePass    =    wLevel;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
328	[BUG]  [BUGGY]  options.closurePass  =  warning_level;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  warning_level;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  warning_level;	  options.closurePass    =    wLevel;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
329	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	          initOptionsFromFlags(options);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
330	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  p  :  flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  p  :  flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  p  :  flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }	          initOptionsFromFlags(options);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
331	[BUG]  [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  p  :  flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  p  :  flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  p  :  flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }	          initOptionsFromFlags(options);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
332	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  level.setDebugOptionsForCompilationLevel(options);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  level.setDebugOptionsForCompilationLevel(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  level.setDebugOptionsForCompilationLevel(options);  }	          initOptionsFromFlags(options);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
333	[BUG]  [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  if(flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  if(flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                level.setDebugOptionsForCompilationLevel(options);    if(flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }	  	non-compiled	[CE]  <identifier>  expected	57	None	add
334	[BUG]  [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  if(flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }  else  {  for(FormattingOption  :  flags.process_closure_primitives)  {  level.setDebugOptionsForComp  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  if(flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }  else  {  for(FormattingOption  :  flags.process_closure_primitives)  {  level.setDebugOptionsForComp  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                level.setDebugOptionsForCompilationLevel(options);    if(flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }  else  {  for(FormattingOption  :  flags.process_closure_primitives)  {  level.setDebugOptionsForComp	  	non-compiled	[CE]  <identifier>  expected	57	None	add
335	[BUG]  [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  if(flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }  else  {  for(FormattingOption  logging_level  :  flags.process_closure_primitives)  {  level.setDebugOptionsForComp  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  if(flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }  else  {  for(FormattingOption  logging_level  :  flags.process_closure_primitives)  {  level.setDebugOptionsForComp  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                level.setDebugOptionsForCompilationLevel(options);    if(flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }  else  {  for(FormattingOption  logging_level  :  flags.process_closure_primitives)  {  level.setDebugOptionsForComp	  	non-compiled	[CE]  <identifier>  expected	57	None	add
336	[BUG]  [BUGGY]  Flags  flags  =  flags.process_closure_primitives();  logging_level.setDebugOptionsForCompilationLevel(options);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Flags  flags  =  flags.process_closure_primitives();  logging_level.setDebugOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Flags  flags  =  flags.process_closure_primitives();  logging_level.setDebugOptionsForCompilationLevel(options);	  Flags    flags    =    flags.process_closure_primitives();    level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
337	[BUG]  [BUGGY]  options.closurePass  =  wLevel.closure_primitives;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  wLevel.closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  wLevel.closure_primitives;	  options.closurePass    =    flags.closure_primitives;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
338	[BUG]  [BUGGY]  options.closurePass  |=  flags.logging_level.isEnabled(flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.logging_level.isEnabled(flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.logging_level.isEnabled(flags.process_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.logging_level);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
339	[BUG]  [BUGGY]  options.closurePass  |=  flags.  processing_closure_primitives.isEnabled(flags.logging_level);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.  processing_closure_primitives.isEnabled(flags.logging_level);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.  processing_closure_primitives.isEnabled(flags.logging_level);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.logging_level);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
340	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  options.closurePass  |=  false;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  OptionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  options.closurePass  |=  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	OptionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  options.closurePass  |=  false;	  options.closurePass    |=    false;    OptionHandler    optionHandler    =    new    OptionHandler(flags.process_closure_primitives);    options.closurePass    |=    false;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
341	[BUG]  [BUGGY]  optionHandler  |=  new  OptionHandler(flags.process_closure_primitives);  options.closurePass  |=  false;  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  optionHandler  |=  new  OptionHandler(flags.process_closure_primitives);  options.closurePass  |=  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	optionHandler  |=  new  OptionHandler(flags.process_closure_primitives);  options.closurePass  |=  false;	  options.closurePass    |=    false;    OptionHandler    optionHandler    =    new    OptionHandler(flags.process_closure_primitives);    options.closurePass    |=    false;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
342	[BUG]  [BUGGY]  options.closurePass  =  true;  &&  flags.process_closure_primitives  ||  flags.closurePass)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  true;  &&  flags.process_closure_primitives  ||  flags.closurePass)  {  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  true;  &&  flags.process_closure_primitives  ||  flags.closurePass)  {	  options.closurePass    =    false;    ||    flags.process_closure_primitives    ||    flags.closurePass)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
343	[BUG]  [BUGGY]  flags.process_closure_primitives  =!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives  =!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives  =!flags.process_closure_primitives;	  flags.process_closure_primitives    =    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
344	[BUG]  [BUGGY]  options.closurePass  =  closure_primitives;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  closure_primitives;	  options.closurePass    =    closure_pass;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
345	[BUG]  [BUGGY]  options.closurePass  |=!process_closure_primitives;  option.closurePass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!process_closure_primitives;  option.closurePass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!process_closure_primitives;  option.closurePass  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    option.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
346	[BUG]  [BUGGY]  options.closurePass  |=!flags.prototype_closure_primitives;  OptionPass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.prototype_closure_primitives;  OptionPass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.prototype_closure_primitives;  OptionPass  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    OptionPass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
347	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  optionPass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives;  optionPass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.process_closure_primitives;  optionPass  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    OptionPass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
348	[BUG]  [BUGGY]  management_level.setDebugOptionsForCompilationLevel(options);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  management_level.setDebugOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	management_level.setDebugOptionsForCompilationLevel(options);	          logging_level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
349	[BUG]  [BUGGY]  bugLogger.setDebugOptionsForCompilationLevel(options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  bugLogger.setDebugOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	bugLogger.setDebugOptionsForCompilationLevel(options);	          logging_level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
350	[BUG]  [BUGGY]  Flags  flags  =  flags.process_closure_primitives;  level.setOptionsForCompilationLevel(options);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Flags  flags  =  flags.process_closure_primitives;  level.setOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Flags  flags  =  flags.process_closure_primitives;  level.setOptionsForCompilationLevel(options);	  Flags    flags    =    flags.process_closure_primitives;    level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
351	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.compilation_primitives);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.compilation_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.compilation_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.closure_primitives);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
352	[BUG]  [BUGGY]  Options.closurePass  =  new  CompilerOptionPass(flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  =  new  CompilerOptionPass(flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  =  new  CompilerOptionPass(flags.process_closure_primitives);	  Options.closurePass    =    null;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
353	[BUG]  [BUGGY]  Options.closurePass  =  new  CompilerOptions(flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  =  new  CompilerOptions(flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  =  new  CompilerOptions(flags.process_closure_primitives);	  Options.closurePass    =    null;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
354	[BUG]  [BUGGY]  Options.closurePass  =  new  CompilerOptionPass(flags.process_closure_primitives,  wLevel);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  =  new  CompilerOptionPass(flags.process_closure_primitives,  wLevel);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  =  new  CompilerOptionPass(flags.process_closure_primitives,  wLevel);	  Options.closurePass    =    null;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
355	[BUG]  [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  FA  flags.process_closure_primitives  =  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  FA  flags.process_closure_primitives  =  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives    =    flags.process_closure_primitives;    FA  flags.process_closure_primitives  =  flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	1	None	add
356	[BUG]  [BUGGY]  options.closurePass  =  '/';  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  '/';  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  '/';	  options.closurePass    =       "/   ";    	non-compiled	[CE]  <identifier>  expected	79	None	replace
357	[BUG]  [BUGGY]  options.closurePass  |=  true;  Options.closurePass  |=  false;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  true;  Options.closurePass  |=  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  true;  Options.closurePass  |=  false;	  options.closurePass    |=    false;    Options.closurePass    |=    false;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
358	[BUG]  [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  if(flags.process_closure_pass  |=  false;  if(flags.process_closure_pass)  {  options.closurePass  |=  false;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  if(flags.process_closure_pass  |=  false;  if(flags.process_closure_pass)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        if(flags.process_closure_primitives)    {    options.closurePass    |=    false;    }    if(flags.process_closure_pass  |=  false;  if(flags.process_closure_pass)  {  options.closurePass  |=  false;  }	  	non-compiled	[CE]  <identifier>  expected	18	None	add
359	[BUG]  [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  Solutions.closurePass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  Solutions.closurePass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        if(flags.process_closure_primitives)    {    options.closurePass    |=    false;    }    Solutions.closurePass  |=  false;  if(flags.process_closure_primitives)  {  options.closurePass  |=  false;  }	  	non-compiled	[CE]  <identifier>  expected	18	None	add
360	[BUG]  [BUGGY]  options.closurePass  =  ' "'  +  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  ' "'  +  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  ' "'  +  flags.process_closure_primitives;	  options.closurePass    ='   "';    	non-compiled	[CE]  <identifier>  expected	80	None	replace
361	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(factory_closure_primitives);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(factory_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(factory_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(wLevel.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
362	[BUG]  [BUGGY]  options.closurePass  |=  true;  options.closurePass  |=  false;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  true;  options.closurePass  |=  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  true;  options.closurePass  |=  false;	  options.closurePass    |=    false;    options.closurePass    |=    false;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
363	[BUG]  [BUGGY]  options.closurePass  |=  true;  if(flags.closurePass)  {  options.closurePass  |=  true;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  true;  if(flags.closurePass)  {  options.closurePass  |=  true;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    true;    if(flags.closurePass)  {  options.closurePass  |=  true;  }	  	non-compiled	[CE]  <identifier>  expected	29	None	add
364	[BUG]  [BUGGY]  Option.closurePass  =  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Option.closurePass  =  null;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Option.closurePass  =  null;	  Option.closurePass    =    true;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
365	[BUG]  [BUGGY]  Option.closurepass  =  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Option.closurepass  =  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Option.closurepass  =  false;	  Option.closurePass    =    true;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
366	[BUG]  [BUGGY]  Option.closurePASS  =  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Option.closurePASS  =  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Option.closurePASS  =  false;	  Option.closurePass    =    true;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
367	[BUG]  [BUGGY]  options.closurePass  =  0l;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  0l;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  0l;	  options.closurePass    =    0;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
368	[BUG]  [BUGGY]  Flags  flags  =  logging_level.process_closure_primitives(options);  level.setDebugOptionsForCompilationLevel(options);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Flags  flags  =  logging_level.process_closure_primitives(options);  level.setDebugOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Flags  flags  =  logging_level.process_closure_primitives(options);  level.setDebugOptionsForCompilationLevel(options);	          Flags    flags    =    flags.process_closure_primitives(options);    level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
369	[BUG]  [BUGGY]  options.closurePass  |=!flags.prototype_closure_primitives;  Options.closurePass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.prototype_closure_primitives;  Options.closurePass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.prototype_closure_primitives;  Options.closurePass  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    Options.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
370	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  options.closurePass  =  false;  options.closurePass  =  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(flags.process_closure_primitives)  {  options.closurePass  =  false;  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	if(flags.process_closure_primitives)  {  options.closurePass  =  false;  options.closurePass  =  false;  }	  options.closurePass    =    false;    options.closurePass    =    false;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
371	[BUG]  [BUGGY]  if(flags.closure_primitives!=  null)  {  options.closurePass  =  false;  options.closurePass  =  false;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(flags.closure_primitives!=  null)  {  options.closurePass  =  false;  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	if(flags.closure_primitives!=  null)  {  options.closurePass  =  false;  options.closurePass  =  false;  }	  options.closurePass    =    false;    options.closurePass    =    false;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
372	[BUG]  [BUGGY]  if(flags.closure_primitives  ==  null)  {  options.closurePass  =  false;  options.closurePass  =  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(flags.closure_primitives  ==  null)  {  options.closurePass  =  false;  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	if(flags.closure_primitives  ==  null)  {  options.closurePass  =  false;  options.closurePass  =  false;  }	  options.closurePass    =    false;    options.closurePass    =    false;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
373	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  &&  flags.process_closure_primitives  +  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  &&  flags.process_closure_primitives  +  1;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.process_closure_primitives  &&  flags.process_closure_primitives  +  1;	  options.closurePass    |=!flags.process_closure_primitives    +    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
374	[BUG]  [BUGGY]  options.closurePass  |=  2;  [CE]  <identifier>  expected  [FE]    IllegalArgumentException    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  2;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  2;	  options.closurePass    |=    false;    if(flags.process_closure_primitives)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
375	[BUG]  [BUGGY]  options.closurePass  |=  3;  [CE]  <identifier>  expected  [FE]      IllegalArgumentException    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  3;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  3;	  options.closurePass    |=    false;    if(flags.process_closure_primitives)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
376	[BUG]  [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	if(flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  else  {  for(FormattingOption  wLevel  :  flags.process_closure_primitives)  {  level.setDebugOptionsForCompilationLevel(options);  }	          initOptionsFromFlags(options);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
377	[BUG]  [BUGGY]  options.closurePass  |=  flags.statement_closure_primitives.isEnabled(flags.statement_closure_primitives);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.statement_closure_primitives.isEnabled(flags.statement_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.statement_closure_primitives.isEnabled(flags.statement_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.statement_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
378	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.factory_closure_pass);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.factory_closure_pass);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.factory_closure_pass);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.closure_pass);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
379	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.compilation_pass);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.compilation_pass);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.compilation_pass);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.closure_pass);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
380	[BUG]  [BUGGY]  Flags  flags  =  flags.for_closure_primitives;  level.setDebugOptionsForCompilationLevel(options);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Flags  flags  =  flags.for_closure_primitives;  level.setDebugOptionsForCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Flags  flags  =  flags.for_closure_primitives;  level.setDebugOptionsForCompilationLevel(options);	  Flags    flags    =    flags.process_closure_primitives;    level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
381	[BUG]  [BUGGY]  options.closurePass  = "closure-pass ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  = "closure-pass ";  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  = "closure-pass ";	  options.closurePass    =   "n   ";    	non-compiled	[CE]  <identifier>  expected	9	None	replace
382	[BUG]  [BUGGY]  optionHandler  optionHandler  =  flags.process_closure_primitives;  options.closurePass  |=  false;  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  optionHandler  optionHandler  =  flags.process_closure_primitives;  options.closurePass  |=  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	optionHandler  optionHandler  =  flags.process_closure_primitives;  options.closurePass  |=  false;	  options.closurePass    |=    false;    OptionHandler    optionHandler    =    flags.process_closure_primitives;    options.closurePass    |=    false;    	non-compiled	[CE]  <identifier>  expected	95	None	replace
383	[BUG]  [BUGGY]  OptionsHandler  optionHandler  =  options.process_closure_primitives;  options.closurePass  |=  false;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  OptionsHandler  optionHandler  =  options.process_closure_primitives;  options.closurePass  |=  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	OptionsHandler  optionHandler  =  options.process_closure_primitives;  options.closurePass  |=  false;	  options.closurePass    |=    false;    OptionHandler    optionHandler    =    flags.process_closure_primitives;    options.closurePass    |=    false;    	non-compiled	[CE]  <identifier>  expected	95	None	replace
384	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.factory_closure_level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.factory_closure_level);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.factory_closure_level);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.warning_level);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
385	[BUG]  [BUGGY]  Option  option  =  options.closurePass  =  false;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Option  option  =  options.closurePass  =  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Option  option  =  options.closurePass  =  false;	  options.closurePass    =    false;    options.closurePass    =    false;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
386	[BUG]  [BUGGY]  Option  option  =  options.closurePass  =  true;  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Option  option  =  options.closurePass  =  true;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Option  option  =  options.closurePass  =  true;	  options.closurePass    =    false;    options.closurePass    =    false;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
387	[BUG]  [BUGGY]  options.closurePass  |=  flags.externs;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.externs;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.externs;	  options.closurePass    |=    null;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
388	[BUG]  [BUGGY]  options.closurePass  |=  flags.debug;  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.debug;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.debug;	  options.closurePass    |=    null;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
389	[BUG]  [BUGGY]  Options.closurePass  =  ' "';  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  =  ' "';  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  =  ' "';	  options.closurePass    ='   "';    	non-compiled	[CE]  <identifier>  expected	80	None	replace
390	[BUG]  [BUGGY]  optionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  options.closurePass  |=  false;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  optionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  options.closurePass  |=  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	optionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  options.closurePass  |=  false;	  options.closurePass    |=    false;    OptionHandler    optionHandler    =    new    OptionHandler(flags.process_closure_primitives);    options.closurePass    |=    false;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
391	[BUG]  [BUGGY]  options.closurePass  =  'n'  ||  flags.closure_pass  ==  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  'n'  ||  flags.closure_pass  ==  1;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  'n'  ||  flags.closure_pass  ==  1;	  options.closurePass    =    'n';    	non-compiled	[CE]  <identifier>  expected	10	None	replace
392	[BUG]  [BUGGY]  options.closurePass  =  'n'  ||  flags.closure_pass  ==  '0';  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  'n'  ||  flags.closure_pass  ==  '0';  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  'n'  ||  flags.closure_pass  ==  '0';	  options.closurePass    =    'n';    	non-compiled	[CE]  <identifier>  expected	10	None	replace
393	[BUG]  [BUGGY]  options.closurePass  |=  true;  OptionHandler.checkState(flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  true;  OptionHandler.checkState(flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    true;    OptionHandler.checkState(flags.process_closure_primitives);	  	non-compiled	[CE]  <identifier>  expected	29	None	add
394	[BUG]  [BUGGY]  options.closurePass  |=  true;  Solutions.closurePass  |=  true;  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  true;  Solutions.closurePass  |=  true;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=    true;    Solutions.closurePass  |=  true;	  	non-compiled	[CE]  <identifier>  expected	29	None	add
395	[BUG]  [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_prim  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  }  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_prim  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=!flags.process_closure_primitives;        if(flags.process_closure_primitives)    {    options.closurePass    |=!flags.process_closure_primitives;    }    if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_primitives;  if(flags.process_closure_primitives)  {  options.closurePass  |=!flags.process_closure_prim	  	non-compiled	[CE]  <identifier>  expected	72	None	add
396	[BUG]  [BUGGY]  options.closurePass  |=  flags.compilation_pass;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.compilation_pass;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.compilation_pass;	  options.closurePass    |=    1;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
397	[BUG]  [BUGGY]  options.closure_pass  =  flags.closure_pass;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closure_pass  =  flags.closure_pass;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closure_pass  =  flags.closure_pass;	  options.closurePass    =    flags.closure_pass;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
398	[BUG]  [BUGGY]  level.setCompilationLevel(options);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  level.setCompilationLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	level.setCompilationLevel(options);	          level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
399	[BUG]  [BUGGY]  Option.closurePass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Option.closurePass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Option.closurePass  |=!flags.process_closure_primitives;	  Options.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
400	[BUG]  [BUGGY]  Options.closurePass  |=!factory_closure_primitives;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  |=!factory_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  |=!factory_closure_primitives;	  Options.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
401	[BUG]  [BUGGY]  options.closurePass    |=    false;    options.closurePass  |=  false;  Option  options.closurePass  |=  false;  options.closurePass  |=  false;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    options.closurePass  |=  false;  Option  options.closurePass  |=  false;  options.closurePass  |=  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        options.closurePass    |=    false;    Option  options.closurePass  |=  false;  options.closurePass  |=  false;	  	non-compiled	[CE]  <identifier>  expected	16	None	add
402	[BUG]  [BUGGY]  options.closurePass    |=    false;    options.closurePass  |=  false;  options.closurePass  |=  false;  options.closurePass  |=  true;  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    options.closurePass  |=  false;  options.closurePass  |=  false;  options.closurePass  |=  true;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        options.closurePass    |=    false;    options.closurePass  |=  false;  options.closurePass  |=  true;	  	non-compiled	[CE]  <identifier>  expected	16	None	add
403	[BUG]  [BUGGY]  options.closurePass    |=    false;    options.closurePass  |=  false;  options.closurePass  |=  true;  options.closurePass  |=  false;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=    false;    options.closurePass  |=  false;  options.closurePass  |=  true;  options.closurePass  |=  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=        false;        options.closurePass    |=    false;    options.closurePass  |=  true;  options.closurePass  |=  false;	  	non-compiled	[CE]  <identifier>  expected	16	None	add
404	[BUG]  [BUGGY]  options.closurePass    =    false;    options.closurePass  =  false;  Option  option  =  options.closurePass  =  false;  options.closurePass  =  false;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    =    false;    options.closurePass  =  false;  Option  option  =  options.closurePass  =  false;  options.closurePass  =  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        =        false;        options.closurePass    =    false;    Option  option  =  options.closurePass  =  false;  options.closurePass  =  false;	  	non-compiled	[CE]  <identifier>  expected	47	None	add
405	[BUG]  [BUGGY]  options.closurePass    =    false;    options.closurePass  =  false;  Option  options.closurePass  =  false;  options.closurePass  =  false;  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    =    false;    options.closurePass  =  false;  Option  options.closurePass  =  false;  options.closurePass  =  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        =        false;        options.closurePass    =    false;    Option  options.closurePass  =  false;  options.closurePass  =  false;	  	non-compiled	[CE]  <identifier>  expected	47	None	add
406	[BUG]  [BUGGY]  options.closurePass    =    false;    options.closurePass  =  false;  options.closurePass  =  true;  options.closurePass  =  false;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    =    false;    options.closurePass  =  false;  options.closurePass  =  true;  options.closurePass  =  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        =        false;        options.closurePass    =    false;    options.closurePass  =  true;  options.closurePass  =  false;	  	non-compiled	[CE]  <identifier>  expected	47	None	add
407	[BUG]  [BUGGY]  Option.closurePass  =  true,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Option.closurePass  =  true,  flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Option.closurePass  =  true,  flags.process_closure_primitives);	  Option.closurePass    =    true;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
408	[BUG]  [BUGGY]  Option.closurePass  =  flags.closure_primitives;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Option.closurePass  =  flags.closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Option.closurePass  =  flags.closure_primitives;	  Option.closurePass    =    true;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
409	[BUG]  [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives  &&  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives  &&  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives  =  flags.process_closure_primitives  &&  flags.process_closure_primitives;	  flags.process_closure_primitives    =    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
410	[BUG]  [BUGGY]  options.closurePass  =  2;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  2;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  2;	  options.closurePass    =    0;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
411	[BUG]  [BUGGY]  options.closurePass  =  new  CompilerOption(flags,  wLevel.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  new  CompilerOption(flags,  wLevel.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  new  CompilerOption(flags,  wLevel.process_closure_primitives);	  options.closurePass    =    new    CompilerOption(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
412	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives?  0  :  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives?  0  :  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives?  0  :  flags.process_closure_primitives;	  options.closurePass    |=    0;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
413	[BUG]  [BUGGY]  options.closurepass  =  flags.closure_pass;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurepass  =  flags.closure_pass;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurepass  =  flags.closure_pass;	  options.closurePass    =    flags.closurepass;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
414	[BUG]  [BUGGY]  OptionPass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  OptionPass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	OptionPass  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    OptionPass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
415	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||  flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=!flags.process_closure_primitives  ||  flags.process_closure_primitives);	  options.closurePass    |=!flags.process_closure_primitives    ||    flags.debug);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
416	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.process_closure_primitives,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.process_closure_primitives,  flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.process_closure_primitives,  flags.process_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
417	[BUG]  [BUGGY]  Options.closurePass  =  new  CompilerOption(flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  =  new  CompilerOption(flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  =  new  CompilerOption(flags.process_closure_primitives);	  Options.closurePass    =    null;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
418	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags,  wLevel);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags,  wLevel);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags,  wLevel);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
419	[BUG]  [BUGGY]  flags.process_closure_primitives(options,  flags.warning_level);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives(options,  flags.warning_level);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives(options,  flags.warning_level);	  flags.process_closure_primitives(options);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
420	[BUG]  [BUGGY]  options.closurePass  =  this.flags.closure_pass;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  this.flags.closure_pass;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  this.flags.closure_pass;	  options.closurePass    =    flags.closurePass;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
421	[BUG]  [BUGGY]  flags.process_closure_primitives(flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives(flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives(flags.process_closure_primitives);	  flags.process_closure_primitives    =    flags.process_closure_primitives();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
422	[BUG]  [BUGGY]  option.closurePass  =  false;  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  option.closurePass  =  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	option.closurePass  =  false;	  options.closurePass    =    false;    if(flags.closurePass)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
423	[BUG]  [BUGGY]  optionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  optionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	optionHandler  optionHandler  =  new  OptionHandler(flags.process_closure_primitives);	  options.closurePass    |=    false;    OptionHandler    optionHandler    =    new    OptionHandler(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
424	[BUG]  [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  level.setDebugOptionsForCompilationLevel(options,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  level.setDebugOptionsForCompilationLevel(options,  flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                level.setDebugOptionsForCompilationLevel(options);    level.setDebugOptionsForCompilationLevel(options,  flags.process_closure_primitives);	  	non-compiled	[CE]  <identifier>  expected	57	None	add
425	[BUG]  [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  level.setDebugOptionsForWarningLevel(options);  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          level.setDebugOptionsForCompilationLevel(options);  level.setDebugOptionsForWarningLevel(options);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                level.setDebugOptionsForCompilationLevel(options);    level.setDebugOptionsForWarningLevel(options);	  	non-compiled	[CE]  <identifier>  expected	57	None	add
426	[BUG]  [BUGGY]  options.closurePass  =  wLevel.getPassword();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  wLevel.getPassword();  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  wLevel.getPassword();	  options.closurePass    =    wLevel;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
427	[BUG]  [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    options.closurePass  |=!flags.process_closure_primitives;  Option  optionPass  |=!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass    |=!flags.process_closure_primitives;    options.closurePass  |=!flags.process_closure_primitives;  Option  optionPass  |=!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass        |=!flags.process_closure_primitives;        options.closurePass    |=!flags.process_closure_primitives;    Option  optionPass  |=!flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	36	None	add
428	[BUG]  [BUGGY]  options.closurePass  =  new  CompilerOptions(flags.process_closure_primitives,  wLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  new  CompilerOptions(flags.process_closure_primitives,  wLevel);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  new  CompilerOptions(flags.process_closure_primitives,  wLevel);	  options.closurePass    =    new    CompilerOptions(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
429	[BUG]  [BUGGY]  options.closurePass  =  new  CompilerOptions(flags.process_closure_primitives,  flags);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  =  new  CompilerOptions(flags.process_closure_primitives,  flags);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  =  new  CompilerOptions(flags.process_closure_primitives,  flags);	  options.closurePass    =    new    CompilerOptions(flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
430	[BUG]  [BUGGY]          initOptionsFromFlags(options);  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          initOptionsFromFlags(options);  if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                initOptionsFromFlags(options);    if(!flags.process_closure_primitives)  {  initOptionsFromFlags(options);  }	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	add
431	[BUG]  [BUGGY]          initOptionsFromFlags(options);  for(FormattingOption  p  :  flags.process_closure_primitives)  {  p.applyToOptions(options);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          initOptionsFromFlags(options);  for(FormattingOption  p  :  flags.process_closure_primitives)  {  p.applyToOptions(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                initOptionsFromFlags(options);    for(FormattingOption  p  :  flags.process_closure_primitives)  {  p.applyToOptions(options);  }	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	add
432	[BUG]  [BUGGY]          initOptionsFromFlags(options);  for(FormattingOption  p  :  flags.process_closure_primitives)  {  p.initOptionsFromFlags(options);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]          initOptionsFromFlags(options);  for(FormattingOption  p  :  flags.process_closure_primitives)  {  p.initOptionsFromFlags(options);  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	                initOptionsFromFlags(options);    for(FormattingOption  p  :  flags.process_closure_primitives)  {  p.initOptionsFromFlags(options);  }	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	add
433	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives  ||  flags.process_closure_pass;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives  ||  flags.process_closure_pass;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives  ||  flags.process_closure_pass;	  options.closurePass    |=    flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
434	[BUG]  [BUGGY]  optionPass  =  false;  if(flags.closurePass!=  null)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  optionPass  =  false;  if(flags.closurePass!=  null)  {  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	optionPass  =  false;  if(flags.closurePass!=  null)  {  options.closurePass  =  false;  }	  options.closurePass    =    false;    if(flags.closurePass!=    false)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
435	[BUG]  [BUGGY]  optionPass  =  false;  if(flags.closurepass!=  false)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  optionPass  =  false;  if(flags.closurepass!=  false)  {  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	optionPass  =  false;  if(flags.closurepass!=  false)  {  options.closurePass  =  false;  }	  options.closurePass    =    false;    if(flags.closurePass!=    false)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
436	[BUG]  [BUGGY]  optionPass  =  false;  if(flags.closurePASS!=  false)  {  options.closurePass  =  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  optionPass  =  false;  if(flags.closurePASS!=  false)  {  options.closurePass  =  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	optionPass  =  false;  if(flags.closurePASS!=  false)  {  options.closurePass  =  false;  }	  options.closurePass    =    false;    if(flags.closurePass!=    false)    {    options.closurePass    =    false;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
437	[BUG]  [BUGGY]  Options.closurePass  =  true,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options.closurePass  =  true,  flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options.closurePass  =  true,  flags.process_closure_primitives);	  Options.closurePass    =    true;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
438	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.logging_level,  flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.logging_level,  flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags.logging_level,  flags.process_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.warning_level,    flags.process_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
439	[BUG]  [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags,  wLevel.logging_level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags,  wLevel.logging_level);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.process_closure_primitives.isEnabled(flags,  wLevel.logging_level);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.logging_level);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
440	[BUG]  [BUGGY]  if(options.closurePass  ==  0)  {  options.closurePass  |=  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(options.closurePass  ==  0)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	if(options.closurePass  ==  0)  {  options.closurePass  |=  false;  }	  options.closurePass    |=    false;    if(flags.process_closure_primitives)    {    if(options.closurePass    |=    false;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
441	[BUG]  [BUGGY]  if(options.closurePass!=  0)  {  options.closurePass  |=  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(options.closurePass!=  0)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	if(options.closurePass!=  0)  {  options.closurePass  |=  false;  }	  options.closurePass    |=    false;    if(flags.process_closure_primitives)    {    if(options.closurePass    |=    false;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
442	[BUG]  [BUGGY]  if(options.closurePass  ==  null)  {  options.closurePass  |=  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  if(options.closurePass  ==  null)  {  options.closurePass  |=  false;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	if(options.closurePass  ==  null)  {  options.closurePass  |=  false;  }	  options.closurePass    |=    false;    if(flags.process_closure_primitives)    {    if(options.closurePass    |=    false;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
443	[BUG]  [BUGGY]  Option  option  =  flags.process_closure_primitives;  option.closurePass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Option  option  =  flags.process_closure_primitives;  option.closurePass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Option  option  =  flags.process_closure_primitives;  option.closurePass  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    option.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
444	[BUG]  [BUGGY]  options.closurePath  |=  false;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePath  |=  false;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePath  |=  false;	  options.closurePass    |=    false;    if(flags.closurePass    |=    false)    {    options.closurePass    |=    false;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
445	[BUG]  [BUGGY]  options.closurePass  |=  flags.for_closure_primitives.isEnabled(flags.factory_closure_primitives);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.for_closure_primitives.isEnabled(flags.factory_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.for_closure_primitives.isEnabled(flags.factory_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.factory_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
446	[BUG]  [BUGGY]  Options  options  =  flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options  options  =  flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options  options  =  flags.process_closure_primitives;  options.closurePass  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    solutions.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
447	[BUG]  [BUGGY]  Options  options  =  flags.process_closure_primitives  |=!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  Options  options  =  flags.process_closure_primitives  |=!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	Options  options  =  flags.process_closure_primitives  |=!flags.process_closure_primitives;	  options.closurePass    |=!flags.process_closure_primitives;    solutions.closurePass    |=!flags.process_closure_primitives;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
448	[BUG]  [BUGGY]  options.closurePass  |=  flags.prototype_closure_primitives.isEnabled(flags.process_closure_primitives);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  flags.prototype_closure_primitives.isEnabled(flags.process_closure_primitives);  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  flags.prototype_closure_primitives.isEnabled(flags.process_closure_primitives);	  options.closurePass    |=    flags.process_closure_primitives.isEnabled(flags.prototype_closure_primitives);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
449	[BUG]  [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  for(FormattingOption  p  :  flags.process_closure_primitives)  {  flags.process_closure_primitives  =  flags.process_closure_primitives;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  for(FormattingOption  p  :  flags.process_closure_primitives)  {  flags.process_closure_primitives  =  flags.process_closure_primitives;  }  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives    =    flags.process_closure_primitives;    for(FormattingOption  p  :  flags.process_closure_primitives)  {  flags.process_closure_primitives  =  flags.process_closure_primitives;  }	  	non-compiled	[CE]  <identifier>  expected	1	None	add
450	[BUG]  [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  Flags  flags  =  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  Flags  flags  =  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives    =    flags.process_closure_primitives;    Flags  flags  =  flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	1	None	add
451	[BUG]  [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  for(FormattingOption  p  :  flags.process_closure_primitives)  {  flags.process_closure_primitives  =  flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.process_closure_primitives  =  flags.process_closure_primitives;  for(FormattingOption  p  :  flags.process_closure_primitives)  {  flags.process_closure_primitives  =  flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.process_closure_primitives    =    flags.process_closure_primitives;    for(FormattingOption  p  :  flags.process_closure_primitives)  {  flags.process_closure_primitives  =  flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	1	None	add
452	[BUG]  [BUGGY]  options.closure_pass  |=!flags.process_closure_primitives  ||!flags.process_closure_pass;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closure_pass  |=!flags.process_closure_primitives  ||!flags.process_closure_pass;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closure_pass  |=!flags.process_closure_primitives  ||!flags.process_closure_pass;	  options.closurePass    |=!flags.process_closure_primitives    ||!flags.process_closure_pass;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
453	[BUG]  [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  option.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  option.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass    |=!flags.process_closure_primitives    ||!flags.process_closure_primitives;    option.closurePass  |=!flags.process_closure_primitives  ||!flags.process_closure_primitives;	  	non-compiled	[CE]  <identifier>  expected	13	None	add
454	[BUG]  [BUGGY]  options.closurePass  |=  FALSE;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  options.closurePass  |=  FALSE;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	options.closurePass  |=  FALSE;	  options.closurePass    |=    true;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
455	[BUG]  [BUGGY]  flags.logging_level  =  options;  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (flags.debug)  {  level.setDebugOptionsForCompilationLevel(options);  }  WarningLevel  wLevel  =  flags.warning_level;  wLevel.setOptionsForWarningLevel(options);  for  (FormattingOption  formattingOption  :  flags.formatting)  {  formattingOption.applyToOptions(options);  }  if  (flags.process_closure_primitives)  {      [BUGGY]  flags.logging_level  =  options;  [BUGGY]      }  initOptionsFromFlags(options);  return  options;  }  [CLASS]  CommandLineRunner  Flags  BooleanOptionHandler  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilation_level  level  boolean  compute_phase_ordering  create_name_map_files  debug  print_ast  print_pass_graph  print_tree  process_closure_primitives  third_party  use_only_custom_externs  Set  FALSES  TRUES  WarningLevel  wLevel  warning_level  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  formattingOption  CompilerOptions  options  List  define  externs  formatting  js  jscomp_error  jscomp_off  jscomp_warning  module  module_wrapper  processedArgs  String  arg  charset  create_source_map  js_output_file  logging_level  lowerParam  module_output_path_prefix  output_wrapper  output_wrapper_marker  param  property_map_input_file  property_map_output_file  value  variable_map_input_file  variable_map_output_file  Flags  flags  DevMode  jscomp_dev_mode  int  summary_detail_level  	projects/Closure101/src/com/google/javascript/jscomp/CommandLineRunner.java	0.2182178902359924	434	434	1	replace	flags.logging_level  =  options;	          logging_level.setDebugOptionsForCompilationLevel(options);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
